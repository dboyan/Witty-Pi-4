
/private/var/folders/_l/dxn9d8zj65q14_wldmqxjbxr0000gn/T/arduino/sketches/589C4ACA2D8DEE76B0FBB9D0F5FE3FEF/WittyPi4.ino.elf:     file format elf32-avr


Disassembly of section .text:

00000000 <__vectors>:
__vectors():
       0:	24 c0       	rjmp	.+72     	; 0x4a <__ctors_end>
       2:	48 c0       	rjmp	.+144    	; 0x94 <__bad_interrupt>
       4:	74 c5       	rjmp	.+2792   	; 0xaee <__vector_2>
       6:	f2 c4       	rjmp	.+2532   	; 0x9ec <__vector_3>
       8:	1c c8       	rjmp	.-4040   	; 0xfffff042 <__eeprom_end+0xff7ef042>
       a:	44 c0       	rjmp	.+136    	; 0x94 <__bad_interrupt>
       c:	43 c0       	rjmp	.+134    	; 0x94 <__bad_interrupt>
       e:	42 c0       	rjmp	.+132    	; 0x94 <__bad_interrupt>
      10:	a8 c4       	rjmp	.+2384   	; 0x962 <__vector_8>
      12:	40 c0       	rjmp	.+128    	; 0x94 <__bad_interrupt>
      14:	3f c0       	rjmp	.+126    	; 0x94 <__bad_interrupt>
      16:	3e c0       	rjmp	.+124    	; 0x94 <__bad_interrupt>
      18:	3d c0       	rjmp	.+122    	; 0x94 <__bad_interrupt>
      1a:	3c c0       	rjmp	.+120    	; 0x94 <__bad_interrupt>
      1c:	3b c0       	rjmp	.+118    	; 0x94 <__bad_interrupt>
      1e:	3a c0       	rjmp	.+116    	; 0x94 <__bad_interrupt>
      20:	39 c0       	rjmp	.+114    	; 0x94 <__bad_interrupt>
      22:	38 c0       	rjmp	.+112    	; 0x94 <__bad_interrupt>
      24:	37 c0       	rjmp	.+110    	; 0x94 <__bad_interrupt>
      26:	36 c0       	rjmp	.+108    	; 0x94 <__bad_interrupt>
      28:	35 c0       	rjmp	.+106    	; 0x94 <__bad_interrupt>
      2a:	34 c0       	rjmp	.+104    	; 0x94 <__bad_interrupt>
      2c:	33 c0       	rjmp	.+102    	; 0x94 <__bad_interrupt>
      2e:	32 c0       	rjmp	.+100    	; 0x94 <__bad_interrupt>
      30:	31 c0       	rjmp	.+98     	; 0x94 <__bad_interrupt>
      32:	30 c0       	rjmp	.+96     	; 0x94 <__bad_interrupt>
      34:	2f c0       	rjmp	.+94     	; 0x94 <__bad_interrupt>
      36:	2e c0       	rjmp	.+92     	; 0x94 <__bad_interrupt>
      38:	2d c0       	rjmp	.+90     	; 0x94 <__bad_interrupt>
      3a:	84 c3       	rjmp	.+1800   	; 0x744 <__vector_29>

0000003c <__trampolines_end>:
__trampolines_start():
      3c:	01 02       	muls	r16, r17
      3e:	04 80       	ldd	r0, Z+4	; 0x04
      40:	40 20       	and	r4, r0
      42:	10 08       	sbc	r1, r0
      44:	04 02       	muls	r16, r20
      46:	01 08       	sbc	r0, r1

00000048 <__ctors_start>:
__ctors_start():
      48:	af 0b       	sbc	r26, r31

0000004a <__ctors_end>:
__dtors_end():
      4a:	11 24       	eor	r1, r1
      4c:	1f be       	out	0x3f, r1	; 63
      4e:	cf ef       	ldi	r28, 0xFF	; 255
      50:	d2 e0       	ldi	r29, 0x02	; 2
      52:	de bf       	out	0x3e, r29	; 62
      54:	cd bf       	out	0x3d, r28	; 61

00000056 <__do_copy_data>:
__do_copy_data():
/Users/jenkins/jenkins/workspace/avr-gcc-staging/label/mac-mini/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2409
      56:	11 e0       	ldi	r17, 0x01	; 1
/Users/jenkins/jenkins/workspace/avr-gcc-staging/label/mac-mini/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2410
      58:	a0 e0       	ldi	r26, 0x00	; 0
/Users/jenkins/jenkins/workspace/avr-gcc-staging/label/mac-mini/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2411
      5a:	b1 e0       	ldi	r27, 0x01	; 1
/Users/jenkins/jenkins/workspace/avr-gcc-staging/label/mac-mini/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2412
      5c:	e4 e9       	ldi	r30, 0x94	; 148
/Users/jenkins/jenkins/workspace/avr-gcc-staging/label/mac-mini/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2413
      5e:	fe e1       	ldi	r31, 0x1E	; 30
/Users/jenkins/jenkins/workspace/avr-gcc-staging/label/mac-mini/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2414
      60:	02 c0       	rjmp	.+4      	; 0x66 <__do_copy_data+0x10>
/Users/jenkins/jenkins/workspace/avr-gcc-staging/label/mac-mini/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2417
      62:	05 90       	lpm	r0, Z+
/Users/jenkins/jenkins/workspace/avr-gcc-staging/label/mac-mini/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2422
      64:	0d 92       	st	X+, r0
/Users/jenkins/jenkins/workspace/avr-gcc-staging/label/mac-mini/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2424
      66:	a2 32       	cpi	r26, 0x22	; 34
/Users/jenkins/jenkins/workspace/avr-gcc-staging/label/mac-mini/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2425
      68:	b1 07       	cpc	r27, r17
/Users/jenkins/jenkins/workspace/avr-gcc-staging/label/mac-mini/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2426
      6a:	d9 f7       	brne	.-10     	; 0x62 <__do_copy_data+0xc>

0000006c <__do_clear_bss>:
__do_clear_bss():
/Users/jenkins/jenkins/workspace/avr-gcc-staging/label/mac-mini/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2441
      6c:	21 e0       	ldi	r18, 0x01	; 1
/Users/jenkins/jenkins/workspace/avr-gcc-staging/label/mac-mini/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2442
      6e:	a2 e2       	ldi	r26, 0x22	; 34
/Users/jenkins/jenkins/workspace/avr-gcc-staging/label/mac-mini/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2443
      70:	b1 e0       	ldi	r27, 0x01	; 1
/Users/jenkins/jenkins/workspace/avr-gcc-staging/label/mac-mini/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2444
      72:	01 c0       	rjmp	.+2      	; 0x76 <.do_clear_bss_start>

00000074 <.do_clear_bss_loop>:
/Users/jenkins/jenkins/workspace/avr-gcc-staging/label/mac-mini/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2446
      74:	1d 92       	st	X+, r1

00000076 <.do_clear_bss_start>:
/Users/jenkins/jenkins/workspace/avr-gcc-staging/label/mac-mini/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2448
      76:	a0 3e       	cpi	r26, 0xE0	; 224
/Users/jenkins/jenkins/workspace/avr-gcc-staging/label/mac-mini/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2449
      78:	b2 07       	cpc	r27, r18
/Users/jenkins/jenkins/workspace/avr-gcc-staging/label/mac-mini/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2450
      7a:	e1 f7       	brne	.-8      	; 0x74 <.do_clear_bss_loop>

0000007c <__do_global_ctors>:
__do_global_ctors():
/Users/jenkins/jenkins/workspace/avr-gcc-staging/label/mac-mini/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2466
      7c:	10 e0       	ldi	r17, 0x00	; 0
/Users/jenkins/jenkins/workspace/avr-gcc-staging/label/mac-mini/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2467
      7e:	c5 e2       	ldi	r28, 0x25	; 37
/Users/jenkins/jenkins/workspace/avr-gcc-staging/label/mac-mini/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2468
      80:	d0 e0       	ldi	r29, 0x00	; 0
/Users/jenkins/jenkins/workspace/avr-gcc-staging/label/mac-mini/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2472
      82:	03 c0       	rjmp	.+6      	; 0x8a <__do_global_ctors+0xe>
/Users/jenkins/jenkins/workspace/avr-gcc-staging/label/mac-mini/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2474
      84:	21 97       	sbiw	r28, 0x01	; 1
/Users/jenkins/jenkins/workspace/avr-gcc-staging/label/mac-mini/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2480
      86:	fe 01       	movw	r30, r28
/Users/jenkins/jenkins/workspace/avr-gcc-staging/label/mac-mini/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2481
      88:	fd de       	rcall	.-518    	; 0xfffffe84 <__eeprom_end+0xff7efe84>
/Users/jenkins/jenkins/workspace/avr-gcc-staging/label/mac-mini/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2483
      8a:	c4 32       	cpi	r28, 0x24	; 36
/Users/jenkins/jenkins/workspace/avr-gcc-staging/label/mac-mini/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2484
      8c:	d1 07       	cpc	r29, r17
/Users/jenkins/jenkins/workspace/avr-gcc-staging/label/mac-mini/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2489
      8e:	d1 f7       	brne	.-12     	; 0x84 <__do_global_ctors+0x8>
      90:	87 db       	rcall	.-2290   	; 0xfffff7a0 <__eeprom_end+0xff7ef7a0>
      92:	fe ce       	rjmp	.-516    	; 0xfffffe90 <__eeprom_end+0xff7efe90>

00000094 <__bad_interrupt>:
__vector_22():
      94:	b5 cf       	rjmp	.-150    	; 0x0 <__vectors>

00000096 <digitalRead>:
digitalRead():
/Users/ziyue/Library/Arduino15/packages/ATTinyCore/hardware/avr/1.5.2/cores/tinymodern/wiring_digital.c:248
#endif

int digitalRead(uint8_t pin)
{
  if (pin&128) {pin=analogInputToDigitalPin((pin&127));}
  uint8_t bit = digitalPinToBitMask(pin);
      96:	e8 2f       	mov	r30, r24
      98:	f0 e0       	ldi	r31, 0x00	; 0
      9a:	e4 5c       	subi	r30, 0xC4	; 196
      9c:	ff 4f       	sbci	r31, 0xFF	; 255
      9e:	e4 91       	lpm	r30, Z
/Users/ziyue/Library/Arduino15/packages/ATTinyCore/hardware/avr/1.5.2/cores/tinymodern/wiring_digital.c:259
  // "read" should *NEVER* change the behavior of the thing you're using it on.
  // That's why it's called "read" not "write". As an added bonus, sets the
  // stage for auto-fast-digitalRead() for compile time known pins.
  // turnOffPWM( pin );

  if (*portInputRegister(port) & bit) return HIGH;
      a0:	a6 e3       	ldi	r26, 0x36	; 54
      a2:	b0 e0       	ldi	r27, 0x00	; 0
/Users/ziyue/Library/Arduino15/packages/ATTinyCore/hardware/avr/1.5.2/cores/tinymodern/wiring_digital.c:249

int digitalRead(uint8_t pin)
{
  if (pin&128) {pin=analogInputToDigitalPin((pin&127));}
  uint8_t bit = digitalPinToBitMask(pin);
  uint8_t port = digitalPinToPort(pin);
      a4:	83 30       	cpi	r24, 0x03	; 3
      a6:	10 f0       	brcs	.+4      	; 0xac <digitalRead+0x16>
/Users/ziyue/Library/Arduino15/packages/ATTinyCore/hardware/avr/1.5.2/cores/tinymodern/wiring_digital.c:259
  // "read" should *NEVER* change the behavior of the thing you're using it on.
  // That's why it's called "read" not "write". As an added bonus, sets the
  // stage for auto-fast-digitalRead() for compile time known pins.
  // turnOffPWM( pin );

  if (*portInputRegister(port) & bit) return HIGH;
      a8:	a9 e3       	ldi	r26, 0x39	; 57
      aa:	b0 e0       	ldi	r27, 0x00	; 0
      ac:	8c 91       	ld	r24, X
      ae:	e8 23       	and	r30, r24
      b0:	81 e0       	ldi	r24, 0x01	; 1
      b2:	90 e0       	ldi	r25, 0x00	; 0
      b4:	11 f4       	brne	.+4      	; 0xba <digitalRead+0x24>
      b6:	90 e0       	ldi	r25, 0x00	; 0
      b8:	80 e0       	ldi	r24, 0x00	; 0
/Users/ziyue/Library/Arduino15/packages/ATTinyCore/hardware/avr/1.5.2/cores/tinymodern/wiring_digital.c:261
  return LOW;
}
      ba:	08 95       	ret

000000bc <digitalWrite>:
digitalWrite():
/Users/ziyue/Library/Arduino15/packages/ATTinyCore/hardware/avr/1.5.2/cores/tinymodern/wiring_digital.c:181
}

#if defined(__AVR_ATtinyX41__ ) || defined(__AVR_ATtiny1634__) || defined(__AVR_ATtiny828__)

void digitalWrite(uint8_t pin, uint8_t val)
{
      bc:	cf 93       	push	r28
      be:	df 93       	push	r29
/Users/ziyue/Library/Arduino15/packages/ATTinyCore/hardware/avr/1.5.2/cores/tinymodern/wiring_digital.c:185
  #ifndef __AVR_ATtiny828__
  if (pin&64) {pin=analogInputToDigitalPin((pin&63));}
  #endif
  uint8_t bit = digitalPinToBitMask(pin);
      c0:	e8 2f       	mov	r30, r24
      c2:	f0 e0       	ldi	r31, 0x00	; 0
      c4:	e4 5c       	subi	r30, 0xC4	; 196
      c6:	ff 4f       	sbci	r31, 0xFF	; 255
      c8:	e4 91       	lpm	r30, Z
/Users/ziyue/Library/Arduino15/packages/ATTinyCore/hardware/avr/1.5.2/cores/tinymodern/wiring_digital.c:186
  uint8_t port = digitalPinToPort(pin);
      ca:	83 30       	cpi	r24, 0x03	; 3
      cc:	01 f1       	breq	.+64     	; 0x10e <digitalWrite+0x52>
turnOffPWM():
/Users/ziyue/Library/Arduino15/packages/ATTinyCore/hardware/avr/1.5.2/cores/tinymodern/wiring_digital.c:155
    }
    else
  #endif

  #if CORE_PWM_COUNT >= 5
    if ( pin == CORE_PWM4_PIN )
      ce:	82 30       	cpi	r24, 0x02	; 2
      d0:	29 f4       	brne	.+10     	; 0xdc <digitalWrite+0x20>
Timer2_SetCompareOutputModeA():
/Users/ziyue/Library/Arduino15/packages/ATTinyCore/hardware/avr/1.5.2/cores/tinymodern/core_timers.h:511
}
timer2_com_t;

__attribute__((always_inline)) static inline void Timer2_SetCompareOutputModeA( timer2_com_t com )
{
  TCCR2A = (TCCR2A & ~MASK2(COM2A1,COM2A0)) | (com << COM2A0);
      d2:	80 91 ca 00 	lds	r24, 0x00CA	; 0x8000ca <__DATA_REGION_ORIGIN__+0x6a>
      d6:	8f 73       	andi	r24, 0x3F	; 63
      d8:	80 93 ca 00 	sts	0x00CA, r24	; 0x8000ca <__DATA_REGION_ORIGIN__+0x6a>
digitalWrite():
/Users/ziyue/Library/Arduino15/packages/ATTinyCore/hardware/avr/1.5.2/cores/tinymodern/wiring_digital.c:195

  // If the pin that support PWM output, we need to turn it off
  // before doing a digital write.
  turnOffPWM( pin );

  out = portOutputRegister(port);
      dc:	c8 e3       	ldi	r28, 0x38	; 56
      de:	d0 e0       	ldi	r29, 0x00	; 0
/Users/ziyue/Library/Arduino15/packages/ATTinyCore/hardware/avr/1.5.2/cores/tinymodern/wiring_digital.c:196
  pue = portPullupRegister(port);
      e0:	a2 e6       	ldi	r26, 0x62	; 98
      e2:	b0 e0       	ldi	r27, 0x00	; 0
      e4:	9e 2f       	mov	r25, r30
      e6:	90 95       	com	r25
/Users/ziyue/Library/Arduino15/packages/ATTinyCore/hardware/avr/1.5.2/cores/tinymodern/wiring_digital.c:199

  if (val == LOW) {
    uint8_t oldSREG = SREG;
      e8:	2f b7       	in	r18, 0x3f	; 63
/Users/ziyue/Library/Arduino15/packages/ATTinyCore/hardware/avr/1.5.2/cores/tinymodern/wiring_digital.c:198
  turnOffPWM( pin );

  out = portOutputRegister(port);
  pue = portPullupRegister(port);

  if (val == LOW) {
      ea:	61 11       	cpse	r22, r1
      ec:	0b c0       	rjmp	.+22     	; 0x104 <digitalWrite+0x48>
/Users/ziyue/Library/Arduino15/packages/ATTinyCore/hardware/avr/1.5.2/cores/tinymodern/wiring_digital.c:200
    uint8_t oldSREG = SREG;
    cli();
      ee:	f8 94       	cli
/Users/ziyue/Library/Arduino15/packages/ATTinyCore/hardware/avr/1.5.2/cores/tinymodern/wiring_digital.c:201
    *out &= ~bit;
      f0:	88 81       	ld	r24, Y
      f2:	89 23       	and	r24, r25
      f4:	88 83       	st	Y, r24
/Users/ziyue/Library/Arduino15/packages/ATTinyCore/hardware/avr/1.5.2/cores/tinymodern/wiring_digital.c:208
    SREG = oldSREG;
  } else {
    uint8_t oldSREG = SREG;
    cli();
    *out |= bit;
    *pue &= ~bit;
      f6:	8c 91       	ld	r24, X
      f8:	89 23       	and	r24, r25
      fa:	8c 93       	st	X, r24
/Users/ziyue/Library/Arduino15/packages/ATTinyCore/hardware/avr/1.5.2/cores/tinymodern/wiring_digital.c:209
    SREG = oldSREG;
      fc:	2f bf       	out	0x3f, r18	; 63
/Users/ziyue/Library/Arduino15/packages/ATTinyCore/hardware/avr/1.5.2/cores/tinymodern/wiring_digital.c:211
  }
}
      fe:	df 91       	pop	r29
     100:	cf 91       	pop	r28
     102:	08 95       	ret
/Users/ziyue/Library/Arduino15/packages/ATTinyCore/hardware/avr/1.5.2/cores/tinymodern/wiring_digital.c:206
    *out &= ~bit;
    *pue &= ~bit; //Turn off the pullups
    SREG = oldSREG;
  } else {
    uint8_t oldSREG = SREG;
    cli();
     104:	f8 94       	cli
/Users/ziyue/Library/Arduino15/packages/ATTinyCore/hardware/avr/1.5.2/cores/tinymodern/wiring_digital.c:207
    *out |= bit;
     106:	88 81       	ld	r24, Y
     108:	e8 2b       	or	r30, r24
     10a:	e8 83       	st	Y, r30
     10c:	f4 cf       	rjmp	.-24     	; 0xf6 <digitalWrite+0x3a>
Timer2_SetCompareOutputModeB():
/Users/ziyue/Library/Arduino15/packages/ATTinyCore/hardware/avr/1.5.2/cores/tinymodern/core_timers.h:516
}

__attribute__((always_inline)) static inline void Timer2_SetCompareOutputModeB( timer2_com_t com )
{
  TCCR2A = (TCCR2A & ~MASK2(COM2B1,COM2B0)) | (com << COM2B0);
     10e:	80 91 ca 00 	lds	r24, 0x00CA	; 0x8000ca <__DATA_REGION_ORIGIN__+0x6a>
     112:	8f 7c       	andi	r24, 0xCF	; 207
     114:	80 93 ca 00 	sts	0x00CA, r24	; 0x8000ca <__DATA_REGION_ORIGIN__+0x6a>
digitalWrite():
/Users/ziyue/Library/Arduino15/packages/ATTinyCore/hardware/avr/1.5.2/cores/tinymodern/wiring_digital.c:195

  // If the pin that support PWM output, we need to turn it off
  // before doing a digital write.
  turnOffPWM( pin );

  out = portOutputRegister(port);
     118:	cb e3       	ldi	r28, 0x3B	; 59
     11a:	d0 e0       	ldi	r29, 0x00	; 0
/Users/ziyue/Library/Arduino15/packages/ATTinyCore/hardware/avr/1.5.2/cores/tinymodern/wiring_digital.c:196
  pue = portPullupRegister(port);
     11c:	a3 e6       	ldi	r26, 0x63	; 99
     11e:	b0 e0       	ldi	r27, 0x00	; 0
     120:	e1 cf       	rjmp	.-62     	; 0xe4 <digitalWrite+0x28>

00000122 <pinMode>:
pinMode():
/Users/ziyue/Library/Arduino15/packages/ATTinyCore/hardware/avr/1.5.2/cores/tinymodern/wiring_digital.c:37
#include "core_timers.h"
#include "PwmTimer.h"

#if defined(__AVR_ATtinyX41__ ) || defined(__AVR_ATtiny1634__) || defined(__AVR_ATtiny828__)
void pinMode(uint8_t pin, uint8_t mode)
{
     122:	cf 93       	push	r28
     124:	df 93       	push	r29
/Users/ziyue/Library/Arduino15/packages/ATTinyCore/hardware/avr/1.5.2/cores/tinymodern/wiring_digital.c:39
  #ifndef __AVR_ATtiny828__
  if (pin&64) {pin=analogInputToDigitalPin((pin & 63));}
     126:	86 ff       	sbrs	r24, 6
     128:	04 c0       	rjmp	.+8      	; 0x132 <pinMode+0x10>
     12a:	8f 73       	andi	r24, 0x3F	; 63
     12c:	9a e0       	ldi	r25, 0x0A	; 10
     12e:	98 1b       	sub	r25, r24
     130:	89 2f       	mov	r24, r25
/Users/ziyue/Library/Arduino15/packages/ATTinyCore/hardware/avr/1.5.2/cores/tinymodern/wiring_digital.c:41
  #endif
  uint8_t bit = digitalPinToBitMask(pin);
     132:	e8 2f       	mov	r30, r24
     134:	f0 e0       	ldi	r31, 0x00	; 0
     136:	e4 5c       	subi	r30, 0xC4	; 196
     138:	ff 4f       	sbci	r31, 0xFF	; 255
     13a:	e4 91       	lpm	r30, Z
/Users/ziyue/Library/Arduino15/packages/ATTinyCore/hardware/avr/1.5.2/cores/tinymodern/wiring_digital.c:42
  uint8_t port = digitalPinToPort(pin);
     13c:	8b 30       	cpi	r24, 0x0B	; 11
     13e:	11 f0       	breq	.+4      	; 0x144 <pinMode+0x22>
     140:	83 30       	cpi	r24, 0x03	; 3
     142:	d0 f4       	brcc	.+52     	; 0x178 <pinMode+0x56>
/Users/ziyue/Library/Arduino15/packages/ATTinyCore/hardware/avr/1.5.2/cores/tinymodern/wiring_digital.c:49

  if (port == NOT_A_PIN) return;

  // JWS: can I let the optimizer do this?
  reg = portModeRegister(port);
  out = portOutputRegister(port);
     144:	88 e3       	ldi	r24, 0x38	; 56
     146:	90 e0       	ldi	r25, 0x00	; 0
/Users/ziyue/Library/Arduino15/packages/ATTinyCore/hardware/avr/1.5.2/cores/tinymodern/wiring_digital.c:42
{
  #ifndef __AVR_ATtiny828__
  if (pin&64) {pin=analogInputToDigitalPin((pin & 63));}
  #endif
  uint8_t bit = digitalPinToBitMask(pin);
  uint8_t port = digitalPinToPort(pin);
     148:	a7 e3       	ldi	r26, 0x37	; 55
     14a:	b0 e0       	ldi	r27, 0x00	; 0
/Users/ziyue/Library/Arduino15/packages/ATTinyCore/hardware/avr/1.5.2/cores/tinymodern/wiring_digital.c:50
  if (port == NOT_A_PIN) return;

  // JWS: can I let the optimizer do this?
  reg = portModeRegister(port);
  out = portOutputRegister(port);
  pue = portPullupRegister(port);
     14c:	c2 e6       	ldi	r28, 0x62	; 98
     14e:	d0 e0       	ldi	r29, 0x00	; 0
     150:	2e 2f       	mov	r18, r30
     152:	20 95       	com	r18
/Users/ziyue/Library/Arduino15/packages/ATTinyCore/hardware/avr/1.5.2/cores/tinymodern/wiring_digital.c:52

  if (mode == INPUT) {
     154:	61 11       	cpse	r22, r1
     156:	17 c0       	rjmp	.+46     	; 0x186 <pinMode+0x64>
/Users/ziyue/Library/Arduino15/packages/ATTinyCore/hardware/avr/1.5.2/cores/tinymodern/wiring_digital.c:53
    uint8_t oldSREG = SREG;
     158:	4f b7       	in	r20, 0x3f	; 63
/Users/ziyue/Library/Arduino15/packages/ATTinyCore/hardware/avr/1.5.2/cores/tinymodern/wiring_digital.c:54
                cli();
     15a:	f8 94       	cli
/Users/ziyue/Library/Arduino15/packages/ATTinyCore/hardware/avr/1.5.2/cores/tinymodern/wiring_digital.c:55
    *reg &= ~bit;
     15c:	3c 91       	ld	r19, X
     15e:	32 23       	and	r19, r18
     160:	3c 93       	st	X, r19
/Users/ziyue/Library/Arduino15/packages/ATTinyCore/hardware/avr/1.5.2/cores/tinymodern/wiring_digital.c:56
    *out &= ~bit;
     162:	dc 01       	movw	r26, r24
     164:	3c 91       	ld	r19, X
     166:	32 23       	and	r19, r18
     168:	3c 93       	st	X, r19
/Users/ziyue/Library/Arduino15/packages/ATTinyCore/hardware/avr/1.5.2/cores/tinymodern/wiring_digital.c:57
    *pue &= ~bit;
     16a:	88 81       	ld	r24, Y
     16c:	28 23       	and	r18, r24
     16e:	28 83       	st	Y, r18
/Users/ziyue/Library/Arduino15/packages/ATTinyCore/hardware/avr/1.5.2/cores/tinymodern/wiring_digital.c:65
    uint8_t oldSREG = SREG;
                cli();
    *reg &= ~bit;
    *out |= bit;
    *pue |= bit;
    SREG = oldSREG;
     170:	4f bf       	out	0x3f, r20	; 63
/Users/ziyue/Library/Arduino15/packages/ATTinyCore/hardware/avr/1.5.2/cores/tinymodern/wiring_digital.c:73
                cli();
    *pue &= ~bit;
    *reg |= bit;
    SREG = oldSREG;
  }
}
     172:	df 91       	pop	r29
     174:	cf 91       	pop	r28
     176:	08 95       	ret
/Users/ziyue/Library/Arduino15/packages/ATTinyCore/hardware/avr/1.5.2/cores/tinymodern/wiring_digital.c:49

  if (port == NOT_A_PIN) return;

  // JWS: can I let the optimizer do this?
  reg = portModeRegister(port);
  out = portOutputRegister(port);
     178:	8b e3       	ldi	r24, 0x3B	; 59
     17a:	90 e0       	ldi	r25, 0x00	; 0
/Users/ziyue/Library/Arduino15/packages/ATTinyCore/hardware/avr/1.5.2/cores/tinymodern/wiring_digital.c:48
  volatile uint8_t *reg, *out, *pue;

  if (port == NOT_A_PIN) return;

  // JWS: can I let the optimizer do this?
  reg = portModeRegister(port);
     17c:	aa e3       	ldi	r26, 0x3A	; 58
     17e:	b0 e0       	ldi	r27, 0x00	; 0
/Users/ziyue/Library/Arduino15/packages/ATTinyCore/hardware/avr/1.5.2/cores/tinymodern/wiring_digital.c:50
  out = portOutputRegister(port);
  pue = portPullupRegister(port);
     180:	c3 e6       	ldi	r28, 0x63	; 99
     182:	d0 e0       	ldi	r29, 0x00	; 0
     184:	e5 cf       	rjmp	.-54     	; 0x150 <pinMode+0x2e>
/Users/ziyue/Library/Arduino15/packages/ATTinyCore/hardware/avr/1.5.2/cores/tinymodern/wiring_digital.c:59
                cli();
    *reg &= ~bit;
    *out &= ~bit;
    *pue &= ~bit;
    SREG = oldSREG;
  } else if (mode == INPUT_PULLUP) {
     186:	62 30       	cpi	r22, 0x02	; 2
     188:	69 f4       	brne	.+26     	; 0x1a4 <pinMode+0x82>
/Users/ziyue/Library/Arduino15/packages/ATTinyCore/hardware/avr/1.5.2/cores/tinymodern/wiring_digital.c:60
    uint8_t oldSREG = SREG;
     18a:	4f b7       	in	r20, 0x3f	; 63
/Users/ziyue/Library/Arduino15/packages/ATTinyCore/hardware/avr/1.5.2/cores/tinymodern/wiring_digital.c:61
                cli();
     18c:	f8 94       	cli
/Users/ziyue/Library/Arduino15/packages/ATTinyCore/hardware/avr/1.5.2/cores/tinymodern/wiring_digital.c:62
    *reg &= ~bit;
     18e:	3c 91       	ld	r19, X
     190:	23 23       	and	r18, r19
     192:	2c 93       	st	X, r18
/Users/ziyue/Library/Arduino15/packages/ATTinyCore/hardware/avr/1.5.2/cores/tinymodern/wiring_digital.c:63
    *out |= bit;
     194:	dc 01       	movw	r26, r24
     196:	2c 91       	ld	r18, X
     198:	2e 2b       	or	r18, r30
     19a:	2c 93       	st	X, r18
/Users/ziyue/Library/Arduino15/packages/ATTinyCore/hardware/avr/1.5.2/cores/tinymodern/wiring_digital.c:64
    *pue |= bit;
     19c:	88 81       	ld	r24, Y
     19e:	e8 2b       	or	r30, r24
     1a0:	e8 83       	st	Y, r30
     1a2:	e6 cf       	rjmp	.-52     	; 0x170 <pinMode+0x4e>
/Users/ziyue/Library/Arduino15/packages/ATTinyCore/hardware/avr/1.5.2/cores/tinymodern/wiring_digital.c:67
    SREG = oldSREG;
  } else {
    uint8_t oldSREG = SREG;
     1a4:	9f b7       	in	r25, 0x3f	; 63
/Users/ziyue/Library/Arduino15/packages/ATTinyCore/hardware/avr/1.5.2/cores/tinymodern/wiring_digital.c:68
                cli();
     1a6:	f8 94       	cli
/Users/ziyue/Library/Arduino15/packages/ATTinyCore/hardware/avr/1.5.2/cores/tinymodern/wiring_digital.c:69
    *pue &= ~bit;
     1a8:	88 81       	ld	r24, Y
     1aa:	28 23       	and	r18, r24
     1ac:	28 83       	st	Y, r18
/Users/ziyue/Library/Arduino15/packages/ATTinyCore/hardware/avr/1.5.2/cores/tinymodern/wiring_digital.c:70
    *reg |= bit;
     1ae:	8c 91       	ld	r24, X
     1b0:	e8 2b       	or	r30, r24
     1b2:	ec 93       	st	X, r30
/Users/ziyue/Library/Arduino15/packages/ATTinyCore/hardware/avr/1.5.2/cores/tinymodern/wiring_digital.c:71
    SREG = oldSREG;
     1b4:	9f bf       	out	0x3f, r25	; 63
     1b6:	dd cf       	rjmp	.-70     	; 0x172 <pinMode+0x50>

000001b8 <analogRead>:
analogRead():
/Users/ziyue/Library/Arduino15/packages/ATTinyCore/hardware/avr/1.5.2/cores/tinymodern/wiring_analog.c:53
{
  //#if defined( CORE_ANALOG_FIRST )
  //  if ( pin >= CORE_ANALOG_FIRST ) pin -= CORE_ANALOG_FIRST; // allow for channel or pin numbers
  //#endif
  #ifndef __AVR_ATtiny828__
  if (pin & 64) {pin=pin&63;}
     1b8:	86 fd       	sbrc	r24, 6
     1ba:	8f 73       	andi	r24, 0x3F	; 63
ADC_SetVoltageReference():
/Users/ziyue/Library/Arduino15/packages/ATTinyCore/hardware/avr/1.5.2/cores/tinymodern/core_adc.h:121
}
adc_vr_t;

__attribute__((always_inline)) static inline void ADC_SetVoltageReference( adc_vr_t vr )
{
  ADMUXB = (ADMUXB & ~MASK3(REFS2,REFS1,REFS0)) | (((vr & B111) >> 0) << REFS0);
     1bc:	28 b1       	in	r18, 0x08	; 8
     1be:	90 91 6e 01 	lds	r25, 0x016E	; 0x80016e <analog_reference>
     1c2:	92 95       	swap	r25
     1c4:	99 0f       	add	r25, r25
     1c6:	90 7e       	andi	r25, 0xE0	; 224
     1c8:	2f 71       	andi	r18, 0x1F	; 31
     1ca:	92 2b       	or	r25, r18
     1cc:	98 b9       	out	0x08, r25	; 8
ADC_SetInputChannel():
/Users/ziyue/Library/Arduino15/packages/ATTinyCore/hardware/avr/1.5.2/cores/tinymodern/core_adc.h:194
adc_ic_t;

__attribute__((always_inline)) static inline void ADC_SetInputChannel( adc_ic_t ic )
{

  ADMUXA = (ADMUXA & ~MASK6(MUX5,MUX4,MUX3,MUX2,MUX1,MUX0)) | (ic << MUX0);
     1ce:	99 b1       	in	r25, 0x09	; 9
     1d0:	90 7c       	andi	r25, 0xC0	; 192
     1d2:	89 2b       	or	r24, r25
     1d4:	89 b9       	out	0x09, r24	; 9
ADC_StartConversion():
/Users/ziyue/Library/Arduino15/packages/ATTinyCore/hardware/avr/1.5.2/cores/tinymodern/core_adc.h:200

}

__attribute__((always_inline)) static inline void ADC_StartConversion( void )
{
  ADCSRA |= MASK1( ADSC );
     1d6:	2e 9a       	sbi	0x05, 6	; 5
analogRead():
/Users/ziyue/Library/Arduino15/packages/ATTinyCore/hardware/avr/1.5.2/cores/tinymodern/wiring_analog.c:61
  ADC_SetVoltageReference( analog_reference );
  ADC_SetInputChannel( pin );

  ADC_StartConversion();

  while( ADC_ConversionInProgress() );
     1d8:	2e 99       	sbic	0x05, 6	; 5
     1da:	fe cf       	rjmp	.-4      	; 0x1d8 <analogRead+0x20>
ADC_GetDataRegister():
/Users/ziyue/Library/Arduino15/packages/ATTinyCore/hardware/avr/1.5.2/cores/tinymodern/core_adc.h:210
  return( (ADCSRA & (1<<ADSC)) != 0 );
}

__attribute__((always_inline)) static inline uint16_t ADC_GetDataRegister( void )
{
  return( ADC );
     1dc:	86 b1       	in	r24, 0x06	; 6
     1de:	97 b1       	in	r25, 0x07	; 7
analogRead():
/Users/ziyue/Library/Arduino15/packages/ATTinyCore/hardware/avr/1.5.2/cores/tinymodern/wiring_analog.c:64

  return( ADC_GetDataRegister() );
}
     1e0:	08 95       	ret

000001e2 <i2c_tinyS::write(unsigned char const*, unsigned int)>:
write():
/Users/ziyue/Library/Arduino15/packages/ATTinyCore/hardware/avr/1.5.2/libraries/Wire/src/WireS.cpp:73
        return 1;
    }
    return 0;
}

size_t i2c_tinyS::write(const uint8_t* data, size_t quantity) {
     1e2:	cf 93       	push	r28
     1e4:	df 93       	push	r29
/Users/ziyue/Library/Arduino15/packages/ATTinyCore/hardware/avr/1.5.2/libraries/Wire/src/WireS.cpp:74
    if(i2c->txBufferLength < I2C_BUFFER_LENGTH) {
     1e6:	dc 01       	movw	r26, r24
     1e8:	1c 96       	adiw	r26, 0x0c	; 12
     1ea:	ed 91       	ld	r30, X+
     1ec:	fc 91       	ld	r31, X
     1ee:	26 a1       	ldd	r18, Z+38	; 0x26
     1f0:	37 a1       	ldd	r19, Z+39	; 0x27
     1f2:	20 32       	cpi	r18, 0x20	; 32
     1f4:	31 05       	cpc	r19, r1
     1f6:	10 f5       	brcc	.+68     	; 0x23c <i2c_tinyS::write(unsigned char const*, unsigned int)+0x5a>
/Users/ziyue/Library/Arduino15/packages/ATTinyCore/hardware/avr/1.5.2/libraries/Wire/src/WireS.cpp:75
        size_t avail = I2C_BUFFER_LENGTH - i2c->txBufferLength;
     1f8:	a6 a1       	ldd	r26, Z+38	; 0x26
     1fa:	b7 a1       	ldd	r27, Z+39	; 0x27
/Users/ziyue/Library/Arduino15/packages/ATTinyCore/hardware/avr/1.5.2/libraries/Wire/src/WireS.cpp:76
        uint8_t* dest = i2c->Buffer + i2c->txBufferLength;
     1fc:	c6 a1       	ldd	r28, Z+38	; 0x26
     1fe:	d7 a1       	ldd	r29, Z+39	; 0x27
     200:	20 e2       	ldi	r18, 0x20	; 32
     202:	30 e0       	ldi	r19, 0x00	; 0
     204:	2a 1b       	sub	r18, r26
     206:	3b 0b       	sbc	r19, r27
     208:	42 17       	cp	r20, r18
     20a:	53 07       	cpc	r21, r19
     20c:	08 f4       	brcc	.+2      	; 0x210 <i2c_tinyS::write(unsigned char const*, unsigned int)+0x2e>
     20e:	9a 01       	movw	r18, r20
     210:	db 01       	movw	r26, r22
     212:	ec 0f       	add	r30, r28
     214:	fd 1f       	adc	r31, r29
     216:	b9 01       	movw	r22, r18
     218:	6e 0f       	add	r22, r30
     21a:	7f 1f       	adc	r23, r31
/Users/ziyue/Library/Arduino15/packages/ATTinyCore/hardware/avr/1.5.2/libraries/Wire/src/WireS.cpp:78
        if(quantity > avail) quantity = avail;
        for (size_t count=quantity; count; count--) *dest++ = *data++;
     21c:	e6 17       	cp	r30, r22
     21e:	f7 07       	cpc	r31, r23
     220:	19 f0       	breq	.+6      	; 0x228 <i2c_tinyS::write(unsigned char const*, unsigned int)+0x46>
     222:	4d 91       	ld	r20, X+
     224:	41 93       	st	Z+, r20
     226:	fa cf       	rjmp	.-12     	; 0x21c <i2c_tinyS::write(unsigned char const*, unsigned int)+0x3a>
/Users/ziyue/Library/Arduino15/packages/ATTinyCore/hardware/avr/1.5.2/libraries/Wire/src/WireS.cpp:79
        i2c->txBufferLength += quantity;
     228:	dc 01       	movw	r26, r24
     22a:	1c 96       	adiw	r26, 0x0c	; 12
     22c:	ed 91       	ld	r30, X+
     22e:	fc 91       	ld	r31, X
     230:	86 a1       	ldd	r24, Z+38	; 0x26
     232:	97 a1       	ldd	r25, Z+39	; 0x27
     234:	28 0f       	add	r18, r24
     236:	39 1f       	adc	r19, r25
     238:	37 a3       	std	Z+39, r19	; 0x27
     23a:	26 a3       	std	Z+38, r18	; 0x26
/Users/ziyue/Library/Arduino15/packages/ATTinyCore/hardware/avr/1.5.2/libraries/Wire/src/WireS.cpp:81
    }
}
     23c:	df 91       	pop	r29
     23e:	cf 91       	pop	r28
     240:	08 95       	ret

00000242 <i2c_tinyS::write(unsigned char)>:
/Users/ziyue/Library/Arduino15/packages/ATTinyCore/hardware/avr/1.5.2/libraries/Wire/src/WireS.cpp:66
    i2c->startCount = -1;
    TWSCRA = (_BV(TWSHE) | _BV(TWDIE) | _BV(TWASIE) | _BV(TWEN) | _BV(TWSIE));
}

size_t i2c_tinyS::write(uint8_t data) {
    if(i2c->txBufferLength < I2C_BUFFER_LENGTH) {
     242:	dc 01       	movw	r26, r24
     244:	1c 96       	adiw	r26, 0x0c	; 12
     246:	ed 91       	ld	r30, X+
     248:	fc 91       	ld	r31, X
     24a:	86 a1       	ldd	r24, Z+38	; 0x26
     24c:	97 a1       	ldd	r25, Z+39	; 0x27
     24e:	80 97       	sbiw	r24, 0x20	; 32
     250:	68 f4       	brcc	.+26     	; 0x26c <i2c_tinyS::write(unsigned char)+0x2a>
/Users/ziyue/Library/Arduino15/packages/ATTinyCore/hardware/avr/1.5.2/libraries/Wire/src/WireS.cpp:67
        i2c->Buffer[i2c->txBufferLength++] = data;
     252:	86 a1       	ldd	r24, Z+38	; 0x26
     254:	97 a1       	ldd	r25, Z+39	; 0x27
     256:	9c 01       	movw	r18, r24
     258:	2f 5f       	subi	r18, 0xFF	; 255
     25a:	3f 4f       	sbci	r19, 0xFF	; 255
     25c:	37 a3       	std	Z+39, r19	; 0x27
     25e:	26 a3       	std	Z+38, r18	; 0x26
     260:	e8 0f       	add	r30, r24
     262:	f9 1f       	adc	r31, r25
     264:	60 83       	st	Z, r22
/Users/ziyue/Library/Arduino15/packages/ATTinyCore/hardware/avr/1.5.2/libraries/Wire/src/WireS.cpp:68
        return 1;
     266:	81 e0       	ldi	r24, 0x01	; 1
     268:	90 e0       	ldi	r25, 0x00	; 0
     26a:	08 95       	ret
/Users/ziyue/Library/Arduino15/packages/ATTinyCore/hardware/avr/1.5.2/libraries/Wire/src/WireS.cpp:70
    }
    return 0;
     26c:	90 e0       	ldi	r25, 0x00	; 0
     26e:	80 e0       	ldi	r24, 0x00	; 0
/Users/ziyue/Library/Arduino15/packages/ATTinyCore/hardware/avr/1.5.2/libraries/Wire/src/WireS.cpp:71
}
     270:	08 95       	ret

00000272 <i2c_tinyS::write(int) [clone .constprop.6]>:
/Users/ziyue/Library/Arduino15/packages/ATTinyCore/hardware/avr/1.5.2/libraries/Wire/src/WireS.h:98
        }
        size_t write(uint8_t data);
        inline size_t write(unsigned long n) { return write((uint8_t)n); }
        inline size_t write(long n)          { return write((uint8_t)n); }
        inline size_t write(unsigned int n)  { return write((uint8_t)n); }
        inline size_t write(int n)           { return write((uint8_t)n); }
     272:	68 2f       	mov	r22, r24
     274:	82 ea       	ldi	r24, 0xA2	; 162
     276:	91 e0       	ldi	r25, 0x01	; 1
     278:	e4 cf       	rjmp	.-56     	; 0x242 <i2c_tinyS::write(unsigned char)>

0000027a <SoftWireMaster::flush()>:
flush():
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/SoftWireMaster.h:188
    }
    return value;
  }

  void flush(void) {
  }
     27a:	08 95       	ret

0000027c <i2c_tinyS::peek()>:
peek():
/Users/ziyue/Library/Arduino15/packages/ATTinyCore/hardware/avr/1.5.2/libraries/Wire/src/WireS.h:105
        inline size_t write(const char* str) { write((const uint8_t*)str, strlen(str)); }
        inline int available(void) { return i2c->rxBufferLength - i2c->rxBufferIndex; }
        static int read_(struct i2cStruct* i2c);
        inline int read(void) { return read_(i2c); }
        static int peek_(struct i2cStruct* i2c);
        inline int peek(void) { return peek_(i2c); }
     27c:	dc 01       	movw	r26, r24
     27e:	1c 96       	adiw	r26, 0x0c	; 12
     280:	ed 91       	ld	r30, X+
     282:	fc 91       	ld	r31, X
peek_():
/Users/ziyue/Library/Arduino15/packages/ATTinyCore/hardware/avr/1.5.2/libraries/Wire/src/WireS.cpp:89
    if(i2c->rxBufferIndex >= i2c->rxBufferLength) return -1;
    return i2c->Buffer[i2c->rxBufferIndex++];
}

int i2c_tinyS::peek_(struct i2cStruct* i2c) {
    if(i2c->rxBufferIndex >= i2c->rxBufferLength) return -1;
     284:	20 a1       	ldd	r18, Z+32	; 0x20
     286:	31 a1       	ldd	r19, Z+33	; 0x21
     288:	82 a1       	ldd	r24, Z+34	; 0x22
     28a:	93 a1       	ldd	r25, Z+35	; 0x23
     28c:	28 17       	cp	r18, r24
     28e:	39 07       	cpc	r19, r25
     290:	38 f4       	brcc	.+14     	; 0x2a0 <i2c_tinyS::peek()+0x24>
/Users/ziyue/Library/Arduino15/packages/ATTinyCore/hardware/avr/1.5.2/libraries/Wire/src/WireS.cpp:90
    return i2c->Buffer[i2c->rxBufferIndex];
     292:	80 a1       	ldd	r24, Z+32	; 0x20
     294:	91 a1       	ldd	r25, Z+33	; 0x21
     296:	e8 0f       	add	r30, r24
     298:	f9 1f       	adc	r31, r25
     29a:	80 81       	ld	r24, Z
     29c:	90 e0       	ldi	r25, 0x00	; 0
     29e:	08 95       	ret
peek():
/Users/ziyue/Library/Arduino15/packages/ATTinyCore/hardware/avr/1.5.2/libraries/Wire/src/WireS.cpp:89
    if(i2c->rxBufferIndex >= i2c->rxBufferLength) return -1;
    return i2c->Buffer[i2c->rxBufferIndex++];
}

int i2c_tinyS::peek_(struct i2cStruct* i2c) {
    if(i2c->rxBufferIndex >= i2c->rxBufferLength) return -1;
     2a0:	8f ef       	ldi	r24, 0xFF	; 255
     2a2:	9f ef       	ldi	r25, 0xFF	; 255
/Users/ziyue/Library/Arduino15/packages/ATTinyCore/hardware/avr/1.5.2/libraries/Wire/src/WireS.h:105
     2a4:	08 95       	ret

000002a6 <bcd2dec(unsigned char)>:
bcd2dec():
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:975
  softWireMaster.endTransmission();
}


// convert BCD data to DEC data
byte bcd2dec(byte bcd) {
     2a6:	98 2f       	mov	r25, r24
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:976
  return (bcd / 16 * 10) + (bcd % 16);
     2a8:	82 95       	swap	r24
     2aa:	8f 70       	andi	r24, 0x0F	; 15
     2ac:	6a e0       	ldi	r22, 0x0A	; 10
     2ae:	b7 dd       	rcall	.-1170   	; 0xfffffe1e <__eeprom_end+0xff7efe1e>
     2b0:	9f 70       	andi	r25, 0x0F	; 15
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:977
}
     2b2:	89 0f       	add	r24, r25
     2b4:	08 95       	ret

000002b6 <emulateButtonClick()>:
emulateButtonClick():
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:767
}


// emulate button clicking
void emulateButtonClick() {
  isButtonClickEmulated = true;
     2b6:	81 e0       	ldi	r24, 0x01	; 1
     2b8:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <isButtonClickEmulated>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:768
  pinMode(PIN_BUTTON, OUTPUT);
     2bc:	61 e0       	ldi	r22, 0x01	; 1
     2be:	31 df       	rcall	.-414    	; 0x122 <pinMode>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:769
  digitalWrite(PIN_BUTTON, 0);
     2c0:	60 e0       	ldi	r22, 0x00	; 0
     2c2:	81 e0       	ldi	r24, 0x01	; 1
     2c4:	fb ce       	rjmp	.-522    	; 0xbc <digitalWrite>

000002c6 <turnOffIfPowerOn()>:
turnOffIfPowerOn():
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:936
}


// turn off Raspberry Pi only if it is on
void turnOffIfPowerOn() {
  if (skipTempShutdownCount >= 120 && powerIsOn && !turningOff) {
     2c6:	80 91 39 01 	lds	r24, 0x0139	; 0x800139 <skipTempShutdownCount>
     2ca:	88 37       	cpi	r24, 0x78	; 120
     2cc:	70 f0       	brcs	.+28     	; 0x2ea <turnOffIfPowerOn()+0x24>
     2ce:	80 91 38 01 	lds	r24, 0x0138	; 0x800138 <powerIsOn>
     2d2:	88 23       	and	r24, r24
     2d4:	51 f0       	breq	.+20     	; 0x2ea <turnOffIfPowerOn()+0x24>
     2d6:	80 91 37 01 	lds	r24, 0x0137	; 0x800137 <turningOff>
     2da:	81 11       	cpse	r24, r1
     2dc:	06 c0       	rjmp	.+12     	; 0x2ea <turnOffIfPowerOn()+0x24>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:937
    emulateButtonClick();
     2de:	eb df       	rcall	.-42     	; 0x2b6 <emulateButtonClick()>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:938
    turningOff = true;
     2e0:	81 e0       	ldi	r24, 0x01	; 1
     2e2:	80 93 37 01 	sts	0x0137, r24	; 0x800137 <turningOff>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:939
    systemIsUp = false;
     2e6:	10 92 3a 01 	sts	0x013A, r1	; 0x80013a <systemIsUp>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:941
  }
}
     2ea:	08 95       	ret

000002ec <getPowerCutPreloadTimer(unsigned char)>:
getPowerCutPreloadTimer():
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:517
}


// get the preload timer value for power cut
unsigned int getPowerCutPreloadTimer(boolean reset) {
  if (reset) {
     2ec:	88 23       	and	r24, r24
     2ee:	39 f0       	breq	.+14     	; 0x2fe <getPowerCutPreloadTimer(unsigned char)+0x12>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:518
    powerCutDelay = i2cReg[I2C_CONF_POWER_CUT_DELAY];
     2f0:	80 91 51 01 	lds	r24, 0x0151	; 0x800151 <i2cReg+0x15>
     2f4:	90 e0       	ldi	r25, 0x00	; 0
     2f6:	90 93 35 01 	sts	0x0135, r25	; 0x800135 <powerCutDelay+0x1>
     2fa:	80 93 34 01 	sts	0x0134, r24	; 0x800134 <powerCutDelay>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:521
  }
  unsigned int actualDelay = 0;
  if (powerCutDelay > 83) {
     2fe:	80 91 34 01 	lds	r24, 0x0134	; 0x800134 <powerCutDelay>
     302:	90 91 35 01 	lds	r25, 0x0135	; 0x800135 <powerCutDelay+0x1>
     306:	84 35       	cpi	r24, 0x54	; 84
     308:	91 05       	cpc	r25, r1
     30a:	a0 f4       	brcc	.+40     	; 0x334 <__stack+0x35>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:524
    actualDelay = 83;
  } else {
    actualDelay = powerCutDelay;
     30c:	80 91 34 01 	lds	r24, 0x0134	; 0x800134 <powerCutDelay>
     310:	90 91 35 01 	lds	r25, 0x0135	; 0x800135 <powerCutDelay+0x1>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:526
  }
  powerCutDelay -= actualDelay;
     314:	20 91 34 01 	lds	r18, 0x0134	; 0x800134 <powerCutDelay>
     318:	30 91 35 01 	lds	r19, 0x0135	; 0x800135 <powerCutDelay+0x1>
     31c:	28 1b       	sub	r18, r24
     31e:	39 0b       	sbc	r19, r25
     320:	30 93 35 01 	sts	0x0135, r19	; 0x800135 <powerCutDelay+0x1>
     324:	20 93 34 01 	sts	0x0134, r18	; 0x800134 <powerCutDelay>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:527
  return 65535 - 781 * actualDelay;
     328:	6d e0       	ldi	r22, 0x0D	; 13
     32a:	73 e0       	ldi	r23, 0x03	; 3
     32c:	81 dd       	rcall	.-1278   	; 0xfffffe30 <__eeprom_end+0xff7efe30>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:528
}
     32e:	80 95       	com	r24
     330:	90 95       	com	r25
     332:	08 95       	ret
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:522
  if (reset) {
    powerCutDelay = i2cReg[I2C_CONF_POWER_CUT_DELAY];
  }
  unsigned int actualDelay = 0;
  if (powerCutDelay > 83) {
    actualDelay = 83;
     334:	83 e5       	ldi	r24, 0x53	; 83
     336:	90 e0       	ldi	r25, 0x00	; 0
     338:	ed cf       	rjmp	.-38     	; 0x314 <__stack+0x15>

0000033a <ledOff()>:
ledOff():
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:431
}


// turn off white LED
void ledOff() {
  digitalWrite(PIN_LED, 0);
     33a:	60 e0       	ldi	r22, 0x00	; 0
     33c:	80 e0       	ldi	r24, 0x00	; 0
     33e:	be de       	rcall	.-644    	; 0xbc <digitalWrite>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:432
  pinMode(PIN_LED, INPUT);
     340:	60 e0       	ldi	r22, 0x00	; 0
     342:	80 e0       	ldi	r24, 0x00	; 0
     344:	ee de       	rcall	.-548    	; 0x122 <pinMode>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:433
  ledIsOn = false;
     346:	10 92 30 01 	sts	0x0130, r1	; 0x800130 <ledIsOn>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:434
}
     34a:	08 95       	ret

0000034c <ledOn()>:
ledOn():
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:422
}


// turn on white LED
void ledOn() {
  ledIsOn = true;
     34c:	81 e0       	ldi	r24, 0x01	; 1
     34e:	80 93 30 01 	sts	0x0130, r24	; 0x800130 <ledIsOn>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:423
  pinMode(PIN_LED, OUTPUT);
     352:	61 e0       	ldi	r22, 0x01	; 1
     354:	80 e0       	ldi	r24, 0x00	; 0
     356:	e5 de       	rcall	.-566    	; 0x122 <pinMode>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:424
  digitalWrite(PIN_LED, 1);
     358:	61 e0       	ldi	r22, 0x01	; 1
     35a:	80 e0       	ldi	r24, 0x00	; 0
     35c:	af de       	rcall	.-674    	; 0xbc <digitalWrite>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:425
  ledUpTime = 0;
     35e:	10 92 2e 01 	sts	0x012E, r1	; 0x80012e <ledUpTime>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:426
}
     362:	08 95       	ret

00000364 <cutPower()>:
cutPower():
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:405
}


// cut 5V output on GPIO header 
void cutPower() {
  powerIsOn = false;
     364:	10 92 38 01 	sts	0x0138, r1	; 0x800138 <powerIsOn>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:406
  digitalWrite(PIN_CTRL, 0);
     368:	60 e0       	ldi	r22, 0x00	; 0
     36a:	83 e0       	ldi	r24, 0x03	; 3
     36c:	a7 de       	rcall	.-690    	; 0xbc <digitalWrite>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:407
  turnOffFromTXD = false;
     36e:	10 92 33 01 	sts	0x0133, r1	; 0x800133 <turnOffFromTXD>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:408
}
     372:	08 95       	ret

00000374 <timer1_enable()>:
timer1_enable():
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:307


// enable timer1 (for power cut delay)
void timer1_enable() {
  // set entire TCCR1A and TCCR1B register to 0
  TCCR1A = 0;
     374:	1f bc       	out	0x2f, r1	; 47
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:308
  TCCR1B = 0;
     376:	1e bc       	out	0x2e, r1	; 46
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:311
  
  // set 1024 prescaler
  bitSet(TCCR1B, CS12);
     378:	8e b5       	in	r24, 0x2e	; 46
     37a:	84 60       	ori	r24, 0x04	; 4
     37c:	8e bd       	out	0x2e, r24	; 46
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:312
  bitSet(TCCR1B, CS10);
     37e:	8e b5       	in	r24, 0x2e	; 46
     380:	81 60       	ori	r24, 0x01	; 1
     382:	8e bd       	out	0x2e, r24	; 46
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:315

  // clear overflow interrupt flag
  bitSet(TIFR1, TOV1);
     384:	70 9a       	sbi	0x0e, 0	; 14
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:318

  // set timer counter
  TCNT1 = getPowerCutPreloadTimer(true);
     386:	81 e0       	ldi	r24, 0x01	; 1
     388:	b1 df       	rcall	.-158    	; 0x2ec <getPowerCutPreloadTimer(unsigned char)>
     38a:	9d bd       	out	0x2d, r25	; 45
     38c:	8c bd       	out	0x2c, r24	; 44
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:321

  // enable Timer1 overflow interrupt
  bitSet(TIMSK1, TOIE1);
     38e:	78 9a       	sbi	0x0f, 0	; 15
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:322
}
     390:	08 95       	ret

00000392 <i2c_tinyS::read()>:
read():
/Users/ziyue/Library/Arduino15/packages/ATTinyCore/hardware/avr/1.5.2/libraries/Wire/src/WireS.h:103
        inline size_t write(int n)           { return write((uint8_t)n); }
        size_t write(const uint8_t* data, size_t quantity);
        inline size_t write(const char* str) { write((const uint8_t*)str, strlen(str)); }
        inline int available(void) { return i2c->rxBufferLength - i2c->rxBufferIndex; }
        static int read_(struct i2cStruct* i2c);
        inline int read(void) { return read_(i2c); }
     392:	dc 01       	movw	r26, r24
     394:	1c 96       	adiw	r26, 0x0c	; 12
     396:	ed 91       	ld	r30, X+
     398:	fc 91       	ld	r31, X
read_():
/Users/ziyue/Library/Arduino15/packages/ATTinyCore/hardware/avr/1.5.2/libraries/Wire/src/WireS.cpp:84
        i2c->txBufferLength += quantity;
    }
}

int i2c_tinyS::read_(struct i2cStruct* i2c) {
    if(i2c->rxBufferIndex >= i2c->rxBufferLength) return -1;
     39a:	20 a1       	ldd	r18, Z+32	; 0x20
     39c:	31 a1       	ldd	r19, Z+33	; 0x21
     39e:	82 a1       	ldd	r24, Z+34	; 0x22
     3a0:	93 a1       	ldd	r25, Z+35	; 0x23
     3a2:	28 17       	cp	r18, r24
     3a4:	39 07       	cpc	r19, r25
     3a6:	60 f4       	brcc	.+24     	; 0x3c0 <i2c_tinyS::read()+0x2e>
/Users/ziyue/Library/Arduino15/packages/ATTinyCore/hardware/avr/1.5.2/libraries/Wire/src/WireS.cpp:85
    return i2c->Buffer[i2c->rxBufferIndex++];
     3a8:	80 a1       	ldd	r24, Z+32	; 0x20
     3aa:	91 a1       	ldd	r25, Z+33	; 0x21
     3ac:	9c 01       	movw	r18, r24
     3ae:	2f 5f       	subi	r18, 0xFF	; 255
     3b0:	3f 4f       	sbci	r19, 0xFF	; 255
     3b2:	31 a3       	std	Z+33, r19	; 0x21
     3b4:	20 a3       	std	Z+32, r18	; 0x20
     3b6:	e8 0f       	add	r30, r24
     3b8:	f9 1f       	adc	r31, r25
     3ba:	80 81       	ld	r24, Z
     3bc:	90 e0       	ldi	r25, 0x00	; 0
     3be:	08 95       	ret
read():
/Users/ziyue/Library/Arduino15/packages/ATTinyCore/hardware/avr/1.5.2/libraries/Wire/src/WireS.cpp:84
        i2c->txBufferLength += quantity;
    }
}

int i2c_tinyS::read_(struct i2cStruct* i2c) {
    if(i2c->rxBufferIndex >= i2c->rxBufferLength) return -1;
     3c0:	8f ef       	ldi	r24, 0xFF	; 255
     3c2:	9f ef       	ldi	r25, 0xFF	; 255
/Users/ziyue/Library/Arduino15/packages/ATTinyCore/hardware/avr/1.5.2/libraries/Wire/src/WireS.h:103
     3c4:	08 95       	ret

000003c6 <i2c_tinyS::available()>:
available():
/Users/ziyue/Library/Arduino15/packages/ATTinyCore/hardware/avr/1.5.2/libraries/Wire/src/WireS.h:101
        inline size_t write(long n)          { return write((uint8_t)n); }
        inline size_t write(unsigned int n)  { return write((uint8_t)n); }
        inline size_t write(int n)           { return write((uint8_t)n); }
        size_t write(const uint8_t* data, size_t quantity);
        inline size_t write(const char* str) { write((const uint8_t*)str, strlen(str)); }
        inline int available(void) { return i2c->rxBufferLength - i2c->rxBufferIndex; }
     3c6:	dc 01       	movw	r26, r24
     3c8:	1c 96       	adiw	r26, 0x0c	; 12
     3ca:	ed 91       	ld	r30, X+
     3cc:	fc 91       	ld	r31, X
     3ce:	82 a1       	ldd	r24, Z+34	; 0x22
     3d0:	93 a1       	ldd	r25, Z+35	; 0x23
     3d2:	20 a1       	ldd	r18, Z+32	; 0x20
     3d4:	31 a1       	ldd	r19, Z+33	; 0x21
     3d6:	82 1b       	sub	r24, r18
     3d8:	93 0b       	sbc	r25, r19
     3da:	08 95       	ret

000003dc <addressEvent(unsigned int, unsigned char)>:
addressEvent():
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:533
}


// receives a sequence of start|address|direction bit from i2c master
boolean addressEvent(uint16_t slaveAddress, uint8_t startCount) {
  if (startCount > 0 && TinyWireS.available()) {
     3dc:	66 23       	and	r22, r22
     3de:	51 f0       	breq	.+20     	; 0x3f4 <addressEvent(unsigned int, unsigned char)+0x18>
     3e0:	82 ea       	ldi	r24, 0xA2	; 162
     3e2:	91 e0       	ldi	r25, 0x01	; 1
     3e4:	f0 df       	rcall	.-32     	; 0x3c6 <i2c_tinyS::available()>
     3e6:	89 2b       	or	r24, r25
     3e8:	29 f0       	breq	.+10     	; 0x3f4 <addressEvent(unsigned int, unsigned char)+0x18>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:534
    i2cIndex = TinyWireS.read();
     3ea:	82 ea       	ldi	r24, 0xA2	; 162
     3ec:	91 e0       	ldi	r25, 0x01	; 1
     3ee:	d1 df       	rcall	.-94     	; 0x392 <i2c_tinyS::read()>
     3f0:	80 93 2b 01 	sts	0x012B, r24	; 0x80012b <i2cIndex>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:537
  }
  return true;
}
     3f4:	81 e0       	ldi	r24, 0x01	; 1
     3f6:	08 95       	ret

000003f8 <SoftWireMaster::peek()>:
peek():
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/SoftWireMaster.h:181
  }

  int peek(void) {
    int value = -1;

    if(rxBufferIndex < rxBufferLength){
     3f8:	dc 01       	movw	r26, r24
     3fa:	9c 96       	adiw	r26, 0x2c	; 44
     3fc:	ec 91       	ld	r30, X
     3fe:	9c 97       	sbiw	r26, 0x2c	; 44
     400:	9d 96       	adiw	r26, 0x2d	; 45
     402:	2c 91       	ld	r18, X
     404:	e2 17       	cp	r30, r18
     406:	30 f4       	brcc	.+12     	; 0x414 <__LOCK_REGION_LENGTH__+0x14>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/SoftWireMaster.h:182
      value = rxBuffer[rxBufferIndex];
     408:	e8 0f       	add	r30, r24
     40a:	f9 2f       	mov	r31, r25
     40c:	f1 1d       	adc	r31, r1
     40e:	84 85       	ldd	r24, Z+12	; 0x0c
     410:	90 e0       	ldi	r25, 0x00	; 0
     412:	08 95       	ret
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/SoftWireMaster.h:179
    }
    return value;
  }

  int peek(void) {
    int value = -1;
     414:	8f ef       	ldi	r24, 0xFF	; 255
     416:	9f ef       	ldi	r25, 0xFF	; 255
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/SoftWireMaster.h:185

    if(rxBufferIndex < rxBufferLength){
      value = rxBuffer[rxBufferIndex];
    }
    return value;
  }
     418:	08 95       	ret

0000041a <SoftWireMaster::read()>:
read():
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/SoftWireMaster.h:169

  int available(void) {
    return rxBufferLength - rxBufferIndex;
  }

  int read(void) {
     41a:	fc 01       	movw	r30, r24
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/SoftWireMaster.h:171
    int value = -1;
    if(rxBufferIndex < rxBufferLength){
     41c:	94 a5       	ldd	r25, Z+44	; 0x2c
     41e:	85 a5       	ldd	r24, Z+45	; 0x2d
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/SoftWireMaster.h:170
  int available(void) {
    return rxBufferLength - rxBufferIndex;
  }

  int read(void) {
    int value = -1;
     420:	2f ef       	ldi	r18, 0xFF	; 255
     422:	3f ef       	ldi	r19, 0xFF	; 255
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/SoftWireMaster.h:171
    if(rxBufferIndex < rxBufferLength){
     424:	98 17       	cp	r25, r24
     426:	40 f4       	brcc	.+16     	; 0x438 <SoftWireMaster::read()+0x1e>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/SoftWireMaster.h:172
      value = rxBuffer[rxBufferIndex];
     428:	df 01       	movw	r26, r30
     42a:	a9 0f       	add	r26, r25
     42c:	b1 1d       	adc	r27, r1
     42e:	1c 96       	adiw	r26, 0x0c	; 12
     430:	2c 91       	ld	r18, X
     432:	30 e0       	ldi	r19, 0x00	; 0
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/SoftWireMaster.h:173
      ++rxBufferIndex;
     434:	9f 5f       	subi	r25, 0xFF	; 255
     436:	94 a7       	std	Z+44, r25	; 0x2c
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/SoftWireMaster.h:176
    }
    return value;
  }
     438:	c9 01       	movw	r24, r18
     43a:	08 95       	ret

0000043c <SoftWireMaster::available()>:
available():
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/SoftWireMaster.h:165

  uint8_t requestFrom(int address, int quantity) {
    return requestFrom((uint8_t)address, (uint8_t)quantity, (uint8_t)true);
  }

  int available(void) {
     43c:	fc 01       	movw	r30, r24
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/SoftWireMaster.h:166
    return rxBufferLength - rxBufferIndex;
     43e:	85 a5       	ldd	r24, Z+45	; 0x2d
     440:	94 a5       	ldd	r25, Z+44	; 0x2c
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/SoftWireMaster.h:167
  }
     442:	89 1b       	sub	r24, r25
     444:	99 0b       	sbc	r25, r25
     446:	08 95       	ret

00000448 <SoftWireMaster::write(unsigned char const*, unsigned int)>:
write():
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/SoftWireMaster.h:104
      if (error == 0) error = 3;
      return 0;
    }
  }

  size_t write(const uint8_t *data, size_t quantity) {
     448:	cf 92       	push	r12
     44a:	df 92       	push	r13
     44c:	ef 92       	push	r14
     44e:	ff 92       	push	r15
     450:	0f 93       	push	r16
     452:	1f 93       	push	r17
     454:	cf 93       	push	r28
     456:	df 93       	push	r29
     458:	6c 01       	movw	r12, r24
     45a:	eb 01       	movw	r28, r22
     45c:	7b 01       	movw	r14, r22
     45e:	e4 0e       	add	r14, r20
     460:	f5 1e       	adc	r15, r21
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/SoftWireMaster.h:105
    size_t trans = 0;
     462:	10 e0       	ldi	r17, 0x00	; 0
     464:	00 e0       	ldi	r16, 0x00	; 0
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/SoftWireMaster.h:106
    for(size_t i = 0; i < quantity; ++i){
     466:	ce 15       	cp	r28, r14
     468:	df 05       	cpc	r29, r15
     46a:	61 f0       	breq	.+24     	; 0x484 <SoftWireMaster::write(unsigned char const*, unsigned int)+0x3c>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/SoftWireMaster.h:107
      trans += write(data[i]);
     46c:	69 91       	ld	r22, Y+
     46e:	d6 01       	movw	r26, r12
     470:	ed 91       	ld	r30, X+
     472:	fc 91       	ld	r31, X
     474:	01 90       	ld	r0, Z+
     476:	f0 81       	ld	r31, Z
     478:	e0 2d       	mov	r30, r0
     47a:	c6 01       	movw	r24, r12
     47c:	09 95       	icall
     47e:	08 0f       	add	r16, r24
     480:	19 1f       	adc	r17, r25
     482:	f1 cf       	rjmp	.-30     	; 0x466 <SoftWireMaster::write(unsigned char const*, unsigned int)+0x1e>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/SoftWireMaster.h:110
    }
    return trans;
  }
     484:	c8 01       	movw	r24, r16
     486:	df 91       	pop	r29
     488:	cf 91       	pop	r28
     48a:	1f 91       	pop	r17
     48c:	0f 91       	pop	r16
     48e:	ff 90       	pop	r15
     490:	ef 90       	pop	r14
     492:	df 90       	pop	r13
     494:	cf 90       	pop	r12
     496:	08 95       	ret

00000498 <updateRegister(unsigned char, unsigned char)>:
updateRegister():
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:757
  }
}


// update I2C register and save to EEPROM
void updateRegister(byte index, byte value) {
     498:	0f 93       	push	r16
     49a:	1f 93       	push	r17
     49c:	cf 93       	push	r28
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:758
  i2cReg[index] = value;
     49e:	08 2f       	mov	r16, r24
     4a0:	10 e0       	ldi	r17, 0x00	; 0
     4a2:	f8 01       	movw	r30, r16
     4a4:	e4 5c       	subi	r30, 0xC4	; 196
     4a6:	fe 4f       	sbci	r31, 0xFE	; 254
     4a8:	60 83       	st	Z, r22
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:759
  if (index < I2C_REG_COUNT) {
     4aa:	82 33       	cpi	r24, 0x32	; 50
     4ac:	58 f4       	brcc	.+22     	; 0x4c4 <updateRegister(unsigned char, unsigned char)+0x2c>
     4ae:	c6 2f       	mov	r28, r22
operator*():
/Users/ziyue/Library/Arduino15/packages/ATTinyCore/hardware/avr/1.5.2/libraries/EEPROM/EEPROM.h:53

    EERef( const int index )
        : index( index )                 {}

    //Access/read members.
    uint8_t operator*() const            { return eeprom_read_byte( (uint8_t*) index ); }
     4b0:	c8 01       	movw	r24, r16
     4b2:	7c da       	rcall	.-2824   	; 0xfffff9ac <__eeprom_end+0xff7ef9ac>
update():
/Users/ziyue/Library/Arduino15/packages/ATTinyCore/hardware/avr/1.5.2/libraries/EEPROM/EEPROM.h:74
    EERef &operator &=( uint8_t in )     { return *this = **this & in; }
    EERef &operator |=( uint8_t in )     { return *this = **this | in; }
    EERef &operator <<=( uint8_t in )    { return *this = **this << in; }
    EERef &operator >>=( uint8_t in )    { return *this = **this >> in; }

    EERef &update( uint8_t in )          { return  in != *this ? *this = in : *this; }
     4b4:	c8 17       	cp	r28, r24
     4b6:	31 f0       	breq	.+12     	; 0x4c4 <updateRegister(unsigned char, unsigned char)+0x2c>
_ZN5EERefaSEh():
/Users/ziyue/Library/Arduino15/packages/ATTinyCore/hardware/avr/1.5.2/libraries/EEPROM/EEPROM.h:61
    //Assignment/write members.
    EERef &operator=( const EERef &ref ) { return *this = *ref; }
    #if  (defined(__AVR_ATtinyX41__) && F_CPU==16000000 && CLOCK_SOURCE==0)
      EERef &operator=( uint8_t in )       { return safe_eeprom_write_byte( (uint8_t*) index, in ), *this;  }
    #else
      EERef &operator=( uint8_t in )       { return eeprom_write_byte( (uint8_t*) index, in ), *this;  }
     4b8:	6c 2f       	mov	r22, r28
     4ba:	c8 01       	movw	r24, r16
updateRegister():
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:762
    EEPROM.update(index, value);
  }
}
     4bc:	cf 91       	pop	r28
     4be:	1f 91       	pop	r17
     4c0:	0f 91       	pop	r16
_ZN5EERefaSEh():
/Users/ziyue/Library/Arduino15/packages/ATTinyCore/hardware/avr/1.5.2/libraries/EEPROM/EEPROM.h:61
     4c2:	7c ca       	rjmp	.-2824   	; 0xfffff9bc <__eeprom_end+0xff7ef9bc>
updateRegister():
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:762
     4c4:	cf 91       	pop	r28
     4c6:	1f 91       	pop	r17
     4c8:	0f 91       	pop	r16
     4ca:	08 95       	ret

000004cc <getInputVoltage()>:
getInputVoltage():
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:467
  return vin;
}


// get input voltage
float getInputVoltage() {
     4cc:	8f 92       	push	r8
     4ce:	9f 92       	push	r9
     4d0:	af 92       	push	r10
     4d2:	bf 92       	push	r11
     4d4:	cf 92       	push	r12
     4d6:	df 92       	push	r13
     4d8:	ef 92       	push	r14
     4da:	ff 92       	push	r15
     4dc:	cf 93       	push	r28
getAdcVoltageAtPin():
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:439
}


// get voltage at specific pin
float getAdcVoltageAtPin(byte pin) {
  return 0.061290322580645 * analogRead(pin);    // 57*1.1/1023~=0.06129
     4de:	81 e4       	ldi	r24, 0x41	; 65
     4e0:	6b de       	rcall	.-810    	; 0x1b8 <analogRead>
     4e2:	7c 01       	movw	r14, r24
getAdjustValue():
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:451
}


// get actual adjust value for given register
float getAdjustValue(byte regId) {
  return (float)((char)i2cReg[regId]) / 100.0f;
     4e4:	60 91 54 01 	lds	r22, 0x0154	; 0x800154 <i2cReg+0x18>
     4e8:	06 2e       	mov	r0, r22
     4ea:	00 0c       	add	r0, r0
     4ec:	77 0b       	sbc	r23, r23
     4ee:	88 0b       	sbc	r24, r24
     4f0:	99 0b       	sbc	r25, r25
     4f2:	76 db       	rcall	.-2324   	; 0xfffffbe0 <__eeprom_end+0xff7efbe0>
     4f4:	20 e0       	ldi	r18, 0x00	; 0
     4f6:	30 e0       	ldi	r19, 0x00	; 0
     4f8:	48 ec       	ldi	r20, 0xC8	; 200
     4fa:	52 e4       	ldi	r21, 0x42	; 66
     4fc:	d6 da       	rcall	.-2644   	; 0xfffffaaa <__eeprom_end+0xff7efaaa>
     4fe:	4b 01       	movw	r8, r22
     500:	5c 01       	movw	r10, r24
getAdcVoltageAtPin():
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:439
}


// get voltage at specific pin
float getAdcVoltageAtPin(byte pin) {
  return 0.061290322580645 * analogRead(pin);    // 57*1.1/1023~=0.06129
     502:	b7 01       	movw	r22, r14
     504:	ff 0c       	add	r15, r15
     506:	88 0b       	sbc	r24, r24
     508:	99 0b       	sbc	r25, r25
     50a:	6a db       	rcall	.-2348   	; 0xfffffbe0 <__eeprom_end+0xff7efbe0>
     50c:	20 e9       	ldi	r18, 0x90	; 144
     50e:	3b e0       	ldi	r19, 0x0B	; 11
     510:	4b e7       	ldi	r20, 0x7B	; 123
     512:	5d e3       	ldi	r21, 0x3D	; 61
     514:	19 dc       	rcall	.-1998   	; 0xfffffd48 <__eeprom_end+0xff7efd48>
     516:	9b 01       	movw	r18, r22
     518:	ac 01       	movw	r20, r24
getInputVoltage():
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:469


// get input voltage
float getInputVoltage() {
  float v = getAdcVoltageAtPin(PIN_VIN);
  v += getAdjustValue(I2C_CONF_ADJ_VIN);
     51a:	c5 01       	movw	r24, r10
     51c:	b4 01       	movw	r22, r8
     51e:	5d da       	rcall	.-2886   	; 0xfffff9da <__eeprom_end+0xff7ef9da>
     520:	6b 01       	movw	r12, r22
     522:	7c 01       	movw	r14, r24
getIntegerPart():
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:505
}


// get integer part of given number
byte getIntegerPart(float v) {
  return (byte)v;  
     524:	2f db       	rcall	.-2466   	; 0xfffffb84 <__eeprom_end+0xff7efb84>
     526:	c6 2f       	mov	r28, r22
getInputVoltage():
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:470

// get input voltage
float getInputVoltage() {
  float v = getAdcVoltageAtPin(PIN_VIN);
  v += getAdjustValue(I2C_CONF_ADJ_VIN);
  updateRegister(I2C_VOLTAGE_IN_I, getIntegerPart(v));
     528:	81 e0       	ldi	r24, 0x01	; 1
     52a:	b6 df       	rcall	.-148    	; 0x498 <updateRegister(unsigned char, unsigned char)>
getDecimalPart():
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:511
}


// get decimal part of given number
byte getDecimalPart(float v) {
  return (byte)((v - getIntegerPart(v)) * 100);
     52c:	6c 2f       	mov	r22, r28
     52e:	70 e0       	ldi	r23, 0x00	; 0
     530:	90 e0       	ldi	r25, 0x00	; 0
     532:	80 e0       	ldi	r24, 0x00	; 0
     534:	55 db       	rcall	.-2390   	; 0xfffffbe0 <__eeprom_end+0xff7efbe0>
     536:	9b 01       	movw	r18, r22
     538:	ac 01       	movw	r20, r24
     53a:	c7 01       	movw	r24, r14
     53c:	b6 01       	movw	r22, r12
     53e:	4c da       	rcall	.-2920   	; 0xfffff9d8 <__eeprom_end+0xff7ef9d8>
     540:	20 e0       	ldi	r18, 0x00	; 0
     542:	30 e0       	ldi	r19, 0x00	; 0
     544:	48 ec       	ldi	r20, 0xC8	; 200
     546:	52 e4       	ldi	r21, 0x42	; 66
     548:	ff db       	rcall	.-2050   	; 0xfffffd48 <__eeprom_end+0xff7efd48>
     54a:	1c db       	rcall	.-2504   	; 0xfffffb84 <__eeprom_end+0xff7efb84>
getInputVoltage():
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:471
// get input voltage
float getInputVoltage() {
  float v = getAdcVoltageAtPin(PIN_VIN);
  v += getAdjustValue(I2C_CONF_ADJ_VIN);
  updateRegister(I2C_VOLTAGE_IN_I, getIntegerPart(v));
  updateRegister(I2C_VOLTAGE_IN_D, getDecimalPart(v));
     54c:	82 e0       	ldi	r24, 0x02	; 2
     54e:	a4 df       	rcall	.-184    	; 0x498 <updateRegister(unsigned char, unsigned char)>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:473
  return v;
}
     550:	c7 01       	movw	r24, r14
     552:	b6 01       	movw	r22, r12
     554:	cf 91       	pop	r28
     556:	ff 90       	pop	r15
     558:	ef 90       	pop	r14
     55a:	df 90       	pop	r13
     55c:	cf 90       	pop	r12
     55e:	bf 90       	pop	r11
     560:	af 90       	pop	r10
     562:	9f 90       	pop	r9
     564:	8f 90       	pop	r8
     566:	08 95       	ret

00000568 <updatePowerMode()>:
updatePowerMode():
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:456
  return (float)((char)i2cReg[regId]) / 100.0f;
}


// update power mode according to input voltage, and return the input voltage
float updatePowerMode() {
     568:	cf 92       	push	r12
     56a:	df 92       	push	r13
     56c:	ef 92       	push	r14
     56e:	ff 92       	push	r15
     570:	cf 93       	push	r28
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:457
  byte bk = ADCSRA;
     572:	c5 b1       	in	r28, 0x05	; 5
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:458
  ADCSRA |= _BV(ADEN);
     574:	2f 9a       	sbi	0x05, 7	; 5
getAdcVoltageAtPin():
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:439
}


// get voltage at specific pin
float getAdcVoltageAtPin(byte pin) {
  return 0.061290322580645 * analogRead(pin);    // 57*1.1/1023~=0.06129
     576:	81 e4       	ldi	r24, 0x41	; 65
     578:	1f de       	rcall	.-962    	; 0x1b8 <analogRead>
     57a:	bc 01       	movw	r22, r24
     57c:	99 0f       	add	r25, r25
     57e:	88 0b       	sbc	r24, r24
     580:	99 0b       	sbc	r25, r25
     582:	2e db       	rcall	.-2468   	; 0xfffffbe0 <__eeprom_end+0xff7efbe0>
     584:	20 e9       	ldi	r18, 0x90	; 144
     586:	3b e0       	ldi	r19, 0x0B	; 11
     588:	4b e7       	ldi	r20, 0x7B	; 123
     58a:	5d e3       	ldi	r21, 0x3D	; 61
     58c:	dd db       	rcall	.-2118   	; 0xfffffd48 <__eeprom_end+0xff7efd48>
     58e:	6b 01       	movw	r12, r22
     590:	7c 01       	movw	r14, r24
updatePowerMode():
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:460
// update power mode according to input voltage, and return the input voltage
float updatePowerMode() {
  byte bk = ADCSRA;
  ADCSRA |= _BV(ADEN);
  float vin = getAdcVoltageAtPin(PIN_VIN);
  ADCSRA = bk;  
     592:	c5 b9       	out	0x05, r28	; 5
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:461
  updateRegister(I2C_POWER_MODE, (vin > 5.25f) ? 1 : 0);
     594:	c1 e0       	ldi	r28, 0x01	; 1
     596:	20 e0       	ldi	r18, 0x00	; 0
     598:	30 e0       	ldi	r19, 0x00	; 0
     59a:	48 ea       	ldi	r20, 0xA8	; 168
     59c:	50 e4       	ldi	r21, 0x40	; 64
     59e:	d0 db       	rcall	.-2144   	; 0xfffffd40 <__eeprom_end+0xff7efd40>
     5a0:	18 16       	cp	r1, r24
     5a2:	0c f0       	brlt	.+2      	; 0x5a6 <updatePowerMode()+0x3e>
     5a4:	c0 e0       	ldi	r28, 0x00	; 0
     5a6:	6c 2f       	mov	r22, r28
     5a8:	87 e0       	ldi	r24, 0x07	; 7
     5aa:	76 df       	rcall	.-276    	; 0x498 <updateRegister(unsigned char, unsigned char)>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:463
  return vin;
}
     5ac:	c7 01       	movw	r24, r14
     5ae:	b6 01       	movw	r22, r12
     5b0:	cf 91       	pop	r28
     5b2:	ff 90       	pop	r15
     5b4:	ef 90       	pop	r14
     5b6:	df 90       	pop	r13
     5b8:	cf 90       	pop	r12
     5ba:	08 95       	ret

000005bc <powerOn()>:
powerOn():
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:413
}


// output 5V to GPIO header
void powerOn() {
  powerIsOn = true;
     5bc:	81 e0       	ldi	r24, 0x01	; 1
     5be:	80 93 38 01 	sts	0x0138, r24	; 0x800138 <powerIsOn>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:414
  skipTempShutdownCount = 0;
     5c2:	10 92 39 01 	sts	0x0139, r1	; 0x800139 <skipTempShutdownCount>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:415
  digitalWrite(PIN_CTRL, 1);
     5c6:	61 e0       	ldi	r22, 0x01	; 1
     5c8:	83 e0       	ldi	r24, 0x03	; 3
     5ca:	78 dd       	rcall	.-1296   	; 0xbc <digitalWrite>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:416
  updatePowerMode();
     5cc:	cd cf       	rjmp	.-102    	; 0x568 <updatePowerMode()>

000005ce <sleep()>:
sleep():
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:333
  bitClear(TIMSK1, TOIE1);
}


// put MCU into sleep to save power
void sleep() {
     5ce:	cf 92       	push	r12
     5d0:	df 92       	push	r13
     5d2:	ef 92       	push	r14
     5d4:	ff 92       	push	r15
     5d6:	0f 93       	push	r16
     5d8:	1f 93       	push	r17
     5da:	cf 93       	push	r28
timer1_disable():
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:328


// disable timer1
void timer1_disable() {
  // disable Timer1 overflow interrupt
  bitClear(TIMSK1, TOIE1);
     5dc:	78 98       	cbi	0x0f, 0	; 15
sleep():
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:335


// put MCU into sleep to save power
void sleep() {
  timer1_disable();                       // disable Timer1
  ADCSRA &= ~_BV(ADEN);                   // ADC off
     5de:	2f 98       	cbi	0x05, 7	; 5
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:336
  set_sleep_mode(SLEEP_MODE_PWR_DOWN);    // power-down mode 
     5e0:	85 b7       	in	r24, 0x35	; 53
     5e2:	87 7e       	andi	r24, 0xE7	; 231
     5e4:	80 61       	ori	r24, 0x10	; 16
     5e6:	85 bf       	out	0x35, r24	; 53
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:337
  sleep_enable();                         // sets the Sleep Enable bit in the MCUCR Register (SE BIT)
     5e8:	85 b7       	in	r24, 0x35	; 53
     5ea:	80 62       	ori	r24, 0x20	; 32
     5ec:	85 bf       	out	0x35, r24	; 53
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:339
  
  GIMSK = _BV (PCIE1);                    // only enable interrupt for switch (PCINT9)
     5ee:	80 e2       	ldi	r24, 0x20	; 32
     5f0:	8b bf       	out	0x3b, r24	; 59
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:340
  PCMSK1 = _BV (PCINT9);
     5f2:	82 e0       	ldi	r24, 0x02	; 2
     5f4:	80 bd       	out	0x20, r24	; 32
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:341
  sei();
     5f6:	78 94       	sei
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:343

  wakeupByWatchdog = true;
     5f8:	81 e0       	ldi	r24, 0x01	; 1
     5fa:	80 93 32 01 	sts	0x0132, r24	; 0x800132 <wakeupByWatchdog>
delayMicroseconds():
/Users/ziyue/Library/Arduino15/packages/ATTinyCore/hardware/avr/1.5.2/cores/tinymodern/wiring.c:430


#endif

  // busy wait
  __asm__ __volatile__ (
     5fe:	0c ec       	ldi	r16, 0xCC	; 204
     600:	17 e0       	ldi	r17, 0x07	; 7
sleep():
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:345
  do {
    sleep_cpu();                          // sleep
     602:	88 95       	sleep
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:346
    if (wakeupByWatchdog) {               // wake up by watch dog
     604:	80 91 32 01 	lds	r24, 0x0132	; 0x800132 <wakeupByWatchdog>
     608:	88 23       	and	r24, r24
     60a:	09 f4       	brne	.+2      	; 0x60e <sleep()+0x40>
     60c:	64 c0       	rjmp	.+200    	; 0x6d6 <sleep()+0x108>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:347
      skipPulseCount ++;
     60e:	80 91 2a 01 	lds	r24, 0x012A	; 0x80012a <skipPulseCount>
     612:	8f 5f       	subi	r24, 0xFF	; 255
     614:	80 93 2a 01 	sts	0x012A, r24	; 0x80012a <skipPulseCount>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:348
      if (skipPulseCount >= i2cReg[I2C_CONF_PULSE_INTERVAL]) {
     618:	90 91 4e 01 	lds	r25, 0x014E	; 0x80014e <i2cReg+0x12>
     61c:	80 91 2a 01 	lds	r24, 0x012A	; 0x80012a <skipPulseCount>
     620:	89 17       	cp	r24, r25
     622:	08 f4       	brcc	.+2      	; 0x626 <sleep()+0x58>
     624:	58 c0       	rjmp	.+176    	; 0x6d6 <sleep()+0x108>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:349
        skipPulseCount = 0;
     626:	10 92 2a 01 	sts	0x012A, r1	; 0x80012a <skipPulseCount>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:352

        // blink white LED
        if (i2cReg[I2C_CONF_BLINK_LED] > 0) {
     62a:	80 91 50 01 	lds	r24, 0x0150	; 0x800150 <i2cReg+0x14>
     62e:	88 23       	and	r24, r24
     630:	69 f0       	breq	.+26     	; 0x64c <sleep()+0x7e>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:353
          byte ms = i2cReg[I2C_CONF_BLINK_LED];
     632:	c0 91 50 01 	lds	r28, 0x0150	; 0x800150 <i2cReg+0x14>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:354
          ledOn();
     636:	8a de       	rcall	.-748    	; 0x34c <ledOn()>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:355
          delay(ms);
     638:	8c 2f       	mov	r24, r28
     63a:	90 e0       	ldi	r25, 0x00	; 0
     63c:	b0 e0       	ldi	r27, 0x00	; 0
     63e:	a0 e0       	ldi	r26, 0x00	; 0
delay():
/Users/ziyue/Library/Arduino15/packages/ATTinyCore/hardware/avr/1.5.2/cores/tinymodern/wiring.c:252
}
void yield(void) __attribute__ ((weak, alias("__empty")));

void delay(unsigned long ms) //non-millis-timer-dependent delay()
{
  while(ms--){
     640:	01 97       	sbiw	r24, 0x01	; 1
     642:	a1 09       	sbc	r26, r1
     644:	b1 09       	sbc	r27, r1
     646:	08 f0       	brcs	.+2      	; 0x64a <sleep()+0x7c>
     648:	68 c0       	rjmp	.+208    	; 0x71a <sleep()+0x14c>
sleep():
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:356
          ledOff();
     64a:	77 de       	rcall	.-786    	; 0x33a <ledOff()>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:360
        }
  
        // dummy load
        if (i2cReg[I2C_CONF_DUMMY_LOAD] > 0) {
     64c:	80 91 53 01 	lds	r24, 0x0153	; 0x800153 <i2cReg+0x17>
     650:	88 23       	and	r24, r24
     652:	79 f0       	breq	.+30     	; 0x672 <sleep()+0xa4>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:361
          byte ms = i2cReg[I2C_CONF_DUMMY_LOAD];
     654:	c0 91 53 01 	lds	r28, 0x0153	; 0x800153 <i2cReg+0x17>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:362
          digitalWrite(PIN_CTRL, 1);
     658:	61 e0       	ldi	r22, 0x01	; 1
     65a:	83 e0       	ldi	r24, 0x03	; 3
     65c:	2f dd       	rcall	.-1442   	; 0xbc <digitalWrite>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:363
          delay(ms);
     65e:	8c 2f       	mov	r24, r28
     660:	90 e0       	ldi	r25, 0x00	; 0
     662:	b0 e0       	ldi	r27, 0x00	; 0
     664:	a0 e0       	ldi	r26, 0x00	; 0
delay():
/Users/ziyue/Library/Arduino15/packages/ATTinyCore/hardware/avr/1.5.2/cores/tinymodern/wiring.c:252
     666:	01 97       	sbiw	r24, 0x01	; 1
     668:	a1 09       	sbc	r26, r1
     66a:	b1 09       	sbc	r27, r1
     66c:	08 f0       	brcs	.+2      	; 0x670 <sleep()+0xa2>
     66e:	59 c0       	rjmp	.+178    	; 0x722 <sleep()+0x154>
sleep():
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:364
          cutPower();
     670:	79 de       	rcall	.-782    	; 0x364 <cutPower()>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:368
        }

        // update power mode and get input voltage
        float vin = updatePowerMode();
     672:	7a df       	rcall	.-268    	; 0x568 <updatePowerMode()>
     674:	6b 01       	movw	r12, r22
     676:	7c 01       	movw	r14, r24
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:372
  
        // check input voltage if shutdown because of low voltage, and recovery voltage has been set
        // will skip checking I2C_LV_SHUTDOWN if I2C_CONF_LOW_VOLTAGE is set to 0xFF
        if ((i2cReg[I2C_POWER_MODE] == 1 || i2cReg[I2C_CONF_IGNORE_POWER_MODE] == 1)
     678:	80 91 43 01 	lds	r24, 0x0143	; 0x800143 <i2cReg+0x7>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:374
            && (i2cReg[I2C_LV_SHUTDOWN] == 1 || i2cReg[I2C_CONF_LOW_VOLTAGE] == 255 || i2cReg[I2C_CONF_IGNORE_LV_SHUTDOWN] == 1) 
            && i2cReg[I2C_CONF_RECOVERY_VOLTAGE] != 255) {
     67c:	81 30       	cpi	r24, 0x01	; 1
     67e:	21 f0       	breq	.+8      	; 0x688 <sleep()+0xba>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:372
        // update power mode and get input voltage
        float vin = updatePowerMode();
  
        // check input voltage if shutdown because of low voltage, and recovery voltage has been set
        // will skip checking I2C_LV_SHUTDOWN if I2C_CONF_LOW_VOLTAGE is set to 0xFF
        if ((i2cReg[I2C_POWER_MODE] == 1 || i2cReg[I2C_CONF_IGNORE_POWER_MODE] == 1)
     680:	80 91 65 01 	lds	r24, 0x0165	; 0x800165 <i2cReg+0x29>
     684:	81 30       	cpi	r24, 0x01	; 1
     686:	39 f5       	brne	.+78     	; 0x6d6 <sleep()+0x108>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:373
            && (i2cReg[I2C_LV_SHUTDOWN] == 1 || i2cReg[I2C_CONF_LOW_VOLTAGE] == 255 || i2cReg[I2C_CONF_IGNORE_LV_SHUTDOWN] == 1) 
     688:	80 91 44 01 	lds	r24, 0x0144	; 0x800144 <i2cReg+0x8>
     68c:	81 30       	cpi	r24, 0x01	; 1
     68e:	41 f0       	breq	.+16     	; 0x6a0 <sleep()+0xd2>
     690:	80 91 4f 01 	lds	r24, 0x014F	; 0x80014f <i2cReg+0x13>
     694:	8f 3f       	cpi	r24, 0xFF	; 255
     696:	21 f0       	breq	.+8      	; 0x6a0 <sleep()+0xd2>
     698:	80 91 66 01 	lds	r24, 0x0166	; 0x800166 <i2cReg+0x2a>
     69c:	81 30       	cpi	r24, 0x01	; 1
     69e:	d9 f4       	brne	.+54     	; 0x6d6 <sleep()+0x108>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:374
            && i2cReg[I2C_CONF_RECOVERY_VOLTAGE] != 255) {
     6a0:	80 91 52 01 	lds	r24, 0x0152	; 0x800152 <i2cReg+0x16>
     6a4:	8f 3f       	cpi	r24, 0xFF	; 255
     6a6:	b9 f0       	breq	.+46     	; 0x6d6 <sleep()+0x108>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:375
          float vrec = ((float)i2cReg[I2C_CONF_RECOVERY_VOLTAGE]) / 10;
     6a8:	60 91 52 01 	lds	r22, 0x0152	; 0x800152 <i2cReg+0x16>
     6ac:	70 e0       	ldi	r23, 0x00	; 0
     6ae:	90 e0       	ldi	r25, 0x00	; 0
     6b0:	80 e0       	ldi	r24, 0x00	; 0
     6b2:	94 da       	rcall	.-2776   	; 0xfffffbdc <__eeprom_end+0xff7efbdc>
     6b4:	20 e0       	ldi	r18, 0x00	; 0
     6b6:	30 e0       	ldi	r19, 0x00	; 0
     6b8:	40 e2       	ldi	r20, 0x20	; 32
     6ba:	51 e4       	ldi	r21, 0x41	; 65
     6bc:	f6 d9       	rcall	.-3092   	; 0xfffffaaa <__eeprom_end+0xff7efaaa>
     6be:	9b 01       	movw	r18, r22
     6c0:	ac 01       	movw	r20, r24
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:376
          if (vin >= vrec) {
     6c2:	c7 01       	movw	r24, r14
     6c4:	b6 01       	movw	r22, r12
     6c6:	3c db       	rcall	.-2440   	; 0xfffffd40 <__eeprom_end+0xff7efd40>
     6c8:	87 fd       	sbrc	r24, 7
     6ca:	05 c0       	rjmp	.+10     	; 0x6d6 <sleep()+0x108>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:377
            wakeupByWatchdog = false;       // recovery from low voltage shutdown
     6cc:	10 92 32 01 	sts	0x0132, r1	; 0x800132 <wakeupByWatchdog>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:378
            updateRegister(I2C_ACTION_REASON, REASON_VOLTAGE_RESTORE);
     6d0:	65 e0       	ldi	r22, 0x05	; 5
     6d2:	8b e0       	ldi	r24, 0x0B	; 11
     6d4:	e1 de       	rcall	.-574    	; 0x498 <updateRegister(unsigned char, unsigned char)>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:383
          }
        }
      }
    }
  } while (wakeupByWatchdog);             // quit sleeping if wake up by button
     6d6:	80 91 32 01 	lds	r24, 0x0132	; 0x800132 <wakeupByWatchdog>
     6da:	81 11       	cpse	r24, r1
     6dc:	92 cf       	rjmp	.-220    	; 0x602 <sleep()+0x34>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:385

  cli();                                  // disable interrupts
     6de:	f8 94       	cli
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:386
  sleep_disable();                        // clear SE bit
     6e0:	85 b7       	in	r24, 0x35	; 53
     6e2:	8f 7d       	andi	r24, 0xDF	; 223
     6e4:	85 bf       	out	0x35, r24	; 53
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:387
  ADCSRA |= _BV(ADEN);                    // ADC on
     6e6:	2f 9a       	sbi	0x05, 7	; 5
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:388
  timer1_enable();                        // enable Timer1
     6e8:	45 de       	rcall	.-886    	; 0x374 <timer1_enable()>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:390

  GIMSK = _BV (PCIE0) | _BV (PCIE1);
     6ea:	80 e3       	ldi	r24, 0x30	; 48
     6ec:	8b bf       	out	0x3b, r24	; 59
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:391
  PCMSK1 = _BV (PCINT8) | _BV (PCINT9); 
     6ee:	83 e0       	ldi	r24, 0x03	; 3
     6f0:	80 bd       	out	0x20, r24	; 32
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:392
  sei();                                  // enable all required interrupts
     6f2:	78 94       	sei
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:395

  // tap the button to wake up
  listenToTxd = false;
     6f4:	10 92 2f 01 	sts	0x012F, r1	; 0x80012f <listenToTxd>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:396
  systemIsUp = false;
     6f8:	10 92 3a 01 	sts	0x013A, r1	; 0x80013a <systemIsUp>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:397
  turningOff = false;
     6fc:	10 92 37 01 	sts	0x0137, r1	; 0x800137 <turningOff>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:398
  powerOn();
     700:	5d df       	rcall	.-326    	; 0x5bc <powerOn()>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:399
  TCNT1 = getPowerCutPreloadTimer(true);
     702:	81 e0       	ldi	r24, 0x01	; 1
     704:	f3 dd       	rcall	.-1050   	; 0x2ec <getPowerCutPreloadTimer(unsigned char)>
     706:	9d bd       	out	0x2d, r25	; 45
     708:	8c bd       	out	0x2c, r24	; 44
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:400
}
     70a:	cf 91       	pop	r28
     70c:	1f 91       	pop	r17
     70e:	0f 91       	pop	r16
     710:	ff 90       	pop	r15
     712:	ef 90       	pop	r14
     714:	df 90       	pop	r13
     716:	cf 90       	pop	r12
     718:	08 95       	ret
delayMicroseconds():
/Users/ziyue/Library/Arduino15/packages/ATTinyCore/hardware/avr/1.5.2/cores/tinymodern/wiring.c:430


#endif

  // busy wait
  __asm__ __volatile__ (
     71a:	f8 01       	movw	r30, r16
     71c:	31 97       	sbiw	r30, 0x01	; 1
     71e:	f1 f7       	brne	.-4      	; 0x71c <sleep()+0x14e>
     720:	8f cf       	rjmp	.-226    	; 0x640 <sleep()+0x72>
     722:	f8 01       	movw	r30, r16
     724:	31 97       	sbiw	r30, 0x01	; 1
     726:	f1 f7       	brne	.-4      	; 0x724 <sleep()+0x156>
     728:	9e cf       	rjmp	.-196    	; 0x666 <sleep()+0x98>

0000072a <forcePowerCutIfNeeded()>:
forcePowerCutIfNeeded():
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:988
}


// force power cut, if button is pressed and hold for a few seconds
void forcePowerCutIfNeeded() {
 if (buttonPressed && digitalRead(PIN_BUTTON) == 0) {
     72a:	80 91 3b 01 	lds	r24, 0x013B	; 0x80013b <buttonPressed>
     72e:	88 23       	and	r24, r24
     730:	41 f0       	breq	.+16     	; 0x742 <forcePowerCutIfNeeded()+0x18>
     732:	81 e0       	ldi	r24, 0x01	; 1
     734:	b0 dc       	rcall	.-1696   	; 0x96 <digitalRead>
     736:	89 2b       	or	r24, r25
     738:	21 f4       	brne	.+8      	; 0x742 <forcePowerCutIfNeeded()+0x18>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:989
    systemIsUp = false;
     73a:	10 92 3a 01 	sts	0x013A, r1	; 0x80013a <systemIsUp>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:990
    cutPower();
     73e:	12 de       	rcall	.-988    	; 0x364 <cutPower()>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:991
    sleep();
     740:	46 cf       	rjmp	.-372    	; 0x5ce <sleep()>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:993
  }
}
     742:	08 95       	ret

00000744 <__vector_29>:
__vector_29():
/Users/ziyue/Library/Arduino15/packages/ATTinyCore/hardware/avr/1.5.2/libraries/Wire/src/WireS.cpp:168
        }
    }
    TWSCRB = (B0011 | TWI_HIGH_NOISE_MODE);
}

ISR(TWI_SLAVE_vect) {
     744:	1f 92       	push	r1
     746:	0f 92       	push	r0
     748:	0f b6       	in	r0, 0x3f	; 63
     74a:	0f 92       	push	r0
     74c:	11 24       	eor	r1, r1
     74e:	2f 93       	push	r18
     750:	3f 93       	push	r19
     752:	4f 93       	push	r20
     754:	5f 93       	push	r21
     756:	6f 93       	push	r22
     758:	7f 93       	push	r23
     75a:	8f 93       	push	r24
     75c:	9f 93       	push	r25
     75e:	af 93       	push	r26
     760:	bf 93       	push	r27
     762:	cf 93       	push	r28
     764:	ef 93       	push	r30
     766:	ff 93       	push	r31
i2c_isr_handler():
/Users/ziyue/Library/Arduino15/packages/ATTinyCore/hardware/avr/1.5.2/libraries/Wire/src/WireS.cpp:105
    return i2c->Buffer[i2c->rxBufferIndex];
}

void i2c_isr_handler() {
    struct i2cStruct *i2c = &(i2c_tinyS::i2cData);
    byte status = TWSSRA;
     768:	c0 91 a3 00 	lds	r28, 0x00A3	; 0x8000a3 <__DATA_REGION_ORIGIN__+0x43>
/Users/ziyue/Library/Arduino15/packages/ATTinyCore/hardware/avr/1.5.2/libraries/Wire/src/WireS.cpp:106
    if ((status & (_BV(TWC) | _BV(TWBE)))) {
     76c:	8c 2f       	mov	r24, r28
     76e:	8c 70       	andi	r24, 0x0C	; 12
     770:	19 f1       	breq	.+70     	; 0x7b8 <__vector_29+0x74>
/Users/ziyue/Library/Arduino15/packages/ATTinyCore/hardware/avr/1.5.2/libraries/Wire/src/WireS.cpp:107
        i2c->startCount = -1;
     772:	8f ef       	ldi	r24, 0xFF	; 255
     774:	80 93 97 01 	sts	0x0197, r24	; 0x800197 <i2c_tinyS::i2cData+0x28>
/Users/ziyue/Library/Arduino15/packages/ATTinyCore/hardware/avr/1.5.2/libraries/Wire/src/WireS.cpp:108
        CLEAR_TENBIT;
     778:	80 91 98 01 	lds	r24, 0x0198	; 0x800198 <i2c_tinyS::i2cData+0x29>
     77c:	90 91 99 01 	lds	r25, 0x0199	; 0x800199 <i2c_tinyS::i2cData+0x2a>
     780:	9f 77       	andi	r25, 0x7F	; 127
     782:	90 93 99 01 	sts	0x0199, r25	; 0x800199 <i2c_tinyS::i2cData+0x2a>
     786:	80 93 98 01 	sts	0x0198, r24	; 0x800198 <i2c_tinyS::i2cData+0x29>
/Users/ziyue/Library/Arduino15/packages/ATTinyCore/hardware/avr/1.5.2/libraries/Wire/src/WireS.cpp:109
        TWSSRA |= (_BV(TWASIF) | _BV(TWDIF) | _BV(TWBE));
     78a:	80 91 a3 00 	lds	r24, 0x00A3	; 0x8000a3 <__DATA_REGION_ORIGIN__+0x43>
     78e:	84 6c       	ori	r24, 0xC4	; 196
/Users/ziyue/Library/Arduino15/packages/ATTinyCore/hardware/avr/1.5.2/libraries/Wire/src/WireS.cpp:147
                    i2c->user_onReceive(i2c->rxBufferLength);
                }
            }
            i2c->startCount = -1;
            CLEAR_TENBIT;
            TWSSRA = _BV(TWASIF);
     790:	80 93 a3 00 	sts	0x00A3, r24	; 0x8000a3 <__DATA_REGION_ORIGIN__+0x43>
__vector_29():
/Users/ziyue/Library/Arduino15/packages/ATTinyCore/hardware/avr/1.5.2/libraries/Wire/src/WireS.cpp:172

ISR(TWI_SLAVE_vect) {
    I2C_INTR_FLAG_ON;
    i2c_isr_handler();
    I2C_INTR_FLAG_OFF;
}
     794:	ff 91       	pop	r31
     796:	ef 91       	pop	r30
     798:	cf 91       	pop	r28
     79a:	bf 91       	pop	r27
     79c:	af 91       	pop	r26
     79e:	9f 91       	pop	r25
     7a0:	8f 91       	pop	r24
     7a2:	7f 91       	pop	r23
     7a4:	6f 91       	pop	r22
     7a6:	5f 91       	pop	r21
     7a8:	4f 91       	pop	r20
     7aa:	3f 91       	pop	r19
     7ac:	2f 91       	pop	r18
     7ae:	0f 90       	pop	r0
     7b0:	0f be       	out	0x3f, r0	; 63
     7b2:	0f 90       	pop	r0
     7b4:	1f 90       	pop	r1
     7b6:	18 95       	reti
i2c_isr_handler():
/Users/ziyue/Library/Arduino15/packages/ATTinyCore/hardware/avr/1.5.2/libraries/Wire/src/WireS.cpp:112
        i2c->startCount = -1;
        CLEAR_TENBIT;
        TWSSRA |= (_BV(TWASIF) | _BV(TWDIF) | _BV(TWBE));
        return;
    }
    if ((status & _BV(TWASIF)) || IS_TENBIT) {
     7b8:	c6 fd       	sbrc	r28, 6
     7ba:	28 c0       	rjmp	.+80     	; 0x80c <__vector_29+0xc8>
     7bc:	80 91 98 01 	lds	r24, 0x0198	; 0x800198 <i2c_tinyS::i2cData+0x29>
     7c0:	90 91 99 01 	lds	r25, 0x0199	; 0x800199 <i2c_tinyS::i2cData+0x2a>
     7c4:	97 fd       	sbrc	r25, 7
     7c6:	22 c0       	rjmp	.+68     	; 0x80c <__vector_29+0xc8>
/Users/ziyue/Library/Arduino15/packages/ATTinyCore/hardware/avr/1.5.2/libraries/Wire/src/WireS.cpp:150
            i2c->startCount = -1;
            CLEAR_TENBIT;
            TWSSRA = _BV(TWASIF);
            return;
        }
    } else if ((status & _BV(TWDIF))) {
     7c8:	c7 ff       	sbrs	r28, 7
     7ca:	6f c0       	rjmp	.+222    	; 0x8aa <__vector_29+0x166>
/Users/ziyue/Library/Arduino15/packages/ATTinyCore/hardware/avr/1.5.2/libraries/Wire/src/WireS.cpp:151
        if ((status & _BV(TWDIR))) {
     7cc:	c1 ff       	sbrs	r28, 1
     7ce:	af c0       	rjmp	.+350    	; 0x92e <__vector_29+0x1ea>
/Users/ziyue/Library/Arduino15/packages/ATTinyCore/hardware/avr/1.5.2/libraries/Wire/src/WireS.cpp:152
            if (i2c->txBufferIndex < i2c->txBufferLength) TWSD = i2c->Buffer[i2c->txBufferIndex++];
     7d0:	20 91 93 01 	lds	r18, 0x0193	; 0x800193 <i2c_tinyS::i2cData+0x24>
     7d4:	30 91 94 01 	lds	r19, 0x0194	; 0x800194 <i2c_tinyS::i2cData+0x25>
     7d8:	80 91 95 01 	lds	r24, 0x0195	; 0x800195 <i2c_tinyS::i2cData+0x26>
     7dc:	90 91 96 01 	lds	r25, 0x0196	; 0x800196 <i2c_tinyS::i2cData+0x27>
     7e0:	28 17       	cp	r18, r24
     7e2:	39 07       	cpc	r19, r25
     7e4:	08 f0       	brcs	.+2      	; 0x7e8 <__vector_29+0xa4>
     7e6:	a1 c0       	rjmp	.+322    	; 0x92a <__vector_29+0x1e6>
     7e8:	80 91 93 01 	lds	r24, 0x0193	; 0x800193 <i2c_tinyS::i2cData+0x24>
     7ec:	90 91 94 01 	lds	r25, 0x0194	; 0x800194 <i2c_tinyS::i2cData+0x25>
     7f0:	9c 01       	movw	r18, r24
     7f2:	2f 5f       	subi	r18, 0xFF	; 255
     7f4:	3f 4f       	sbci	r19, 0xFF	; 255
     7f6:	30 93 94 01 	sts	0x0194, r19	; 0x800194 <i2c_tinyS::i2cData+0x25>
     7fa:	20 93 93 01 	sts	0x0193, r18	; 0x800193 <i2c_tinyS::i2cData+0x24>
     7fe:	81 59       	subi	r24, 0x91	; 145
     800:	9e 4f       	sbci	r25, 0xFE	; 254
     802:	fc 01       	movw	r30, r24
     804:	80 81       	ld	r24, Z
     806:	80 93 a0 00 	sts	0x00A0, r24	; 0x8000a0 <__DATA_REGION_ORIGIN__+0x40>
     80a:	4f c0       	rjmp	.+158    	; 0x8aa <__vector_29+0x166>
/Users/ziyue/Library/Arduino15/packages/ATTinyCore/hardware/avr/1.5.2/libraries/Wire/src/WireS.cpp:113
        CLEAR_TENBIT;
        TWSSRA |= (_BV(TWASIF) | _BV(TWDIF) | _BV(TWBE));
        return;
    }
    if ((status & _BV(TWASIF)) || IS_TENBIT) {
        if ((status & _BV(TWAS))) {
     80c:	c0 ff       	sbrs	r28, 0
     80e:	66 c0       	rjmp	.+204    	; 0x8dc <__vector_29+0x198>
/Users/ziyue/Library/Arduino15/packages/ATTinyCore/hardware/avr/1.5.2/libraries/Wire/src/WireS.cpp:114
            if (IS_TENBIT) i2c->Addr = (((i2c->Addr & B110) << 7) | TWSD);
     810:	80 91 98 01 	lds	r24, 0x0198	; 0x800198 <i2c_tinyS::i2cData+0x29>
     814:	90 91 99 01 	lds	r25, 0x0199	; 0x800199 <i2c_tinyS::i2cData+0x2a>
     818:	97 ff       	sbrs	r25, 7
     81a:	29 c0       	rjmp	.+82     	; 0x86e <__vector_29+0x12a>
     81c:	80 91 98 01 	lds	r24, 0x0198	; 0x800198 <i2c_tinyS::i2cData+0x29>
     820:	90 91 99 01 	lds	r25, 0x0199	; 0x800199 <i2c_tinyS::i2cData+0x2a>
     824:	20 91 a0 00 	lds	r18, 0x00A0	; 0x8000a0 <__DATA_REGION_ORIGIN__+0x40>
     828:	96 95       	lsr	r25
     82a:	98 2f       	mov	r25, r24
     82c:	88 27       	eor	r24, r24
     82e:	97 95       	ror	r25
     830:	87 95       	ror	r24
     832:	88 27       	eor	r24, r24
     834:	93 70       	andi	r25, 0x03	; 3
     836:	82 2b       	or	r24, r18
     838:	90 93 99 01 	sts	0x0199, r25	; 0x800199 <i2c_tinyS::i2cData+0x2a>
     83c:	80 93 98 01 	sts	0x0198, r24	; 0x800198 <i2c_tinyS::i2cData+0x29>
/Users/ziyue/Library/Arduino15/packages/ATTinyCore/hardware/avr/1.5.2/libraries/Wire/src/WireS.cpp:124
                    SET_TENBIT;
                    TWSCRB = (B0011 | TWI_HIGH_NOISE_MODE);
                    return;
                }
            }
            if (i2c->user_onAddrReceive != (void *)NULL) {
     840:	e0 91 9a 01 	lds	r30, 0x019A	; 0x80019a <i2c_tinyS::i2cData+0x2b>
     844:	f0 91 9b 01 	lds	r31, 0x019B	; 0x80019b <i2c_tinyS::i2cData+0x2c>
     848:	30 97       	sbiw	r30, 0x00	; 0
     84a:	89 f1       	breq	.+98     	; 0x8ae <__vector_29+0x16a>
/Users/ziyue/Library/Arduino15/packages/ATTinyCore/hardware/avr/1.5.2/libraries/Wire/src/WireS.cpp:125
                i2c->rxBufferIndex = 0;
     84c:	10 92 90 01 	sts	0x0190, r1	; 0x800190 <i2c_tinyS::i2cData+0x21>
     850:	10 92 8f 01 	sts	0x018F, r1	; 0x80018f <i2c_tinyS::i2cData+0x20>
/Users/ziyue/Library/Arduino15/packages/ATTinyCore/hardware/avr/1.5.2/libraries/Wire/src/WireS.cpp:126
                if (!i2c->user_onAddrReceive(i2c->Addr, i2c->startCount)) {
     854:	60 91 97 01 	lds	r22, 0x0197	; 0x800197 <i2c_tinyS::i2cData+0x28>
     858:	80 91 98 01 	lds	r24, 0x0198	; 0x800198 <i2c_tinyS::i2cData+0x29>
     85c:	90 91 99 01 	lds	r25, 0x0199	; 0x800199 <i2c_tinyS::i2cData+0x2a>
     860:	09 95       	icall
     862:	81 11       	cpse	r24, r1
     864:	24 c0       	rjmp	.+72     	; 0x8ae <__vector_29+0x16a>
/Users/ziyue/Library/Arduino15/packages/ATTinyCore/hardware/avr/1.5.2/libraries/Wire/src/WireS.cpp:127
                    TWSCRB = (B0111 | TWI_HIGH_NOISE_MODE);
     866:	87 e0       	ldi	r24, 0x07	; 7
/Users/ziyue/Library/Arduino15/packages/ATTinyCore/hardware/avr/1.5.2/libraries/Wire/src/WireS.cpp:165
                TWSCRB = (B0110 | TWI_HIGH_NOISE_MODE);
                return;
            }
        }
    }
    TWSCRB = (B0011 | TWI_HIGH_NOISE_MODE);
     868:	80 93 a4 00 	sts	0x00A4, r24	; 0x8000a4 <__DATA_REGION_ORIGIN__+0x44>
     86c:	93 cf       	rjmp	.-218    	; 0x794 <__vector_29+0x50>
/Users/ziyue/Library/Arduino15/packages/ATTinyCore/hardware/avr/1.5.2/libraries/Wire/src/WireS.cpp:116
    }
    if ((status & _BV(TWASIF)) || IS_TENBIT) {
        if ((status & _BV(TWAS))) {
            if (IS_TENBIT) i2c->Addr = (((i2c->Addr & B110) << 7) | TWSD);
            else {
                i2c->Addr = TWSD;
     86e:	80 91 a0 00 	lds	r24, 0x00A0	; 0x8000a0 <__DATA_REGION_ORIGIN__+0x40>
     872:	90 e0       	ldi	r25, 0x00	; 0
     874:	90 93 99 01 	sts	0x0199, r25	; 0x800199 <i2c_tinyS::i2cData+0x2a>
     878:	80 93 98 01 	sts	0x0198, r24	; 0x800198 <i2c_tinyS::i2cData+0x29>
/Users/ziyue/Library/Arduino15/packages/ATTinyCore/hardware/avr/1.5.2/libraries/Wire/src/WireS.cpp:117
                i2c->startCount++;
     87c:	80 91 97 01 	lds	r24, 0x0197	; 0x800197 <i2c_tinyS::i2cData+0x28>
     880:	8f 5f       	subi	r24, 0xFF	; 255
     882:	80 93 97 01 	sts	0x0197, r24	; 0x800197 <i2c_tinyS::i2cData+0x28>
/Users/ziyue/Library/Arduino15/packages/ATTinyCore/hardware/avr/1.5.2/libraries/Wire/src/WireS.cpp:118
                if ((i2c->Addr & B11111001) == B11110000) {
     886:	80 91 98 01 	lds	r24, 0x0198	; 0x800198 <i2c_tinyS::i2cData+0x29>
     88a:	90 91 99 01 	lds	r25, 0x0199	; 0x800199 <i2c_tinyS::i2cData+0x2a>
     88e:	89 7f       	andi	r24, 0xF9	; 249
     890:	99 27       	eor	r25, r25
     892:	80 3f       	cpi	r24, 0xF0	; 240
     894:	91 05       	cpc	r25, r1
     896:	a1 f6       	brne	.-88     	; 0x840 <__vector_29+0xfc>
/Users/ziyue/Library/Arduino15/packages/ATTinyCore/hardware/avr/1.5.2/libraries/Wire/src/WireS.cpp:119
                    SET_TENBIT;
     898:	80 91 98 01 	lds	r24, 0x0198	; 0x800198 <i2c_tinyS::i2cData+0x29>
     89c:	90 91 99 01 	lds	r25, 0x0199	; 0x800199 <i2c_tinyS::i2cData+0x2a>
     8a0:	90 68       	ori	r25, 0x80	; 128
     8a2:	90 93 99 01 	sts	0x0199, r25	; 0x800199 <i2c_tinyS::i2cData+0x2a>
     8a6:	80 93 98 01 	sts	0x0198, r24	; 0x800198 <i2c_tinyS::i2cData+0x29>
/Users/ziyue/Library/Arduino15/packages/ATTinyCore/hardware/avr/1.5.2/libraries/Wire/src/WireS.cpp:165
                TWSCRB = (B0110 | TWI_HIGH_NOISE_MODE);
                return;
            }
        }
    }
    TWSCRB = (B0011 | TWI_HIGH_NOISE_MODE);
     8aa:	83 e0       	ldi	r24, 0x03	; 3
     8ac:	dd cf       	rjmp	.-70     	; 0x868 <__vector_29+0x124>
/Users/ziyue/Library/Arduino15/packages/ATTinyCore/hardware/avr/1.5.2/libraries/Wire/src/WireS.cpp:131
                if (!i2c->user_onAddrReceive(i2c->Addr, i2c->startCount)) {
                    TWSCRB = (B0111 | TWI_HIGH_NOISE_MODE);
                    return;
                }
            }
            if ((status & _BV(TWDIR))) {
     8ae:	c1 ff       	sbrs	r28, 1
     8b0:	10 c0       	rjmp	.+32     	; 0x8d2 <__vector_29+0x18e>
/Users/ziyue/Library/Arduino15/packages/ATTinyCore/hardware/avr/1.5.2/libraries/Wire/src/WireS.cpp:132
                i2c->txBufferLength = 0;
     8b2:	10 92 96 01 	sts	0x0196, r1	; 0x800196 <i2c_tinyS::i2cData+0x27>
     8b6:	10 92 95 01 	sts	0x0195, r1	; 0x800195 <i2c_tinyS::i2cData+0x26>
/Users/ziyue/Library/Arduino15/packages/ATTinyCore/hardware/avr/1.5.2/libraries/Wire/src/WireS.cpp:133
                if (i2c->user_onRequest != (void *)NULL) i2c->user_onRequest();
     8ba:	e0 91 9e 01 	lds	r30, 0x019E	; 0x80019e <i2c_tinyS::i2cData+0x2f>
     8be:	f0 91 9f 01 	lds	r31, 0x019F	; 0x80019f <i2c_tinyS::i2cData+0x30>
     8c2:	30 97       	sbiw	r30, 0x00	; 0
     8c4:	09 f0       	breq	.+2      	; 0x8c8 <__vector_29+0x184>
     8c6:	09 95       	icall
/Users/ziyue/Library/Arduino15/packages/ATTinyCore/hardware/avr/1.5.2/libraries/Wire/src/WireS.cpp:134
                i2c->txBufferIndex = 0;
     8c8:	10 92 94 01 	sts	0x0194, r1	; 0x800194 <i2c_tinyS::i2cData+0x25>
     8cc:	10 92 93 01 	sts	0x0193, r1	; 0x800193 <i2c_tinyS::i2cData+0x24>
     8d0:	ec cf       	rjmp	.-40     	; 0x8aa <__vector_29+0x166>
/Users/ziyue/Library/Arduino15/packages/ATTinyCore/hardware/avr/1.5.2/libraries/Wire/src/WireS.cpp:135
            } else i2c->rxBufferLength = 0;
     8d2:	10 92 92 01 	sts	0x0192, r1	; 0x800192 <i2c_tinyS::i2cData+0x23>
     8d6:	10 92 91 01 	sts	0x0191, r1	; 0x800191 <i2c_tinyS::i2cData+0x22>
     8da:	e7 cf       	rjmp	.-50     	; 0x8aa <__vector_29+0x166>
/Users/ziyue/Library/Arduino15/packages/ATTinyCore/hardware/avr/1.5.2/libraries/Wire/src/WireS.cpp:137
        } else {
            if ((status & _BV(TWDIR))) {
     8dc:	c1 ff       	sbrs	r28, 1
     8de:	15 c0       	rjmp	.+42     	; 0x90a <__vector_29+0x1c6>
/Users/ziyue/Library/Arduino15/packages/ATTinyCore/hardware/avr/1.5.2/libraries/Wire/src/WireS.cpp:138
                if (i2c->user_onStop != (void *)NULL) i2c->user_onStop();
     8e0:	e0 91 a0 01 	lds	r30, 0x01A0	; 0x8001a0 <i2c_tinyS::i2cData+0x31>
     8e4:	f0 91 a1 01 	lds	r31, 0x01A1	; 0x8001a1 <i2c_tinyS::i2cData+0x32>
     8e8:	30 97       	sbiw	r30, 0x00	; 0
     8ea:	09 f0       	breq	.+2      	; 0x8ee <__vector_29+0x1aa>
     8ec:	09 95       	icall
/Users/ziyue/Library/Arduino15/packages/ATTinyCore/hardware/avr/1.5.2/libraries/Wire/src/WireS.cpp:145
                if (i2c->user_onReceive != (void *)NULL) {
                    i2c->rxBufferIndex = 0;
                    i2c->user_onReceive(i2c->rxBufferLength);
                }
            }
            i2c->startCount = -1;
     8ee:	8f ef       	ldi	r24, 0xFF	; 255
     8f0:	80 93 97 01 	sts	0x0197, r24	; 0x800197 <i2c_tinyS::i2cData+0x28>
/Users/ziyue/Library/Arduino15/packages/ATTinyCore/hardware/avr/1.5.2/libraries/Wire/src/WireS.cpp:146
            CLEAR_TENBIT;
     8f4:	80 91 98 01 	lds	r24, 0x0198	; 0x800198 <i2c_tinyS::i2cData+0x29>
     8f8:	90 91 99 01 	lds	r25, 0x0199	; 0x800199 <i2c_tinyS::i2cData+0x2a>
     8fc:	9f 77       	andi	r25, 0x7F	; 127
     8fe:	90 93 99 01 	sts	0x0199, r25	; 0x800199 <i2c_tinyS::i2cData+0x2a>
     902:	80 93 98 01 	sts	0x0198, r24	; 0x800198 <i2c_tinyS::i2cData+0x29>
/Users/ziyue/Library/Arduino15/packages/ATTinyCore/hardware/avr/1.5.2/libraries/Wire/src/WireS.cpp:147
            TWSSRA = _BV(TWASIF);
     906:	80 e4       	ldi	r24, 0x40	; 64
     908:	43 cf       	rjmp	.-378    	; 0x790 <__vector_29+0x4c>
/Users/ziyue/Library/Arduino15/packages/ATTinyCore/hardware/avr/1.5.2/libraries/Wire/src/WireS.cpp:140
            } else i2c->rxBufferLength = 0;
        } else {
            if ((status & _BV(TWDIR))) {
                if (i2c->user_onStop != (void *)NULL) i2c->user_onStop();
            } else {
                if (i2c->user_onReceive != (void *)NULL) {
     90a:	e0 91 9c 01 	lds	r30, 0x019C	; 0x80019c <i2c_tinyS::i2cData+0x2d>
     90e:	f0 91 9d 01 	lds	r31, 0x019D	; 0x80019d <i2c_tinyS::i2cData+0x2e>
     912:	30 97       	sbiw	r30, 0x00	; 0
     914:	61 f3       	breq	.-40     	; 0x8ee <__vector_29+0x1aa>
/Users/ziyue/Library/Arduino15/packages/ATTinyCore/hardware/avr/1.5.2/libraries/Wire/src/WireS.cpp:141
                    i2c->rxBufferIndex = 0;
     916:	10 92 90 01 	sts	0x0190, r1	; 0x800190 <i2c_tinyS::i2cData+0x21>
     91a:	10 92 8f 01 	sts	0x018F, r1	; 0x80018f <i2c_tinyS::i2cData+0x20>
/Users/ziyue/Library/Arduino15/packages/ATTinyCore/hardware/avr/1.5.2/libraries/Wire/src/WireS.cpp:142
                    i2c->user_onReceive(i2c->rxBufferLength);
     91e:	80 91 91 01 	lds	r24, 0x0191	; 0x800191 <i2c_tinyS::i2cData+0x22>
     922:	90 91 92 01 	lds	r25, 0x0192	; 0x800192 <i2c_tinyS::i2cData+0x23>
     926:	09 95       	icall
     928:	e2 cf       	rjmp	.-60     	; 0x8ee <__vector_29+0x1aa>
/Users/ziyue/Library/Arduino15/packages/ATTinyCore/hardware/avr/1.5.2/libraries/Wire/src/WireS.cpp:154
        }
    } else if ((status & _BV(TWDIF))) {
        if ((status & _BV(TWDIR))) {
            if (i2c->txBufferIndex < i2c->txBufferLength) TWSD = i2c->Buffer[i2c->txBufferIndex++];
            else {
                TWSCRB = (B0010 | TWI_HIGH_NOISE_MODE);
     92a:	82 e0       	ldi	r24, 0x02	; 2
     92c:	9d cf       	rjmp	.-198    	; 0x868 <__vector_29+0x124>
/Users/ziyue/Library/Arduino15/packages/ATTinyCore/hardware/avr/1.5.2/libraries/Wire/src/WireS.cpp:158
                return;
            }
        } else {
            if (i2c->rxBufferLength < I2C_BUFFER_LENGTH) i2c->Buffer[i2c->rxBufferLength++] = TWSD;
     92e:	80 91 91 01 	lds	r24, 0x0191	; 0x800191 <i2c_tinyS::i2cData+0x22>
     932:	90 91 92 01 	lds	r25, 0x0192	; 0x800192 <i2c_tinyS::i2cData+0x23>
     936:	80 97       	sbiw	r24, 0x20	; 32
     938:	90 f4       	brcc	.+36     	; 0x95e <__vector_29+0x21a>
     93a:	80 91 91 01 	lds	r24, 0x0191	; 0x800191 <i2c_tinyS::i2cData+0x22>
     93e:	90 91 92 01 	lds	r25, 0x0192	; 0x800192 <i2c_tinyS::i2cData+0x23>
     942:	9c 01       	movw	r18, r24
     944:	2f 5f       	subi	r18, 0xFF	; 255
     946:	3f 4f       	sbci	r19, 0xFF	; 255
     948:	30 93 92 01 	sts	0x0192, r19	; 0x800192 <i2c_tinyS::i2cData+0x23>
     94c:	20 93 91 01 	sts	0x0191, r18	; 0x800191 <i2c_tinyS::i2cData+0x22>
     950:	20 91 a0 00 	lds	r18, 0x00A0	; 0x8000a0 <__DATA_REGION_ORIGIN__+0x40>
     954:	81 59       	subi	r24, 0x91	; 145
     956:	9e 4f       	sbci	r25, 0xFE	; 254
     958:	fc 01       	movw	r30, r24
     95a:	20 83       	st	Z, r18
     95c:	a6 cf       	rjmp	.-180    	; 0x8aa <__vector_29+0x166>
/Users/ziyue/Library/Arduino15/packages/ATTinyCore/hardware/avr/1.5.2/libraries/Wire/src/WireS.cpp:160
            else {
                TWSCRB = (B0110 | TWI_HIGH_NOISE_MODE);
     95e:	86 e0       	ldi	r24, 0x06	; 6
     960:	83 cf       	rjmp	.-250    	; 0x868 <__vector_29+0x124>

00000962 <__vector_8>:
__vector_8():
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:735
  lastSystemUp = systemUp;
}


// timer1 overflow interrupt routine
ISR (TIM1_OVF_vect) {
     962:	1f 92       	push	r1
     964:	0f 92       	push	r0
     966:	0f b6       	in	r0, 0x3f	; 63
     968:	0f 92       	push	r0
     96a:	11 24       	eor	r1, r1
     96c:	2f 93       	push	r18
     96e:	3f 93       	push	r19
     970:	4f 93       	push	r20
     972:	5f 93       	push	r21
     974:	6f 93       	push	r22
     976:	7f 93       	push	r23
     978:	8f 93       	push	r24
     97a:	9f 93       	push	r25
     97c:	af 93       	push	r26
     97e:	bf 93       	push	r27
     980:	ef 93       	push	r30
     982:	ff 93       	push	r31
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:736
  if (powerCutDelay == 0) {
     984:	80 91 34 01 	lds	r24, 0x0134	; 0x800134 <powerCutDelay>
     988:	90 91 35 01 	lds	r25, 0x0135	; 0x800135 <powerCutDelay+0x1>
     98c:	89 2b       	or	r24, r25
     98e:	41 f5       	brne	.+80     	; 0x9e0 <__vector_8+0x7e>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:738
    // cut the power after delay
    TCNT1 = getPowerCutPreloadTimer(true);
     990:	81 e0       	ldi	r24, 0x01	; 1
     992:	ac dc       	rcall	.-1704   	; 0x2ec <getPowerCutPreloadTimer(unsigned char)>
     994:	9d bd       	out	0x2d, r25	; 45
     996:	8c bd       	out	0x2c, r24	; 44
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:739
    forcePowerCutIfNeeded();
     998:	c8 de       	rcall	.-624    	; 0x72a <forcePowerCutIfNeeded()>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:740
    if (turningOff) {
     99a:	80 91 37 01 	lds	r24, 0x0137	; 0x800137 <turningOff>
     99e:	88 23       	and	r24, r24
     9a0:	59 f0       	breq	.+22     	; 0x9b8 <__vector_8+0x56>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:741
      if (turnOffFromTXD && digitalRead(PIN_TX_UP) == 1) {  // if it is rebooting
     9a2:	80 91 33 01 	lds	r24, 0x0133	; 0x800133 <turnOffFromTXD>
     9a6:	88 23       	and	r24, r24
     9a8:	c1 f0       	breq	.+48     	; 0x9da <__vector_8+0x78>
     9aa:	85 e0       	ldi	r24, 0x05	; 5
     9ac:	74 db       	rcall	.-2328   	; 0x96 <digitalRead>
     9ae:	01 97       	sbiw	r24, 0x01	; 1
     9b0:	a1 f4       	brne	.+40     	; 0x9da <__vector_8+0x78>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:742
        turningOff = false;
     9b2:	10 92 37 01 	sts	0x0137, r1	; 0x800137 <turningOff>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:743
        ledOn();
     9b6:	ca dc       	rcall	.-1644   	; 0x34c <ledOn()>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:753
    }
  } else {
    TCNT1 = getPowerCutPreloadTimer(false);
    forcePowerCutIfNeeded();
  }
}
     9b8:	ff 91       	pop	r31
     9ba:	ef 91       	pop	r30
     9bc:	bf 91       	pop	r27
     9be:	af 91       	pop	r26
     9c0:	9f 91       	pop	r25
     9c2:	8f 91       	pop	r24
     9c4:	7f 91       	pop	r23
     9c6:	6f 91       	pop	r22
     9c8:	5f 91       	pop	r21
     9ca:	4f 91       	pop	r20
     9cc:	3f 91       	pop	r19
     9ce:	2f 91       	pop	r18
     9d0:	0f 90       	pop	r0
     9d2:	0f be       	out	0x3f, r0	; 63
     9d4:	0f 90       	pop	r0
     9d6:	1f 90       	pop	r1
     9d8:	18 95       	reti
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:745
    if (turningOff) {
      if (turnOffFromTXD && digitalRead(PIN_TX_UP) == 1) {  // if it is rebooting
        turningOff = false;
        ledOn();
      } else {  // cut the power and enter sleep
        cutPower();
     9da:	c4 dc       	rcall	.-1656   	; 0x364 <cutPower()>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:746
        sleep();
     9dc:	f8 dd       	rcall	.-1040   	; 0x5ce <sleep()>
     9de:	ec cf       	rjmp	.-40     	; 0x9b8 <__vector_8+0x56>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:750
      }
    }
  } else {
    TCNT1 = getPowerCutPreloadTimer(false);
     9e0:	80 e0       	ldi	r24, 0x00	; 0
     9e2:	84 dc       	rcall	.-1784   	; 0x2ec <getPowerCutPreloadTimer(unsigned char)>
     9e4:	9d bd       	out	0x2d, r25	; 45
     9e6:	8c bd       	out	0x2c, r24	; 44
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:751
    forcePowerCutIfNeeded();
     9e8:	a0 de       	rcall	.-704    	; 0x72a <forcePowerCutIfNeeded()>
     9ea:	e6 cf       	rjmp	.-52     	; 0x9b8 <__vector_8+0x56>

000009ec <__vector_3>:
__vector_3():
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:684
  }
}


// pin state change interrupt routine for PCINT1_vect (PCINT8~15)
ISR (PCINT1_vect) {
     9ec:	1f 92       	push	r1
     9ee:	0f 92       	push	r0
     9f0:	0f b6       	in	r0, 0x3f	; 63
     9f2:	0f 92       	push	r0
     9f4:	11 24       	eor	r1, r1
     9f6:	2f 93       	push	r18
     9f8:	3f 93       	push	r19
     9fa:	4f 93       	push	r20
     9fc:	5f 93       	push	r21
     9fe:	6f 93       	push	r22
     a00:	7f 93       	push	r23
     a02:	8f 93       	push	r24
     a04:	9f 93       	push	r25
     a06:	af 93       	push	r26
     a08:	bf 93       	push	r27
     a0a:	cf 93       	push	r28
     a0c:	df 93       	push	r29
     a0e:	ef 93       	push	r30
     a10:	ff 93       	push	r31
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:685
  byte button = digitalRead(PIN_BUTTON);
     a12:	81 e0       	ldi	r24, 0x01	; 1
     a14:	40 db       	rcall	.-2432   	; 0x96 <digitalRead>
     a16:	d8 2f       	mov	r29, r24
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:686
  byte systemUp = digitalRead(PIN_SYS_UP);
     a18:	80 e0       	ldi	r24, 0x00	; 0
     a1a:	3d db       	rcall	.-2438   	; 0x96 <digitalRead>
     a1c:	c8 2f       	mov	r28, r24
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:688

  if (button != lastButton) {
     a1e:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
     a22:	8d 17       	cp	r24, r29
     a24:	59 f1       	breq	.+86     	; 0xa7c <__vector_3+0x90>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:689
    if (button == 0) {   // button is pressed, PCINT9
     a26:	d1 11       	cpse	r29, r1
     a28:	5f c0       	rjmp	.+190    	; 0xae8 <__vector_3+0xfc>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:691
      // restore from emulated button clicking
      digitalWrite(PIN_BUTTON, 1);
     a2a:	61 e0       	ldi	r22, 0x01	; 1
     a2c:	81 e0       	ldi	r24, 0x01	; 1
     a2e:	46 db       	rcall	.-2420   	; 0xbc <digitalWrite>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:692
      pinMode(PIN_BUTTON, INPUT_PULLUP);
     a30:	62 e0       	ldi	r22, 0x02	; 2
     a32:	81 e0       	ldi	r24, 0x01	; 1
     a34:	76 db       	rcall	.-2324   	; 0x122 <pinMode>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:695
      
      // turn on the white LED
      ledOn();
     a36:	8a dc       	rcall	.-1772   	; 0x34c <ledOn()>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:697
      
      if (!buttonPressed) {
     a38:	80 91 3b 01 	lds	r24, 0x013B	; 0x80013b <buttonPressed>
     a3c:	81 11       	cpse	r24, r1
     a3e:	18 c0       	rjmp	.+48     	; 0xa70 <__vector_3+0x84>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:698
        buttonPressed = true;
     a40:	81 e0       	ldi	r24, 0x01	; 1
     a42:	80 93 3b 01 	sts	0x013B, r24	; 0x80013b <buttonPressed>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:699
        if (!isButtonClickEmulated) {
     a46:	80 91 36 01 	lds	r24, 0x0136	; 0x800136 <isButtonClickEmulated>
     a4a:	81 11       	cpse	r24, r1
     a4c:	03 c0       	rjmp	.+6      	; 0xa54 <__vector_3+0x68>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:700
          updateRegister(I2C_ACTION_REASON, REASON_CLICK);
     a4e:	63 e0       	ldi	r22, 0x03	; 3
     a50:	8b e0       	ldi	r24, 0x0B	; 11
     a52:	22 dd       	rcall	.-1468   	; 0x498 <updateRegister(unsigned char, unsigned char)>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:702
        }
        if (powerIsOn) {
     a54:	80 91 38 01 	lds	r24, 0x0138	; 0x800138 <powerIsOn>
     a58:	88 23       	and	r24, r24
     a5a:	09 f4       	brne	.+2      	; 0xa5e <__vector_3+0x72>
     a5c:	41 c0       	rjmp	.+130    	; 0xae0 <__vector_3+0xf4>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:703
          if (systemIsUp) {
     a5e:	80 91 3a 01 	lds	r24, 0x013A	; 0x80013a <systemIsUp>
     a62:	88 23       	and	r24, r24
     a64:	29 f0       	breq	.+10     	; 0xa70 <__vector_3+0x84>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:704
            turningOff = true;
     a66:	81 e0       	ldi	r24, 0x01	; 1
     a68:	80 93 37 01 	sts	0x0137, r24	; 0x800137 <turningOff>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:705
            systemIsUp = false;
     a6c:	10 92 3a 01 	sts	0x013A, r1	; 0x80013a <systemIsUp>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:712
        } else {
          wakeupByWatchdog = false; // will quit sleeping
          powerOn();
        }
      }
      TCNT1 = getPowerCutPreloadTimer(true);
     a70:	81 e0       	ldi	r24, 0x01	; 1
     a72:	3c dc       	rcall	.-1928   	; 0x2ec <getPowerCutPreloadTimer(unsigned char)>
     a74:	9d bd       	out	0x2d, r25	; 45
     a76:	8c bd       	out	0x2c, r24	; 44
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:713
      isButtonClickEmulated = false;
     a78:	10 92 36 01 	sts	0x0136, r1	; 0x800136 <isButtonClickEmulated>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:719
    } else {  // button is released
      buttonPressed = false;
    } 
  }
  
  if (systemUp != lastSystemUp) {
     a7c:	80 91 31 01 	lds	r24, 0x0131	; 0x800131 <lastSystemUp>
     a80:	8c 17       	cp	r24, r28
     a82:	b9 f0       	breq	.+46     	; 0xab2 <__vector_3+0xc6>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:720
    if (!ledIsOn && powerIsOn && !turningOff && !systemIsUp && systemUp == 1)  {  // system is up, PCINT8
     a84:	80 91 30 01 	lds	r24, 0x0130	; 0x800130 <ledIsOn>
     a88:	81 11       	cpse	r24, r1
     a8a:	13 c0       	rjmp	.+38     	; 0xab2 <__vector_3+0xc6>
     a8c:	80 91 38 01 	lds	r24, 0x0138	; 0x800138 <powerIsOn>
     a90:	88 23       	and	r24, r24
     a92:	79 f0       	breq	.+30     	; 0xab2 <__vector_3+0xc6>
     a94:	80 91 37 01 	lds	r24, 0x0137	; 0x800137 <turningOff>
     a98:	81 11       	cpse	r24, r1
     a9a:	0b c0       	rjmp	.+22     	; 0xab2 <__vector_3+0xc6>
     a9c:	80 91 3a 01 	lds	r24, 0x013A	; 0x80013a <systemIsUp>
     aa0:	81 11       	cpse	r24, r1
     aa2:	07 c0       	rjmp	.+14     	; 0xab2 <__vector_3+0xc6>
     aa4:	c1 30       	cpi	r28, 0x01	; 1
     aa6:	29 f4       	brne	.+10     	; 0xab2 <__vector_3+0xc6>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:722
      // clear the low-voltage shutdown flag when sys_up signal arrives
      updateRegister(I2C_LV_SHUTDOWN, 0);
     aa8:	60 e0       	ldi	r22, 0x00	; 0
     aaa:	88 e0       	ldi	r24, 0x08	; 8
     aac:	f5 dc       	rcall	.-1558   	; 0x498 <updateRegister(unsigned char, unsigned char)>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:725
    
      // mark system is up
      systemIsUp = true;
     aae:	c0 93 3a 01 	sts	0x013A, r28	; 0x80013a <systemIsUp>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:729
    }
  }

  lastButton = button;
     ab2:	d0 93 00 01 	sts	0x0100, r29	; 0x800100 <__data_start>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:730
  lastSystemUp = systemUp;
     ab6:	c0 93 31 01 	sts	0x0131, r28	; 0x800131 <lastSystemUp>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:731
}
     aba:	ff 91       	pop	r31
     abc:	ef 91       	pop	r30
     abe:	df 91       	pop	r29
     ac0:	cf 91       	pop	r28
     ac2:	bf 91       	pop	r27
     ac4:	af 91       	pop	r26
     ac6:	9f 91       	pop	r25
     ac8:	8f 91       	pop	r24
     aca:	7f 91       	pop	r23
     acc:	6f 91       	pop	r22
     ace:	5f 91       	pop	r21
     ad0:	4f 91       	pop	r20
     ad2:	3f 91       	pop	r19
     ad4:	2f 91       	pop	r18
     ad6:	0f 90       	pop	r0
     ad8:	0f be       	out	0x3f, r0	; 63
     ada:	0f 90       	pop	r0
     adc:	1f 90       	pop	r1
     ade:	18 95       	reti
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:708
          if (systemIsUp) {
            turningOff = true;
            systemIsUp = false;
          }
        } else {
          wakeupByWatchdog = false; // will quit sleeping
     ae0:	10 92 32 01 	sts	0x0132, r1	; 0x800132 <wakeupByWatchdog>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:709
          powerOn();
     ae4:	6b dd       	rcall	.-1322   	; 0x5bc <powerOn()>
     ae6:	c4 cf       	rjmp	.-120    	; 0xa70 <__vector_3+0x84>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:715
        }
      }
      TCNT1 = getPowerCutPreloadTimer(true);
      isButtonClickEmulated = false;
    } else {  // button is released
      buttonPressed = false;
     ae8:	10 92 3b 01 	sts	0x013B, r1	; 0x80013b <buttonPressed>
     aec:	c7 cf       	rjmp	.-114    	; 0xa7c <__vector_3+0x90>

00000aee <__vector_2>:
__vector_2():
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:664
  }
}


// pin state change interrupt routine for PCINT0_vect (PCINT0~7) 
ISR (PCINT0_vect) {
     aee:	1f 92       	push	r1
     af0:	0f 92       	push	r0
     af2:	0f b6       	in	r0, 0x3f	; 63
     af4:	0f 92       	push	r0
     af6:	11 24       	eor	r1, r1
     af8:	2f 93       	push	r18
     afa:	3f 93       	push	r19
     afc:	4f 93       	push	r20
     afe:	5f 93       	push	r21
     b00:	6f 93       	push	r22
     b02:	7f 93       	push	r23
     b04:	8f 93       	push	r24
     b06:	9f 93       	push	r25
     b08:	af 93       	push	r26
     b0a:	bf 93       	push	r27
     b0c:	ef 93       	push	r30
     b0e:	ff 93       	push	r31
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:665
  if (digitalRead(PIN_TX_UP) == 1) {
     b10:	85 e0       	ldi	r24, 0x05	; 5
     b12:	c1 da       	rcall	.-2686   	; 0x96 <digitalRead>
     b14:	01 97       	sbiw	r24, 0x01	; 1
     b16:	c1 f4       	brne	.+48     	; 0xb48 <__vector_2+0x5a>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:666
    if (!listenToTxd) {
     b18:	80 91 2f 01 	lds	r24, 0x012F	; 0x80012f <listenToTxd>
     b1c:	81 11       	cpse	r24, r1
     b1e:	03 c0       	rjmp	.+6      	; 0xb26 <__vector_2+0x38>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:668
      // start listen to TXD pin;
      listenToTxd = true;
     b20:	81 e0       	ldi	r24, 0x01	; 1
     b22:	80 93 2f 01 	sts	0x012F, r24	; 0x80012f <listenToTxd>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:680
     turnOffFromTXD = true;
     ledOff(); // turn off the white LED
     TCNT1 = getPowerCutPreloadTimer(true);
    }
  }
}
     b26:	ff 91       	pop	r31
     b28:	ef 91       	pop	r30
     b2a:	bf 91       	pop	r27
     b2c:	af 91       	pop	r26
     b2e:	9f 91       	pop	r25
     b30:	8f 91       	pop	r24
     b32:	7f 91       	pop	r23
     b34:	6f 91       	pop	r22
     b36:	5f 91       	pop	r21
     b38:	4f 91       	pop	r20
     b3a:	3f 91       	pop	r19
     b3c:	2f 91       	pop	r18
     b3e:	0f 90       	pop	r0
     b40:	0f be       	out	0x3f, r0	; 63
     b42:	0f 90       	pop	r0
     b44:	1f 90       	pop	r1
     b46:	18 95       	reti
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:671
    if (!listenToTxd) {
      // start listen to TXD pin;
      listenToTxd = true;
    }
  } else {
    if (listenToTxd && systemIsUp) {
     b48:	80 91 2f 01 	lds	r24, 0x012F	; 0x80012f <listenToTxd>
     b4c:	88 23       	and	r24, r24
     b4e:	59 f3       	breq	.-42     	; 0xb26 <__vector_2+0x38>
     b50:	80 91 3a 01 	lds	r24, 0x013A	; 0x80013a <systemIsUp>
     b54:	88 23       	and	r24, r24
     b56:	39 f3       	breq	.-50     	; 0xb26 <__vector_2+0x38>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:672
     listenToTxd = false;
     b58:	10 92 2f 01 	sts	0x012F, r1	; 0x80012f <listenToTxd>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:673
     systemIsUp = false;
     b5c:	10 92 3a 01 	sts	0x013A, r1	; 0x80013a <systemIsUp>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:674
     turningOff = true;
     b60:	81 e0       	ldi	r24, 0x01	; 1
     b62:	80 93 37 01 	sts	0x0137, r24	; 0x800137 <turningOff>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:675
     turnOffFromTXD = true;
     b66:	80 93 33 01 	sts	0x0133, r24	; 0x800133 <turnOffFromTXD>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:676
     ledOff(); // turn off the white LED
     b6a:	e7 db       	rcall	.-2098   	; 0x33a <ledOff()>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:677
     TCNT1 = getPowerCutPreloadTimer(true);
     b6c:	81 e0       	ldi	r24, 0x01	; 1
     b6e:	be db       	rcall	.-2180   	; 0x2ec <getPowerCutPreloadTimer(unsigned char)>
     b70:	9d bd       	out	0x2d, r25	; 45
     b72:	8c bd       	out	0x2c, r24	; 44
     b74:	d8 cf       	rjmp	.-80     	; 0xb26 <__vector_2+0x38>

00000b76 <i2c_read_(bool)>:
_Z9i2c_read_b():
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/SoftIICMaster.h:520
     " clr  r25                                            ;; 13 C + 2X\n\t"
     " ret                                                     ;; 17C + X"
     ::
      [SCLDDR] "I"  (SCL_DDR), [SCLPIN] "I" (SCL_PIN), [SCLIN] "I" (SCL_IN),
      [SDADDR] "I"  (SDA_DDR), [SDAPIN] "I" (SDA_PIN), [SDAIN] "I" (SDA_IN)
     );
     b76:	71 e0       	ldi	r23, 0x01	; 1

00000b78 <_Li2c_read_bit_>:
     b78:	d0 9a       	sbi	0x1a, 0	; 26
     b7a:	ba 98       	cbi	0x17, 2	; 23
     b7c:	00 00       	nop
     b7e:	00 00       	nop
     b80:	00 00       	nop
     b82:	e8 d5       	rcall	.+3024   	; 0x1754 <ass_i2c_delay_half_>
     b84:	d0 98       	cbi	0x1a, 0	; 26
     b86:	e6 d5       	rcall	.+3020   	; 0x1754 <ass_i2c_delay_half_>
     b88:	a8 94       	cln
     b8a:	00 00       	nop
     b8c:	00 00       	nop
     b8e:	00 00       	nop
     b90:	c8 9b       	sbis	0x19, 0	; 25
     b92:	db d5       	rcall	.+2998   	; 0x174a <ass_i2c_wait_scl_high_>
     b94:	b2 f0       	brmi	.+44     	; 0xbc2 <_Li2c_read_return_>
     b96:	88 94       	clc
     b98:	b2 99       	sbic	0x16, 2	; 22
     b9a:	08 94       	sec
     b9c:	77 1f       	adc	r23, r23
     b9e:	60 f7       	brcc	.-40     	; 0xb78 <_Li2c_read_bit_>

00000ba0 <_Li2c_put_ack_>:
     ba0:	d0 9a       	sbi	0x1a, 0	; 26
     ba2:	80 30       	cpi	r24, 0x00	; 0
     ba4:	11 f0       	breq	.+4      	; 0xbaa <_Li2c_put_ack_low_>
     ba6:	ba 98       	cbi	0x17, 2	; 23
     ba8:	01 c0       	rjmp	.+2      	; 0xbac <_Li2c_put_ack_high_>

00000baa <_Li2c_put_ack_low_>:
     baa:	ba 9a       	sbi	0x17, 2	; 23

00000bac <_Li2c_put_ack_high_>:
     bac:	00 00       	nop
     bae:	00 00       	nop
     bb0:	00 00       	nop
     bb2:	d0 d5       	rcall	.+2976   	; 0x1754 <ass_i2c_delay_half_>
     bb4:	d0 98       	cbi	0x1a, 0	; 26
     bb6:	a8 94       	cln
     bb8:	00 00       	nop
     bba:	00 00       	nop
     bbc:	c8 9b       	sbis	0x19, 0	; 25
     bbe:	c5 d5       	rcall	.+2954   	; 0x174a <ass_i2c_wait_scl_high_>
     bc0:	c9 d5       	rcall	.+2962   	; 0x1754 <ass_i2c_delay_half_>

00000bc2 <_Li2c_read_return_>:
     bc2:	00 00       	nop
     bc4:	00 00       	nop
     bc6:	d0 9a       	sbi	0x1a, 0	; 26
     bc8:	87 2f       	mov	r24, r23
     bca:	99 27       	eor	r25, r25
     bcc:	08 95       	ret
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/SoftIICMaster.h:522
  return ' '; // fool the compiler!
}
     bce:	80 e2       	ldi	r24, 0x20	; 32
     bd0:	08 95       	ret

00000bd2 <ass_i2c_write_>:
ass_i2c_write_():
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/SoftIICMaster.h:450
     " sbi  %[SCLDDR],%[SCLPIN] ;force SCL low so SCL=H is short\n\t"
     " ret \n\t"
     "              ;; + 4 = 17C + 2X for acknowldge bit"
     ::
      [SCLDDR] "I"  (SCL_DDR), [SCLPIN] "I" (SCL_PIN), [SCLIN] "I" (SCL_IN),
      [SDADDR] "I"  (SDA_DDR), [SDAPIN] "I" (SDA_PIN), [SDAIN] "I" (SDA_IN));
     bd2:	08 94       	sec
     bd4:	88 1f       	adc	r24, r24
     bd6:	01 c0       	rjmp	.+2      	; 0xbda <_Li2c_write_first_>

00000bd8 <_Li2c_write_bit_>:
     bd8:	88 0f       	add	r24, r24

00000bda <_Li2c_write_first_>:
     bda:	b9 f0       	breq	.+46     	; 0xc0a <_Li2c_get_ack_>
     bdc:	d0 9a       	sbi	0x1a, 0	; 26
     bde:	00 00       	nop
     be0:	00 00       	nop
     be2:	00 00       	nop
     be4:	18 f4       	brcc	.+6      	; 0xbec <_Li2c_write_low_>
     be6:	00 00       	nop
     be8:	ba 98       	cbi	0x17, 2	; 23
     bea:	02 c0       	rjmp	.+4      	; 0xbf0 <_Li2c_write_high_>

00000bec <_Li2c_write_low_>:
     bec:	ba 9a       	sbi	0x17, 2	; 23
     bee:	00 c0       	rjmp	.+0      	; 0xbf0 <_Li2c_write_high_>

00000bf0 <_Li2c_write_high_>:
     bf0:	b1 d5       	rcall	.+2914   	; 0x1754 <ass_i2c_delay_half_>
     bf2:	d0 98       	cbi	0x1a, 0	; 26
     bf4:	a8 94       	cln
     bf6:	00 00       	nop
     bf8:	00 00       	nop
     bfa:	00 00       	nop
     bfc:	c8 9b       	sbis	0x19, 0	; 25
     bfe:	a5 d5       	rcall	.+2890   	; 0x174a <ass_i2c_wait_scl_high_>
     c00:	12 f4       	brpl	.+4      	; 0xc06 <_Ldelay_scl_high_>

00000c02 <_Li2c_write_return_false_>:
     c02:	88 27       	eor	r24, r24
     c04:	12 c0       	rjmp	.+36     	; 0xc2a <_Li2c_write_return_>

00000c06 <_Ldelay_scl_high_>:
     c06:	a6 d5       	rcall	.+2892   	; 0x1754 <ass_i2c_delay_half_>
     c08:	e7 cf       	rjmp	.-50     	; 0xbd8 <_Li2c_write_bit_>

00000c0a <_Li2c_get_ack_>:
     c0a:	d0 9a       	sbi	0x1a, 0	; 26
     c0c:	00 00       	nop
     c0e:	00 00       	nop
     c10:	ba 98       	cbi	0x17, 2	; 23
     c12:	a0 d5       	rcall	.+2880   	; 0x1754 <ass_i2c_delay_half_>
     c14:	99 27       	eor	r25, r25
     c16:	88 27       	eor	r24, r24
     c18:	d0 98       	cbi	0x1a, 0	; 26

00000c1a <_Li2c_ack_wait_>:
     c1a:	a8 94       	cln
     c1c:	00 00       	nop
     c1e:	c8 9b       	sbis	0x19, 0	; 25
     c20:	94 d5       	rcall	.+2856   	; 0x174a <ass_i2c_wait_scl_high_>
     c22:	7a f3       	brmi	.-34     	; 0xc02 <_Li2c_write_return_false_>
     c24:	b2 9b       	sbis	0x16, 2	; 22
     c26:	81 e0       	ldi	r24, 0x01	; 1
     c28:	95 d5       	rcall	.+2858   	; 0x1754 <ass_i2c_delay_half_>

00000c2a <_Li2c_write_return_>:
     c2a:	00 00       	nop
     c2c:	00 00       	nop
     c2e:	d0 9a       	sbi	0x1a, 0	; 26
     c30:	08 95       	ret
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/SoftIICMaster.h:452
  return true; // fooling the compiler
}
     c32:	81 e0       	ldi	r24, 0x01	; 1
     c34:	08 95       	ret

00000c36 <SoftWireMaster::write(unsigned char)>:
write():
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/SoftWireMaster.h:95
  uint8_t endTransmission(void)
  {
    return endTransmission(true);
  }

  size_t write(uint8_t data) {
     c36:	cf 93       	push	r28
     c38:	df 93       	push	r29
     c3a:	ec 01       	movw	r28, r24
     c3c:	86 2f       	mov	r24, r22
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/SoftWireMaster.h:96
    if (i2c_write_(data)) {
     c3e:	c9 df       	rcall	.-110    	; 0xbd2 <ass_i2c_write_>
     c40:	81 11       	cpse	r24, r1
     c42:	08 c0       	rjmp	.+16     	; 0xc54 <SoftWireMaster::write(unsigned char)+0x1e>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/SoftWireMaster.h:99
      return 1;
    } else {
      if (error == 0) error = 3;
     c44:	8f a5       	ldd	r24, Y+47	; 0x2f
     c46:	81 11       	cpse	r24, r1
     c48:	02 c0       	rjmp	.+4      	; 0xc4e <SoftWireMaster::write(unsigned char)+0x18>
     c4a:	83 e0       	ldi	r24, 0x03	; 3
     c4c:	8f a7       	std	Y+47, r24	; 0x2f
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/SoftWireMaster.h:100
      return 0;
     c4e:	90 e0       	ldi	r25, 0x00	; 0
     c50:	80 e0       	ldi	r24, 0x00	; 0
     c52:	02 c0       	rjmp	.+4      	; 0xc58 <SoftWireMaster::write(unsigned char)+0x22>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/SoftWireMaster.h:97
    return endTransmission(true);
  }

  size_t write(uint8_t data) {
    if (i2c_write_(data)) {
      return 1;
     c54:	81 e0       	ldi	r24, 0x01	; 1
     c56:	90 e0       	ldi	r25, 0x00	; 0
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/SoftWireMaster.h:102
    } else {
      if (error == 0) error = 3;
      return 0;
    }
  }
     c58:	df 91       	pop	r29
     c5a:	cf 91       	pop	r28
     c5c:	08 95       	ret

00000c5e <SoftWireMaster::write(int) [clone .constprop.7]>:
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/SoftWireMaster.h:196

  inline size_t write(long n) { return write((uint8_t)n); }

  inline size_t write(unsigned int n) { return write((uint8_t)n); }

  inline size_t write(int n) { return write((uint8_t)n); }
     c5e:	68 2f       	mov	r22, r24
     c60:	80 eb       	ldi	r24, 0xB0	; 176
     c62:	91 e0       	ldi	r25, 0x01	; 1
     c64:	e8 cf       	rjmp	.-48     	; 0xc36 <SoftWireMaster::write(unsigned char)>

00000c66 <ass_i2c_stop_>:
ass_i2c_stop_():
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/SoftIICMaster.h:374
     " rcall    ass_i2c_delay_half_ \n\t"
#if I2C_NOINTERRUPT
     " sei                              ;enable interrupts again!\n\t"
#endif
     : : [SCLDDR] "I"  (SCL_DDR), [SCLPIN] "I" (SCL_PIN), [SCLIN] "I" (SCL_IN),
         [SDADDR] "I"  (SDA_DDR), [SDAPIN] "I" (SDA_PIN));
     c66:	d0 9a       	sbi	0x1a, 0	; 26
     c68:	ba 9a       	sbi	0x17, 2	; 23
     c6a:	74 d5       	rcall	.+2792   	; 0x1754 <ass_i2c_delay_half_>
     c6c:	d0 98       	cbi	0x1a, 0	; 26
     c6e:	72 d5       	rcall	.+2788   	; 0x1754 <ass_i2c_delay_half_>
     c70:	c8 9b       	sbis	0x19, 0	; 25
     c72:	6b d5       	rcall	.+2774   	; 0x174a <ass_i2c_wait_scl_high_>
     c74:	ba 98       	cbi	0x17, 2	; 23
     c76:	6e d5       	rcall	.+2780   	; 0x1754 <ass_i2c_delay_half_>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/SoftIICMaster.h:375
}
     c78:	08 95       	ret

00000c7a <i2c_start_wait_(unsigned char)>:
_Z15i2c_start_wait_h():
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/SoftIICMaster.h:354
    " rjmp  _Li2c_start_wait1_ ;device busy, poll ack again \n\t"
    "_Li2c_start_wait_done_: \n\t"
    " pop       __tmp_reg__             ;pop off orig argument \n\t"
    " ret "
    : : [SDADDR] "I"  (SDA_DDR), [SDAPIN] "I" (SDA_PIN),
      [SCLIN] "I" (SCL_IN),[SCLPIN] "I" (SCL_PIN));
     c7a:	8f 93       	push	r24

00000c7c <_Li2c_start_wait1_>:
     c7c:	8f 91       	pop	r24
     c7e:	8f 93       	push	r24
     c80:	c8 9b       	sbis	0x19, 0	; 25
     c82:	63 d5       	rcall	.+2758   	; 0x174a <ass_i2c_wait_scl_high_>
     c84:	ba 9a       	sbi	0x17, 2	; 23
     c86:	66 d5       	rcall	.+2764   	; 0x1754 <ass_i2c_delay_half_>
     c88:	a4 df       	rcall	.-184    	; 0xbd2 <ass_i2c_write_>
     c8a:	88 23       	and	r24, r24
     c8c:	11 f4       	brne	.+4      	; 0xc92 <_Li2c_start_wait_done_>
     c8e:	eb df       	rcall	.-42     	; 0xc66 <ass_i2c_stop_>
     c90:	f5 cf       	rjmp	.-22     	; 0xc7c <_Li2c_start_wait1_>

00000c92 <_Li2c_start_wait_done_>:
     c92:	0f 90       	pop	r0
     c94:	08 95       	ret
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/SoftIICMaster.h:355
}
     c96:	08 95       	ret

00000c98 <i2c_rep_start_(unsigned char)>:
_Z14i2c_rep_start_h():
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/SoftIICMaster.h:326
     " sbi  %[SDADDR],%[SDAPIN] ;force SDA low \n\t"
     " rcall  ass_i2c_delay_half_  ;delay  T/2 \n\t"
     " rcall    ass_i2c_write_       \n\t"
     " ret"
     : : [SCLDDR] "I"  (SCL_DDR), [SCLPIN] "I" (SCL_PIN),[SCLIN] "I" (SCL_IN),
         [SDADDR] "I"  (SDA_DDR), [SDAPIN] "I" (SDA_PIN));
     c98:	d0 9a       	sbi	0x1a, 0	; 26
     c9a:	5c d5       	rcall	.+2744   	; 0x1754 <ass_i2c_delay_half_>
     c9c:	ba 98       	cbi	0x17, 2	; 23
     c9e:	5a d5       	rcall	.+2740   	; 0x1754 <ass_i2c_delay_half_>
     ca0:	d0 98       	cbi	0x1a, 0	; 26
     ca2:	58 d5       	rcall	.+2736   	; 0x1754 <ass_i2c_delay_half_>
     ca4:	c8 9b       	sbis	0x19, 0	; 25
     ca6:	51 d5       	rcall	.+2722   	; 0x174a <ass_i2c_wait_scl_high_>
     ca8:	ba 9a       	sbi	0x17, 2	; 23
     caa:	54 d5       	rcall	.+2728   	; 0x1754 <ass_i2c_delay_half_>
     cac:	92 df       	rcall	.-220    	; 0xbd2 <ass_i2c_write_>
     cae:	08 95       	ret
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/SoftIICMaster.h:328
  return true; // just to fool the compiler
}
     cb0:	81 e0       	ldi	r24, 0x01	; 1
     cb2:	08 95       	ret

00000cb4 <SoftWireMaster::requestFrom(int, int) [clone .constprop.8]>:
requestFrom():
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/SoftWireMaster.h:161

  uint8_t requestFrom(uint8_t address, uint8_t quantity) {
    return requestFrom((uint8_t)address, (uint8_t)quantity, (uint8_t)true);
  }

  uint8_t requestFrom(int address, int quantity) {
     cb4:	af 92       	push	r10
     cb6:	bf 92       	push	r11
     cb8:	df 92       	push	r13
     cba:	ef 92       	push	r14
     cbc:	ff 92       	push	r15
     cbe:	0f 93       	push	r16
     cc0:	1f 93       	push	r17
     cc2:	cf 93       	push	r28
     cc4:	df 93       	push	r29
     cc6:	eb 01       	movw	r28, r22
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/SoftWireMaster.h:162
    return requestFrom((uint8_t)address, (uint8_t)quantity, (uint8_t)true);
     cc8:	d6 2e       	mov	r13, r22
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/SoftWireMaster.h:133
    }
    // clamp to buffer length
    if(quantity > BUFFER_LENGTH){
      quantity = BUFFER_LENGTH;
    }
    localerror = !i2c_rep_start_((address<<1) | I2C_READ);
     cca:	88 0f       	add	r24, r24
     ccc:	99 1f       	adc	r25, r25
     cce:	81 60       	ori	r24, 0x01	; 1
     cd0:	e3 df       	rcall	.-58     	; 0xc98 <i2c_rep_start_(unsigned char)>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/SoftWireMaster.h:134
    if (error == 0 && localerror) error = 2;
     cd2:	90 91 df 01 	lds	r25, 0x01DF	; 0x8001df <softWireMaster+0x2f>
     cd6:	91 11       	cpse	r25, r1
     cd8:	05 c0       	rjmp	.+10     	; 0xce4 <SoftWireMaster::requestFrom(int, int) [clone .constprop.8]+0x30>
     cda:	81 11       	cpse	r24, r1
     cdc:	03 c0       	rjmp	.+6      	; 0xce4 <SoftWireMaster::requestFrom(int, int) [clone .constprop.8]+0x30>
     cde:	82 e0       	ldi	r24, 0x02	; 2
     ce0:	80 93 df 01 	sts	0x01DF, r24	; 0x8001df <softWireMaster+0x2f>
     ce4:	8c eb       	ldi	r24, 0xBC	; 188
     ce6:	e8 2e       	mov	r14, r24
     ce8:	81 e0       	ldi	r24, 0x01	; 1
     cea:	f8 2e       	mov	r15, r24
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/SoftWireMaster.h:161

  uint8_t requestFrom(uint8_t address, uint8_t quantity) {
    return requestFrom((uint8_t)address, (uint8_t)quantity, (uint8_t)true);
  }

  uint8_t requestFrom(int address, int quantity) {
     cec:	10 e0       	ldi	r17, 0x00	; 0
     cee:	00 e0       	ldi	r16, 0x00	; 0
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/SoftWireMaster.h:137
    }
    localerror = !i2c_rep_start_((address<<1) | I2C_READ);
    if (error == 0 && localerror) error = 2;
    // perform blocking read into buffer
    for (uint8_t cnt=0; cnt < quantity; cnt++)
      rxBuffer[cnt] = i2c_read_(cnt == quantity-1);
     cf0:	5e 01       	movw	r10, r28
     cf2:	81 e0       	ldi	r24, 0x01	; 1
     cf4:	a8 1a       	sub	r10, r24
     cf6:	b1 08       	sbc	r11, r1
     cf8:	81 e0       	ldi	r24, 0x01	; 1
     cfa:	a0 16       	cp	r10, r16
     cfc:	b1 06       	cpc	r11, r17
     cfe:	09 f0       	breq	.+2      	; 0xd02 <SoftWireMaster::requestFrom(int, int) [clone .constprop.8]+0x4e>
     d00:	80 e0       	ldi	r24, 0x00	; 0
     d02:	39 df       	rcall	.-398    	; 0xb76 <i2c_read_(bool)>
     d04:	f7 01       	movw	r30, r14
     d06:	81 93       	st	Z+, r24
     d08:	7f 01       	movw	r14, r30
     d0a:	0f 5f       	subi	r16, 0xFF	; 255
     d0c:	1f 4f       	sbci	r17, 0xFF	; 255
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/SoftWireMaster.h:136
      quantity = BUFFER_LENGTH;
    }
    localerror = !i2c_rep_start_((address<<1) | I2C_READ);
    if (error == 0 && localerror) error = 2;
    // perform blocking read into buffer
    for (uint8_t cnt=0; cnt < quantity; cnt++)
     d0e:	0d 15       	cp	r16, r13
     d10:	98 f3       	brcs	.-26     	; 0xcf8 <SoftWireMaster::requestFrom(int, int) [clone .constprop.8]+0x44>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/SoftWireMaster.h:139
      rxBuffer[cnt] = i2c_read_(cnt == quantity-1);
    // set rx buffer iterator vars
    rxBufferIndex = 0;
     d12:	10 92 dc 01 	sts	0x01DC, r1	; 0x8001dc <softWireMaster+0x2c>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/SoftWireMaster.h:140
    rxBufferLength = quantity;
     d16:	c0 93 dd 01 	sts	0x01DD, r28	; 0x8001dd <softWireMaster+0x2d>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/SoftWireMaster.h:142
    if (sendStop) {
      transmitting = 0;
     d1a:	10 92 de 01 	sts	0x01DE, r1	; 0x8001de <softWireMaster+0x2e>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/SoftWireMaster.h:143
      i2c_stop_();
     d1e:	a3 df       	rcall	.-186    	; 0xc66 <ass_i2c_stop_>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/SoftWireMaster.h:163
    return requestFrom((uint8_t)address, (uint8_t)quantity, (uint8_t)true);
  }

  uint8_t requestFrom(int address, int quantity) {
    return requestFrom((uint8_t)address, (uint8_t)quantity, (uint8_t)true);
  }
     d20:	8c 2f       	mov	r24, r28
     d22:	df 91       	pop	r29
     d24:	cf 91       	pop	r28
     d26:	1f 91       	pop	r17
     d28:	0f 91       	pop	r16
     d2a:	ff 90       	pop	r15
     d2c:	ef 90       	pop	r14
     d2e:	df 90       	pop	r13
     d30:	bf 90       	pop	r11
     d32:	af 90       	pop	r10
     d34:	08 95       	ret

00000d36 <i2c_start_(unsigned char)>:
_Z10i2c_start_h():
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/SoftIICMaster.h:301
     " sbi      %[SDADDR],%[SDAPIN]     ;force SDA low  \n\t"
     " rcall    ass_i2c_delay_half_      ;wait T/2 \n\t"
     " rcall    ass_i2c_write_           ;now write address \n\t"
     " ret"
     : : [SDADDR] "I"  (SDA_DDR), [SDAPIN] "I" (SDA_PIN),
       [SCLIN] "I" (SCL_IN),[SCLPIN] "I" (SCL_PIN));
     d36:	c8 9b       	sbis	0x19, 0	; 25
     d38:	08 d5       	rcall	.+2576   	; 0x174a <ass_i2c_wait_scl_high_>
     d3a:	ba 9a       	sbi	0x17, 2	; 23
     d3c:	0b d5       	rcall	.+2582   	; 0x1754 <ass_i2c_delay_half_>
     d3e:	49 df       	rcall	.-366    	; 0xbd2 <ass_i2c_write_>
     d40:	08 95       	ret
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/SoftIICMaster.h:303
  return true; // we never return here!
}
     d42:	81 e0       	ldi	r24, 0x01	; 1
     d44:	08 95       	ret

00000d46 <SoftWireMaster::beginTransmission(unsigned char) [clone .constprop.12]>:
beginTransmission():
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/SoftWireMaster.h:62
  }

  void setClock(uint32_t _clock) {
  }

  void beginTransmission(uint8_t address) {
     d46:	cf 93       	push	r28
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/SoftWireMaster.h:63
    if (transmitting) {
     d48:	c0 91 de 01 	lds	r28, 0x01DE	; 0x8001de <softWireMaster+0x2e>
     d4c:	88 0f       	add	r24, r24
     d4e:	cc 23       	and	r28, r28
     d50:	69 f0       	breq	.+26     	; 0xd6c <SoftWireMaster::beginTransmission(unsigned char) [clone .constprop.12]+0x26>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/SoftWireMaster.h:64
      error = (i2c_rep_start_((address<<1)|I2C_WRITE) ? 0 : 2);
     d52:	a2 df       	rcall	.-188    	; 0xc98 <i2c_rep_start_(unsigned char)>
     d54:	88 23       	and	r24, r24
     d56:	41 f0       	breq	.+16     	; 0xd68 <SoftWireMaster::beginTransmission(unsigned char) [clone .constprop.12]+0x22>
     d58:	80 e0       	ldi	r24, 0x00	; 0
     d5a:	80 93 df 01 	sts	0x01DF, r24	; 0x8001df <softWireMaster+0x2f>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/SoftWireMaster.h:69
    } else {
      error = (i2c_start_((address<<1)|I2C_WRITE) ? 0 : 2);
    }
    // indicate that we are transmitting
    transmitting = 1;
     d5e:	81 e0       	ldi	r24, 0x01	; 1
     d60:	80 93 de 01 	sts	0x01DE, r24	; 0x8001de <softWireMaster+0x2e>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/SoftWireMaster.h:70
  }
     d64:	cf 91       	pop	r28
     d66:	08 95       	ret
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/SoftWireMaster.h:64
  void setClock(uint32_t _clock) {
  }

  void beginTransmission(uint8_t address) {
    if (transmitting) {
      error = (i2c_rep_start_((address<<1)|I2C_WRITE) ? 0 : 2);
     d68:	82 e0       	ldi	r24, 0x02	; 2
     d6a:	f7 cf       	rjmp	.-18     	; 0xd5a <SoftWireMaster::beginTransmission(unsigned char) [clone .constprop.12]+0x14>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/SoftWireMaster.h:66
    } else {
      error = (i2c_start_((address<<1)|I2C_WRITE) ? 0 : 2);
     d6c:	e4 df       	rcall	.-56     	; 0xd36 <i2c_start_(unsigned char)>
     d6e:	81 11       	cpse	r24, r1
     d70:	01 c0       	rjmp	.+2      	; 0xd74 <SoftWireMaster::beginTransmission(unsigned char) [clone .constprop.12]+0x2e>
     d72:	c2 e0       	ldi	r28, 0x02	; 2
     d74:	c0 93 df 01 	sts	0x01DF, r28	; 0x8001df <softWireMaster+0x2f>
     d78:	f2 cf       	rjmp	.-28     	; 0xd5e <SoftWireMaster::beginTransmission(unsigned char) [clone .constprop.12]+0x18>

00000d7a <writeToDevice(unsigned char, unsigned char, unsigned char*, unsigned char) [clone .constprop.3]>:
writeToDevice():
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:964
  return data;
}


// software I2C master write data to device on internal I2C bus
void writeToDevice(byte address, byte index, byte* data, byte count) {
     d7a:	1f 93       	push	r17
     d7c:	cf 93       	push	r28
     d7e:	df 93       	push	r29
     d80:	16 2f       	mov	r17, r22
     d82:	ea 01       	movw	r28, r20
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:965
  softWireMaster.beginTransmission(address);
     d84:	e0 df       	rcall	.-64     	; 0xd46 <SoftWireMaster::beginTransmission(unsigned char) [clone .constprop.12]>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:966
  softWireMaster.write(index);
     d86:	61 2f       	mov	r22, r17
     d88:	80 eb       	ldi	r24, 0xB0	; 176
     d8a:	91 e0       	ldi	r25, 0x01	; 1
     d8c:	54 df       	rcall	.-344    	; 0xc36 <SoftWireMaster::write(unsigned char)>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:968
  for (byte i = 0; i < count; i ++) {
    softWireMaster.write(data[i]);
     d8e:	68 81       	ld	r22, Y
     d90:	80 eb       	ldi	r24, 0xB0	; 176
     d92:	91 e0       	ldi	r25, 0x01	; 1
     d94:	50 df       	rcall	.-352    	; 0xc36 <SoftWireMaster::write(unsigned char)>
_ZN14SoftWireMaster15endTransmissionEh():
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/SoftWireMaster.h:80

  uint8_t endTransmission(uint8_t sendStop)
  {
    uint8_t transError = error;
    if (sendStop) {
      i2c_stop_();
     d96:	67 df       	rcall	.-306    	; 0xc66 <ass_i2c_stop_>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/SoftWireMaster.h:81
      transmitting = 0;
     d98:	e0 eb       	ldi	r30, 0xB0	; 176
     d9a:	f1 e0       	ldi	r31, 0x01	; 1
     d9c:	16 a6       	std	Z+46, r1	; 0x2e
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/SoftWireMaster.h:83
    }
    error = 0;
     d9e:	17 a6       	std	Z+47, r1	; 0x2f
writeToDevice():
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:971
  }
  softWireMaster.endTransmission();
}
     da0:	df 91       	pop	r29
     da2:	cf 91       	pop	r28
     da4:	1f 91       	pop	r17
     da6:	08 95       	ret

00000da8 <copyAlarm(unsigned char)>:
copyAlarm():
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:878
  writeToDevice(ADDRESS_RTC, 0x01, &data, 1);
}


// copy alarm data to RTC's alarm registers
void copyAlarm(byte offset) {
     da8:	1f 93       	push	r17
     daa:	cf 93       	push	r28
     dac:	df 93       	push	r29
     dae:	c8 2f       	mov	r28, r24
     db0:	d0 e0       	ldi	r29, 0x00	; 0
     db2:	c4 5c       	subi	r28, 0xC4	; 196
     db4:	de 4f       	sbci	r29, 0xFE	; 254
     db6:	1b e0       	ldi	r17, 0x0B	; 11
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:880
  for (byte i = 0; i < 4; i ++) {
    writeToDevice(ADDRESS_RTC, 0x0B + i, &i2cReg[offset + i], 1);
     db8:	ae 01       	movw	r20, r28
     dba:	61 2f       	mov	r22, r17
     dbc:	81 e5       	ldi	r24, 0x51	; 81
     dbe:	dd df       	rcall	.-70     	; 0xd7a <writeToDevice(unsigned char, unsigned char, unsigned char*, unsigned char) [clone .constprop.3]>
     dc0:	1f 5f       	subi	r17, 0xFF	; 255
     dc2:	21 96       	adiw	r28, 0x01	; 1
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:879
}


// copy alarm data to RTC's alarm registers
void copyAlarm(byte offset) {
  for (byte i = 0; i < 4; i ++) {
     dc4:	1f 30       	cpi	r17, 0x0F	; 15
     dc6:	c1 f7       	brne	.-16     	; 0xdb8 <copyAlarm(unsigned char)+0x10>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:882
    writeToDevice(ADDRESS_RTC, 0x0B + i, &i2cReg[offset + i], 1);
  }
}
     dc8:	df 91       	pop	r29
     dca:	cf 91       	pop	r28
     dcc:	1f 91       	pop	r17
     dce:	08 95       	ret

00000dd0 <reset_rtc_alarm()>:
reset_rtc_alarm():
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:871
  }
}


// enable alarm and clear the alarm flag (if exists)
void reset_rtc_alarm() {
     dd0:	cf 93       	push	r28
     dd2:	df 93       	push	r29
     dd4:	1f 92       	push	r1
     dd6:	cd b7       	in	r28, 0x3d	; 61
     dd8:	de b7       	in	r29, 0x3e	; 62
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:872
  byte data = 0x80;
     dda:	80 e8       	ldi	r24, 0x80	; 128
     ddc:	89 83       	std	Y+1, r24	; 0x01
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:873
  writeToDevice(ADDRESS_RTC, 0x01, &data, 1);
     dde:	ae 01       	movw	r20, r28
     de0:	4f 5f       	subi	r20, 0xFF	; 255
     de2:	5f 4f       	sbci	r21, 0xFF	; 255
     de4:	61 e0       	ldi	r22, 0x01	; 1
     de6:	81 e5       	ldi	r24, 0x51	; 81
     de8:	c8 df       	rcall	.-112    	; 0xd7a <writeToDevice(unsigned char, unsigned char, unsigned char*, unsigned char) [clone .constprop.3]>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:874
}
     dea:	0f 90       	pop	r0
     dec:	df 91       	pop	r29
     dee:	cf 91       	pop	r28
     df0:	08 95       	ret

00000df2 <requestEvent()>:
requestEvent():
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:584
  }
}


// i2c master requests data from this device (master reads from this device)
void requestEvent() {
     df2:	cf 92       	push	r12
     df4:	df 92       	push	r13
     df6:	ef 92       	push	r14
     df8:	ff 92       	push	r15
     dfa:	0f 93       	push	r16
     dfc:	1f 93       	push	r17
     dfe:	cf 93       	push	r28
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:586
  float v = 0.0;
  switch (i2cIndex) {
     e00:	80 91 2b 01 	lds	r24, 0x012B	; 0x80012b <i2cIndex>
     e04:	83 30       	cpi	r24, 0x03	; 3
     e06:	a1 f1       	breq	.+104    	; 0xe70 <requestEvent()+0x7e>
     e08:	54 f5       	brge	.+84     	; 0xe5e <requestEvent()+0x6c>
     e0a:	81 30       	cpi	r24, 0x01	; 1
     e0c:	79 f1       	breq	.+94     	; 0xe6c <requestEvent()+0x7a>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:601
    case I2C_POWER_MODE:
      updatePowerMode();
      break;
  }

  if (i2cIndex >= I2C_LM75B_TEMPERATURE && i2cIndex <= I2C_LM75B_TOS) {  // mapped to LM75B's register
     e0e:	80 91 2b 01 	lds	r24, 0x012B	; 0x80012b <i2cIndex>
     e12:	82 33       	cpi	r24, 0x32	; 50
     e14:	0c f4       	brge	.+2      	; 0xe18 <requestEvent()+0x26>
     e16:	b7 c0       	rjmp	.+366    	; 0xf86 <requestEvent()+0x194>
     e18:	80 91 2b 01 	lds	r24, 0x012B	; 0x80012b <i2cIndex>
     e1c:	86 33       	cpi	r24, 0x36	; 54
     e1e:	0c f0       	brlt	.+2      	; 0xe22 <requestEvent()+0x30>
     e20:	b2 c0       	rjmp	.+356    	; 0xf86 <requestEvent()+0x194>
_ZN14SoftWireMaster17beginTransmissionEi():
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/SoftWireMaster.h:73
    // indicate that we are transmitting
    transmitting = 1;
  }

  void beginTransmission(int address) {
    beginTransmission((uint8_t)address);
     e22:	88 e4       	ldi	r24, 0x48	; 72
     e24:	90 df       	rcall	.-224    	; 0xd46 <SoftWireMaster::beginTransmission(unsigned char) [clone .constprop.12]>
requestEvent():
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:603
    softWireMaster.beginTransmission(ADDRESS_LM75B);
    softWireMaster.write(i2cIndex - I2C_LM75B_TEMPERATURE);
     e26:	80 91 2b 01 	lds	r24, 0x012B	; 0x80012b <i2cIndex>
     e2a:	08 2e       	mov	r0, r24
     e2c:	00 0c       	add	r0, r0
     e2e:	99 0b       	sbc	r25, r25
     e30:	c2 97       	sbiw	r24, 0x32	; 50
     e32:	15 df       	rcall	.-470    	; 0xc5e <SoftWireMaster::write(int) [clone .constprop.7]>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:604
    if (i2cIndex == I2C_LM75B_CONF) {
     e34:	80 91 2b 01 	lds	r24, 0x012B	; 0x80012b <i2cIndex>
     e38:	83 33       	cpi	r24, 0x33	; 51
     e3a:	09 f0       	breq	.+2      	; 0xe3e <requestEvent()+0x4c>
     e3c:	ba c0       	rjmp	.+372    	; 0xfb2 <requestEvent()+0x1c0>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:605
      softWireMaster.requestFrom(ADDRESS_LM75B, 1);
     e3e:	61 e0       	ldi	r22, 0x01	; 1
     e40:	70 e0       	ldi	r23, 0x00	; 0
     e42:	88 e4       	ldi	r24, 0x48	; 72
     e44:	90 e0       	ldi	r25, 0x00	; 0
     e46:	36 df       	rcall	.-404    	; 0xcb4 <SoftWireMaster::requestFrom(int, int) [clone .constprop.8]>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:606
      TinyWireS.write(softWireMaster.read());
     e48:	80 eb       	ldi	r24, 0xB0	; 176
     e4a:	91 e0       	ldi	r25, 0x01	; 1
     e4c:	e6 da       	rcall	.-2612   	; 0x41a <SoftWireMaster::read()>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:622
    TinyWireS.write(softWireMaster.read());
    softWireMaster.endTransmission();
  } else {
    TinyWireS.write(i2cReg[i2cIndex]);  // direct i2c register
  }
}
     e4e:	cf 91       	pop	r28
     e50:	1f 91       	pop	r17
     e52:	0f 91       	pop	r16
     e54:	ff 90       	pop	r15
     e56:	ef 90       	pop	r14
     e58:	df 90       	pop	r13
     e5a:	cf 90       	pop	r12
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:606
  if (i2cIndex >= I2C_LM75B_TEMPERATURE && i2cIndex <= I2C_LM75B_TOS) {  // mapped to LM75B's register
    softWireMaster.beginTransmission(ADDRESS_LM75B);
    softWireMaster.write(i2cIndex - I2C_LM75B_TEMPERATURE);
    if (i2cIndex == I2C_LM75B_CONF) {
      softWireMaster.requestFrom(ADDRESS_LM75B, 1);
      TinyWireS.write(softWireMaster.read());
     e5c:	0a ca       	rjmp	.-3052   	; 0x272 <i2c_tinyS::write(int) [clone .constprop.6]>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:586


// i2c master requests data from this device (master reads from this device)
void requestEvent() {
  float v = 0.0;
  switch (i2cIndex) {
     e5e:	85 30       	cpi	r24, 0x05	; 5
     e60:	09 f4       	brne	.+2      	; 0xe64 <requestEvent()+0x72>
     e62:	54 c0       	rjmp	.+168    	; 0xf0c <requestEvent()+0x11a>
     e64:	87 30       	cpi	r24, 0x07	; 7
     e66:	99 f6       	brne	.-90     	; 0xe0e <requestEvent()+0x1c>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:597
      break;
    case I2C_CURRENT_OUT_I:
      getOutputCurrent();
      break;
    case I2C_POWER_MODE:
      updatePowerMode();
     e68:	7f db       	rcall	.-2306   	; 0x568 <updatePowerMode()>
     e6a:	d1 cf       	rjmp	.-94     	; 0xe0e <requestEvent()+0x1c>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:588
// i2c master requests data from this device (master reads from this device)
void requestEvent() {
  float v = 0.0;
  switch (i2cIndex) {
    case I2C_VOLTAGE_IN_I:
      getInputVoltage();
     e6c:	2f db       	rcall	.-2466   	; 0x4cc <getInputVoltage()>
     e6e:	cf cf       	rjmp	.-98     	; 0xe0e <requestEvent()+0x1c>
getAdcVoltageAtPin():
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:439
}


// get voltage at specific pin
float getAdcVoltageAtPin(byte pin) {
  return 0.061290322580645 * analogRead(pin);    // 57*1.1/1023~=0.06129
     e70:	82 e4       	ldi	r24, 0x42	; 66
     e72:	a2 d9       	rcall	.-3260   	; 0x1b8 <analogRead>
     e74:	7c 01       	movw	r14, r24
getCathVoltage():
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:445
}


// get voltage at cathode
float getCathVoltage() {
  return 0.001075268817204 * analogRead(PIN_VK);   // 1.1/1023~=0.001075  
     e76:	83 e4       	ldi	r24, 0x43	; 67
     e78:	9f d9       	rcall	.-3266   	; 0x1b8 <analogRead>
     e7a:	8c 01       	movw	r16, r24
getAdjustValue():
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:451
}


// get actual adjust value for given register
float getAdjustValue(byte regId) {
  return (float)((char)i2cReg[regId]) / 100.0f;
     e7c:	c0 91 55 01 	lds	r28, 0x0155	; 0x800155 <i2cReg+0x19>
getAdcVoltageAtPin():
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:439
}


// get voltage at specific pin
float getAdcVoltageAtPin(byte pin) {
  return 0.061290322580645 * analogRead(pin);    // 57*1.1/1023~=0.06129
     e80:	b7 01       	movw	r22, r14
     e82:	ff 0c       	add	r15, r15
     e84:	88 0b       	sbc	r24, r24
     e86:	99 0b       	sbc	r25, r25
     e88:	ab d6       	rcall	.+3414   	; 0x1be0 <__floatsisf>
     e8a:	20 e9       	ldi	r18, 0x90	; 144
     e8c:	3b e0       	ldi	r19, 0x0B	; 11
     e8e:	4b e7       	ldi	r20, 0x7B	; 123
     e90:	5d e3       	ldi	r21, 0x3D	; 61
     e92:	5a d7       	rcall	.+3764   	; 0x1d48 <__mulsf3>
     e94:	6b 01       	movw	r12, r22
     e96:	7c 01       	movw	r14, r24
getCathVoltage():
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:445
}


// get voltage at cathode
float getCathVoltage() {
  return 0.001075268817204 * analogRead(PIN_VK);   // 1.1/1023~=0.001075  
     e98:	b8 01       	movw	r22, r16
     e9a:	11 0f       	add	r17, r17
     e9c:	88 0b       	sbc	r24, r24
     e9e:	99 0b       	sbc	r25, r25
     ea0:	9f d6       	rcall	.+3390   	; 0x1be0 <__floatsisf>
     ea2:	29 e0       	ldi	r18, 0x09	; 9
     ea4:	30 ef       	ldi	r19, 0xF0	; 240
     ea6:	4c e8       	ldi	r20, 0x8C	; 140
     ea8:	5a e3       	ldi	r21, 0x3A	; 58
     eaa:	4e d7       	rcall	.+3740   	; 0x1d48 <__mulsf3>
     eac:	9b 01       	movw	r18, r22
     eae:	ac 01       	movw	r20, r24
getOutputVoltage():
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:480

// get output voltage
float getOutputVoltage() {
  float v = getAdcVoltageAtPin(PIN_VOUT);
  float vk = getCathVoltage();
  v = v - vk + getAdjustValue(I2C_CONF_ADJ_VOUT);
     eb0:	c7 01       	movw	r24, r14
     eb2:	b6 01       	movw	r22, r12
     eb4:	91 d5       	rcall	.+2850   	; 0x19d8 <__subsf3>
     eb6:	6b 01       	movw	r12, r22
     eb8:	7c 01       	movw	r14, r24
getAdjustValue():
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:451
}


// get actual adjust value for given register
float getAdjustValue(byte regId) {
  return (float)((char)i2cReg[regId]) / 100.0f;
     eba:	6c 2f       	mov	r22, r28
     ebc:	cc 0f       	add	r28, r28
     ebe:	77 0b       	sbc	r23, r23
     ec0:	88 0b       	sbc	r24, r24
     ec2:	99 0b       	sbc	r25, r25
     ec4:	8d d6       	rcall	.+3354   	; 0x1be0 <__floatsisf>
     ec6:	20 e0       	ldi	r18, 0x00	; 0
     ec8:	30 e0       	ldi	r19, 0x00	; 0
     eca:	48 ec       	ldi	r20, 0xC8	; 200
     ecc:	52 e4       	ldi	r21, 0x42	; 66
     ece:	ed d5       	rcall	.+3034   	; 0x1aaa <__divsf3>
     ed0:	9b 01       	movw	r18, r22
     ed2:	ac 01       	movw	r20, r24
getOutputVoltage():
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:480

// get output voltage
float getOutputVoltage() {
  float v = getAdcVoltageAtPin(PIN_VOUT);
  float vk = getCathVoltage();
  v = v - vk + getAdjustValue(I2C_CONF_ADJ_VOUT);
     ed4:	c7 01       	movw	r24, r14
     ed6:	b6 01       	movw	r22, r12
     ed8:	80 d5       	rcall	.+2816   	; 0x19da <__addsf3>
     eda:	6b 01       	movw	r12, r22
     edc:	7c 01       	movw	r14, r24
getIntegerPart():
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:505
}


// get integer part of given number
byte getIntegerPart(float v) {
  return (byte)v;  
     ede:	52 d6       	rcall	.+3236   	; 0x1b84 <__fixunssfsi>
     ee0:	c6 2f       	mov	r28, r22
getOutputVoltage():
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:481
// get output voltage
float getOutputVoltage() {
  float v = getAdcVoltageAtPin(PIN_VOUT);
  float vk = getCathVoltage();
  v = v - vk + getAdjustValue(I2C_CONF_ADJ_VOUT);
  updateRegister(I2C_VOLTAGE_OUT_I, getIntegerPart(v));
     ee2:	83 e0       	ldi	r24, 0x03	; 3
     ee4:	d9 da       	rcall	.-2638   	; 0x498 <updateRegister(unsigned char, unsigned char)>
getDecimalPart():
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:511
}


// get decimal part of given number
byte getDecimalPart(float v) {
  return (byte)((v - getIntegerPart(v)) * 100);
     ee6:	6c 2f       	mov	r22, r28
     ee8:	70 e0       	ldi	r23, 0x00	; 0
     eea:	90 e0       	ldi	r25, 0x00	; 0
     eec:	80 e0       	ldi	r24, 0x00	; 0
     eee:	78 d6       	rcall	.+3312   	; 0x1be0 <__floatsisf>
     ef0:	9b 01       	movw	r18, r22
     ef2:	ac 01       	movw	r20, r24
     ef4:	c7 01       	movw	r24, r14
     ef6:	b6 01       	movw	r22, r12
     ef8:	6f d5       	rcall	.+2782   	; 0x19d8 <__subsf3>
     efa:	20 e0       	ldi	r18, 0x00	; 0
     efc:	30 e0       	ldi	r19, 0x00	; 0
     efe:	48 ec       	ldi	r20, 0xC8	; 200
     f00:	52 e4       	ldi	r21, 0x42	; 66
     f02:	22 d7       	rcall	.+3652   	; 0x1d48 <__mulsf3>
     f04:	3f d6       	rcall	.+3198   	; 0x1b84 <__fixunssfsi>
getOutputVoltage():
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:482
float getOutputVoltage() {
  float v = getAdcVoltageAtPin(PIN_VOUT);
  float vk = getCathVoltage();
  v = v - vk + getAdjustValue(I2C_CONF_ADJ_VOUT);
  updateRegister(I2C_VOLTAGE_OUT_I, getIntegerPart(v));
  updateRegister(I2C_VOLTAGE_OUT_D, getDecimalPart(v));
     f06:	84 e0       	ldi	r24, 0x04	; 4
getOutputCurrent():
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:492
// get output current
float getOutputCurrent() {
  float v = getCathVoltage();
  float i = v / 0.05 + getAdjustValue(I2C_CONF_ADJ_IOUT);
  updateRegister(I2C_CURRENT_OUT_I, getIntegerPart(i));
  updateRegister(I2C_CURRENT_OUT_D, getDecimalPart(i));
     f08:	c7 da       	rcall	.-2674   	; 0x498 <updateRegister(unsigned char, unsigned char)>
     f0a:	81 cf       	rjmp	.-254    	; 0xe0e <requestEvent()+0x1c>
getCathVoltage():
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:445
}


// get voltage at cathode
float getCathVoltage() {
  return 0.001075268817204 * analogRead(PIN_VK);   // 1.1/1023~=0.001075  
     f0c:	83 e4       	ldi	r24, 0x43	; 67
     f0e:	54 d9       	rcall	.-3416   	; 0x1b8 <analogRead>
getAdjustValue():
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:451
}


// get actual adjust value for given register
float getAdjustValue(byte regId) {
  return (float)((char)i2cReg[regId]) / 100.0f;
     f10:	c0 91 56 01 	lds	r28, 0x0156	; 0x800156 <i2cReg+0x1a>
getCathVoltage():
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:445
}


// get voltage at cathode
float getCathVoltage() {
  return 0.001075268817204 * analogRead(PIN_VK);   // 1.1/1023~=0.001075  
     f14:	bc 01       	movw	r22, r24
     f16:	99 0f       	add	r25, r25
     f18:	88 0b       	sbc	r24, r24
     f1a:	99 0b       	sbc	r25, r25
     f1c:	61 d6       	rcall	.+3266   	; 0x1be0 <__floatsisf>
     f1e:	29 e0       	ldi	r18, 0x09	; 9
     f20:	30 ef       	ldi	r19, 0xF0	; 240
     f22:	4c e8       	ldi	r20, 0x8C	; 140
     f24:	5a e3       	ldi	r21, 0x3A	; 58
     f26:	10 d7       	rcall	.+3616   	; 0x1d48 <__mulsf3>
getOutputCurrent():
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:490


// get output current
float getOutputCurrent() {
  float v = getCathVoltage();
  float i = v / 0.05 + getAdjustValue(I2C_CONF_ADJ_IOUT);
     f28:	2d ec       	ldi	r18, 0xCD	; 205
     f2a:	3c ec       	ldi	r19, 0xCC	; 204
     f2c:	4c e4       	ldi	r20, 0x4C	; 76
     f2e:	5d e3       	ldi	r21, 0x3D	; 61
     f30:	bc d5       	rcall	.+2936   	; 0x1aaa <__divsf3>
     f32:	6b 01       	movw	r12, r22
     f34:	7c 01       	movw	r14, r24
getAdjustValue():
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:451
}


// get actual adjust value for given register
float getAdjustValue(byte regId) {
  return (float)((char)i2cReg[regId]) / 100.0f;
     f36:	6c 2f       	mov	r22, r28
     f38:	cc 0f       	add	r28, r28
     f3a:	77 0b       	sbc	r23, r23
     f3c:	88 0b       	sbc	r24, r24
     f3e:	99 0b       	sbc	r25, r25
     f40:	4f d6       	rcall	.+3230   	; 0x1be0 <__floatsisf>
     f42:	20 e0       	ldi	r18, 0x00	; 0
     f44:	30 e0       	ldi	r19, 0x00	; 0
     f46:	48 ec       	ldi	r20, 0xC8	; 200
     f48:	52 e4       	ldi	r21, 0x42	; 66
     f4a:	af d5       	rcall	.+2910   	; 0x1aaa <__divsf3>
     f4c:	9b 01       	movw	r18, r22
     f4e:	ac 01       	movw	r20, r24
getOutputCurrent():
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:490


// get output current
float getOutputCurrent() {
  float v = getCathVoltage();
  float i = v / 0.05 + getAdjustValue(I2C_CONF_ADJ_IOUT);
     f50:	c7 01       	movw	r24, r14
     f52:	b6 01       	movw	r22, r12
     f54:	42 d5       	rcall	.+2692   	; 0x19da <__addsf3>
     f56:	6b 01       	movw	r12, r22
     f58:	7c 01       	movw	r14, r24
getIntegerPart():
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:505
}


// get integer part of given number
byte getIntegerPart(float v) {
  return (byte)v;  
     f5a:	14 d6       	rcall	.+3112   	; 0x1b84 <__fixunssfsi>
     f5c:	c6 2f       	mov	r28, r22
getOutputCurrent():
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:491

// get output current
float getOutputCurrent() {
  float v = getCathVoltage();
  float i = v / 0.05 + getAdjustValue(I2C_CONF_ADJ_IOUT);
  updateRegister(I2C_CURRENT_OUT_I, getIntegerPart(i));
     f5e:	85 e0       	ldi	r24, 0x05	; 5
     f60:	9b da       	rcall	.-2762   	; 0x498 <updateRegister(unsigned char, unsigned char)>
getDecimalPart():
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:511
}


// get decimal part of given number
byte getDecimalPart(float v) {
  return (byte)((v - getIntegerPart(v)) * 100);
     f62:	6c 2f       	mov	r22, r28
     f64:	70 e0       	ldi	r23, 0x00	; 0
     f66:	90 e0       	ldi	r25, 0x00	; 0
     f68:	80 e0       	ldi	r24, 0x00	; 0
     f6a:	3a d6       	rcall	.+3188   	; 0x1be0 <__floatsisf>
     f6c:	9b 01       	movw	r18, r22
     f6e:	ac 01       	movw	r20, r24
     f70:	c7 01       	movw	r24, r14
     f72:	b6 01       	movw	r22, r12
     f74:	31 d5       	rcall	.+2658   	; 0x19d8 <__subsf3>
     f76:	20 e0       	ldi	r18, 0x00	; 0
     f78:	30 e0       	ldi	r19, 0x00	; 0
     f7a:	48 ec       	ldi	r20, 0xC8	; 200
     f7c:	52 e4       	ldi	r21, 0x42	; 66
     f7e:	e4 d6       	rcall	.+3528   	; 0x1d48 <__mulsf3>
     f80:	01 d6       	rcall	.+3074   	; 0x1b84 <__fixunssfsi>
getOutputCurrent():
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:492
// get output current
float getOutputCurrent() {
  float v = getCathVoltage();
  float i = v / 0.05 + getAdjustValue(I2C_CONF_ADJ_IOUT);
  updateRegister(I2C_CURRENT_OUT_I, getIntegerPart(i));
  updateRegister(I2C_CURRENT_OUT_D, getDecimalPart(i));
     f82:	86 e0       	ldi	r24, 0x06	; 6
     f84:	c1 cf       	rjmp	.-126    	; 0xf08 <requestEvent()+0x116>
requestEvent():
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:613
      softWireMaster.requestFrom(ADDRESS_LM75B, 2);
      TinyWireS.write(softWireMaster.read());
      TinyWireS.write(softWireMaster.read());
      softWireMaster.endTransmission();
    }
  } else if (i2cIndex >= I2C_RTC_CTRL1 && i2cIndex <= I2C_RTC_TIMER_MODE) {  // mapped to RTC's register
     f86:	80 91 2b 01 	lds	r24, 0x012B	; 0x80012b <i2cIndex>
     f8a:	86 33       	cpi	r24, 0x36	; 54
     f8c:	64 f5       	brge	.+88     	; 0xfe6 <requestEvent()+0x1f4>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:620
    softWireMaster.write(i2cIndex - I2C_RTC_CTRL1);
    softWireMaster.requestFrom(ADDRESS_RTC, 1);
    TinyWireS.write(softWireMaster.read());
    softWireMaster.endTransmission();
  } else {
    TinyWireS.write(i2cReg[i2cIndex]);  // direct i2c register
     f8e:	e0 91 2b 01 	lds	r30, 0x012B	; 0x80012b <i2cIndex>
     f92:	0e 2e       	mov	r0, r30
     f94:	00 0c       	add	r0, r0
     f96:	ff 0b       	sbc	r31, r31
     f98:	e4 5c       	subi	r30, 0xC4	; 196
     f9a:	fe 4f       	sbci	r31, 0xFE	; 254
     f9c:	60 81       	ld	r22, Z
     f9e:	82 ea       	ldi	r24, 0xA2	; 162
     fa0:	91 e0       	ldi	r25, 0x01	; 1
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:622
  }
}
     fa2:	cf 91       	pop	r28
     fa4:	1f 91       	pop	r17
     fa6:	0f 91       	pop	r16
     fa8:	ff 90       	pop	r15
     faa:	ef 90       	pop	r14
     fac:	df 90       	pop	r13
     fae:	cf 90       	pop	r12
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:620
    softWireMaster.write(i2cIndex - I2C_RTC_CTRL1);
    softWireMaster.requestFrom(ADDRESS_RTC, 1);
    TinyWireS.write(softWireMaster.read());
    softWireMaster.endTransmission();
  } else {
    TinyWireS.write(i2cReg[i2cIndex]);  // direct i2c register
     fb0:	48 c9       	rjmp	.-3440   	; 0x242 <i2c_tinyS::write(unsigned char)>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:608
    softWireMaster.write(i2cIndex - I2C_LM75B_TEMPERATURE);
    if (i2cIndex == I2C_LM75B_CONF) {
      softWireMaster.requestFrom(ADDRESS_LM75B, 1);
      TinyWireS.write(softWireMaster.read());
    } else {
      softWireMaster.requestFrom(ADDRESS_LM75B, 2);
     fb2:	62 e0       	ldi	r22, 0x02	; 2
     fb4:	70 e0       	ldi	r23, 0x00	; 0
     fb6:	88 e4       	ldi	r24, 0x48	; 72
     fb8:	90 e0       	ldi	r25, 0x00	; 0
     fba:	7c de       	rcall	.-776    	; 0xcb4 <SoftWireMaster::requestFrom(int, int) [clone .constprop.8]>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:609
      TinyWireS.write(softWireMaster.read());
     fbc:	80 eb       	ldi	r24, 0xB0	; 176
     fbe:	91 e0       	ldi	r25, 0x01	; 1
     fc0:	2c da       	rcall	.-2984   	; 0x41a <SoftWireMaster::read()>
     fc2:	57 d9       	rcall	.-3410   	; 0x272 <i2c_tinyS::write(int) [clone .constprop.6]>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:617
    }
  } else if (i2cIndex >= I2C_RTC_CTRL1 && i2cIndex <= I2C_RTC_TIMER_MODE) {  // mapped to RTC's register
    softWireMaster.beginTransmission(ADDRESS_RTC);
    softWireMaster.write(i2cIndex - I2C_RTC_CTRL1);
    softWireMaster.requestFrom(ADDRESS_RTC, 1);
    TinyWireS.write(softWireMaster.read());
     fc4:	80 eb       	ldi	r24, 0xB0	; 176
     fc6:	91 e0       	ldi	r25, 0x01	; 1
     fc8:	28 da       	rcall	.-2992   	; 0x41a <SoftWireMaster::read()>
     fca:	53 d9       	rcall	.-3418   	; 0x272 <i2c_tinyS::write(int) [clone .constprop.6]>
_ZN14SoftWireMaster15endTransmissionEh():
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/SoftWireMaster.h:80

  uint8_t endTransmission(uint8_t sendStop)
  {
    uint8_t transError = error;
    if (sendStop) {
      i2c_stop_();
     fcc:	4c de       	rcall	.-872    	; 0xc66 <ass_i2c_stop_>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/SoftWireMaster.h:81
      transmitting = 0;
     fce:	10 92 de 01 	sts	0x01DE, r1	; 0x8001de <softWireMaster+0x2e>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/SoftWireMaster.h:83
    }
    error = 0;
     fd2:	10 92 df 01 	sts	0x01DF, r1	; 0x8001df <softWireMaster+0x2f>
requestEvent():
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:622
    softWireMaster.endTransmission();
  } else {
    TinyWireS.write(i2cReg[i2cIndex]);  // direct i2c register
  }
}
     fd6:	cf 91       	pop	r28
     fd8:	1f 91       	pop	r17
     fda:	0f 91       	pop	r16
     fdc:	ff 90       	pop	r15
     fde:	ef 90       	pop	r14
     fe0:	df 90       	pop	r13
     fe2:	cf 90       	pop	r12
     fe4:	08 95       	ret
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:613
      softWireMaster.requestFrom(ADDRESS_LM75B, 2);
      TinyWireS.write(softWireMaster.read());
      TinyWireS.write(softWireMaster.read());
      softWireMaster.endTransmission();
    }
  } else if (i2cIndex >= I2C_RTC_CTRL1 && i2cIndex <= I2C_RTC_TIMER_MODE) {  // mapped to RTC's register
     fe6:	80 91 2b 01 	lds	r24, 0x012B	; 0x80012b <i2cIndex>
     fea:	88 34       	cpi	r24, 0x48	; 72
     fec:	84 f6       	brge	.-96     	; 0xf8e <requestEvent()+0x19c>
_ZN14SoftWireMaster17beginTransmissionEi():
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/SoftWireMaster.h:73
    // indicate that we are transmitting
    transmitting = 1;
  }

  void beginTransmission(int address) {
    beginTransmission((uint8_t)address);
     fee:	81 e5       	ldi	r24, 0x51	; 81
     ff0:	aa de       	rcall	.-684    	; 0xd46 <SoftWireMaster::beginTransmission(unsigned char) [clone .constprop.12]>
requestEvent():
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:615
    softWireMaster.beginTransmission(ADDRESS_RTC);
    softWireMaster.write(i2cIndex - I2C_RTC_CTRL1);
     ff2:	80 91 2b 01 	lds	r24, 0x012B	; 0x80012b <i2cIndex>
     ff6:	08 2e       	mov	r0, r24
     ff8:	00 0c       	add	r0, r0
     ffa:	99 0b       	sbc	r25, r25
     ffc:	c6 97       	sbiw	r24, 0x36	; 54
     ffe:	2f de       	rcall	.-930    	; 0xc5e <SoftWireMaster::write(int) [clone .constprop.7]>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:616
    softWireMaster.requestFrom(ADDRESS_RTC, 1);
    1000:	61 e0       	ldi	r22, 0x01	; 1
    1002:	70 e0       	ldi	r23, 0x00	; 0
    1004:	81 e5       	ldi	r24, 0x51	; 81
    1006:	90 e0       	ldi	r25, 0x00	; 0
    1008:	55 de       	rcall	.-854    	; 0xcb4 <SoftWireMaster::requestFrom(int, int) [clone .constprop.8]>
    100a:	dc cf       	rjmp	.-72     	; 0xfc4 <requestEvent()+0x1d2>

0000100c <readFromDevice(unsigned char, unsigned char)>:
readFromDevice():
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:953
  }
}


// software I2C master read data from device on internal I2C bus
byte readFromDevice(byte address, byte index) {
    100c:	cf 93       	push	r28
    100e:	df 93       	push	r29
    1010:	c8 2f       	mov	r28, r24
    1012:	d6 2f       	mov	r29, r22
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:954
  softWireMaster.beginTransmission(address);
    1014:	98 de       	rcall	.-720    	; 0xd46 <SoftWireMaster::beginTransmission(unsigned char) [clone .constprop.12]>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:955
  softWireMaster.write(index);
    1016:	6d 2f       	mov	r22, r29
    1018:	80 eb       	ldi	r24, 0xB0	; 176
    101a:	91 e0       	ldi	r25, 0x01	; 1
    101c:	0c de       	rcall	.-1000   	; 0xc36 <SoftWireMaster::write(unsigned char)>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:956
  softWireMaster.requestFrom((int)address, 1);
    101e:	61 e0       	ldi	r22, 0x01	; 1
    1020:	70 e0       	ldi	r23, 0x00	; 0
    1022:	8c 2f       	mov	r24, r28
    1024:	90 e0       	ldi	r25, 0x00	; 0
    1026:	46 de       	rcall	.-884    	; 0xcb4 <SoftWireMaster::requestFrom(int, int) [clone .constprop.8]>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:957
  byte data = softWireMaster.read();
    1028:	80 eb       	ldi	r24, 0xB0	; 176
    102a:	91 e0       	ldi	r25, 0x01	; 1
    102c:	f6 d9       	rcall	.-3092   	; 0x41a <SoftWireMaster::read()>
    102e:	c8 2f       	mov	r28, r24
_ZN14SoftWireMaster15endTransmissionEh():
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/SoftWireMaster.h:80

  uint8_t endTransmission(uint8_t sendStop)
  {
    uint8_t transError = error;
    if (sendStop) {
      i2c_stop_();
    1030:	1a de       	rcall	.-972    	; 0xc66 <ass_i2c_stop_>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/SoftWireMaster.h:81
      transmitting = 0;
    1032:	e0 eb       	ldi	r30, 0xB0	; 176
    1034:	f1 e0       	ldi	r31, 0x01	; 1
    1036:	16 a6       	std	Z+46, r1	; 0x2e
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/SoftWireMaster.h:83
    }
    error = 0;
    1038:	17 a6       	std	Z+47, r1	; 0x2f
readFromDevice():
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:960
  softWireMaster.endTransmission();
  return data;
}
    103a:	8c 2f       	mov	r24, r28
    103c:	df 91       	pop	r29
    103e:	cf 91       	pop	r28
    1040:	08 95       	ret

00001042 <__vector_4>:
__vector_4():
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:626
  }
}


// watchdog interrupt routine
ISR (WDT_vect) {
    1042:	1f 92       	push	r1
    1044:	0f 92       	push	r0
    1046:	0f b6       	in	r0, 0x3f	; 63
    1048:	0f 92       	push	r0
    104a:	11 24       	eor	r1, r1
    104c:	3f 92       	push	r3
    104e:	4f 92       	push	r4
    1050:	5f 92       	push	r5
    1052:	6f 92       	push	r6
    1054:	7f 92       	push	r7
    1056:	8f 92       	push	r8
    1058:	9f 92       	push	r9
    105a:	af 92       	push	r10
    105c:	bf 92       	push	r11
    105e:	cf 92       	push	r12
    1060:	df 92       	push	r13
    1062:	ef 92       	push	r14
    1064:	ff 92       	push	r15
    1066:	0f 93       	push	r16
    1068:	1f 93       	push	r17
    106a:	2f 93       	push	r18
    106c:	3f 93       	push	r19
    106e:	4f 93       	push	r20
    1070:	5f 93       	push	r21
    1072:	6f 93       	push	r22
    1074:	7f 93       	push	r23
    1076:	8f 93       	push	r24
    1078:	9f 93       	push	r25
    107a:	af 93       	push	r26
    107c:	bf 93       	push	r27
    107e:	ef 93       	push	r30
    1080:	ff 93       	push	r31
    1082:	cf 93       	push	r28
    1084:	df 93       	push	r29
    1086:	cd b7       	in	r28, 0x3d	; 61
    1088:	de b7       	in	r29, 0x3e	; 62
    108a:	25 97       	sbiw	r28, 0x05	; 5
    108c:	de bf       	out	0x3e, r29	; 62
    108e:	cd bf       	out	0x3d, r28	; 61
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:628
  // turn off white LED after delay
  ledUpTime++;
    1090:	80 91 2e 01 	lds	r24, 0x012E	; 0x80012e <ledUpTime>
    1094:	8f 5f       	subi	r24, 0xFF	; 255
    1096:	80 93 2e 01 	sts	0x012E, r24	; 0x80012e <ledUpTime>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:629
  if (ledUpTime == 3) {
    109a:	80 91 2e 01 	lds	r24, 0x012E	; 0x80012e <ledUpTime>
    109e:	83 30       	cpi	r24, 0x03	; 3
    10a0:	19 f4       	brne	.+6      	; 0x10a8 <__vector_4+0x66>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:630
    ledUpTime = 0;
    10a2:	10 92 2e 01 	sts	0x012E, r1	; 0x80012e <ledUpTime>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:631
    ledOff();
    10a6:	49 d9       	rcall	.-3438   	; 0x33a <ledOff()>
processLowVoltageIfNeeded():
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:917


// process low voltage
void processLowVoltageIfNeeded() {
  // if input voltage is not fixed 5V, detect low voltage
  if (powerIsOn && systemIsUp 
    10a8:	80 91 38 01 	lds	r24, 0x0138	; 0x800138 <powerIsOn>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:920
      && (i2cReg[I2C_POWER_MODE] == 1 || i2cReg[I2C_CONF_IGNORE_POWER_MODE] == 1)
      && (i2cReg[I2C_LV_SHUTDOWN] == 0 || i2cReg[I2C_CONF_IGNORE_LV_SHUTDOWN] == 1)
      && i2cReg[I2C_CONF_LOW_VOLTAGE] != 255) {
    10ac:	88 23       	and	r24, r24
    10ae:	c9 f1       	breq	.+114    	; 0x1122 <__vector_4+0xe0>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:917


// process low voltage
void processLowVoltageIfNeeded() {
  // if input voltage is not fixed 5V, detect low voltage
  if (powerIsOn && systemIsUp 
    10b0:	80 91 3a 01 	lds	r24, 0x013A	; 0x80013a <systemIsUp>
    10b4:	88 23       	and	r24, r24
    10b6:	a9 f1       	breq	.+106    	; 0x1122 <__vector_4+0xe0>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:918
      && (i2cReg[I2C_POWER_MODE] == 1 || i2cReg[I2C_CONF_IGNORE_POWER_MODE] == 1)
    10b8:	80 91 43 01 	lds	r24, 0x0143	; 0x800143 <i2cReg+0x7>
    10bc:	81 30       	cpi	r24, 0x01	; 1
    10be:	21 f0       	breq	.+8      	; 0x10c8 <__vector_4+0x86>
    10c0:	80 91 65 01 	lds	r24, 0x0165	; 0x800165 <i2cReg+0x29>
    10c4:	81 30       	cpi	r24, 0x01	; 1
    10c6:	69 f5       	brne	.+90     	; 0x1122 <__vector_4+0xe0>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:919
      && (i2cReg[I2C_LV_SHUTDOWN] == 0 || i2cReg[I2C_CONF_IGNORE_LV_SHUTDOWN] == 1)
    10c8:	80 91 44 01 	lds	r24, 0x0144	; 0x800144 <i2cReg+0x8>
    10cc:	88 23       	and	r24, r24
    10ce:	21 f0       	breq	.+8      	; 0x10d8 <__vector_4+0x96>
    10d0:	80 91 66 01 	lds	r24, 0x0166	; 0x800166 <i2cReg+0x2a>
    10d4:	81 30       	cpi	r24, 0x01	; 1
    10d6:	29 f5       	brne	.+74     	; 0x1122 <__vector_4+0xe0>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:920
      && i2cReg[I2C_CONF_LOW_VOLTAGE] != 255) {
    10d8:	80 91 4f 01 	lds	r24, 0x014F	; 0x80014f <i2cReg+0x13>
    10dc:	8f 3f       	cpi	r24, 0xFF	; 255
    10de:	09 f1       	breq	.+66     	; 0x1122 <__vector_4+0xe0>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:921
    float vin = getInputVoltage();
    10e0:	f5 d9       	rcall	.-3094   	; 0x4cc <getInputVoltage()>
    10e2:	6b 01       	movw	r12, r22
    10e4:	7c 01       	movw	r14, r24
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:922
    float vlow = ((float)i2cReg[I2C_CONF_LOW_VOLTAGE]) / 10;
    10e6:	60 91 4f 01 	lds	r22, 0x014F	; 0x80014f <i2cReg+0x13>
    10ea:	70 e0       	ldi	r23, 0x00	; 0
    10ec:	90 e0       	ldi	r25, 0x00	; 0
    10ee:	80 e0       	ldi	r24, 0x00	; 0
    10f0:	75 d5       	rcall	.+2794   	; 0x1bdc <__floatunsisf>
    10f2:	20 e0       	ldi	r18, 0x00	; 0
    10f4:	30 e0       	ldi	r19, 0x00	; 0
    10f6:	40 e2       	ldi	r20, 0x20	; 32
    10f8:	51 e4       	ldi	r21, 0x41	; 65
    10fa:	d7 d4       	rcall	.+2478   	; 0x1aaa <__divsf3>
    10fc:	9b 01       	movw	r18, r22
    10fe:	ac 01       	movw	r20, r24
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:923
    if (vin < vlow) {  // input voltage is below the low voltage threshold
    1100:	c7 01       	movw	r24, r14
    1102:	b6 01       	movw	r22, r12
    1104:	ce d4       	rcall	.+2460   	; 0x1aa2 <__cmpsf2>
    1106:	87 ff       	sbrs	r24, 7
    1108:	0c c0       	rjmp	.+24     	; 0x1122 <__vector_4+0xe0>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:924
      updateRegister(I2C_LV_SHUTDOWN, 1);
    110a:	61 e0       	ldi	r22, 0x01	; 1
    110c:	88 e0       	ldi	r24, 0x08	; 8
    110e:	c4 d9       	rcall	.-3192   	; 0x498 <updateRegister(unsigned char, unsigned char)>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:925
      updateRegister(I2C_ACTION_REASON, REASON_LOW_VOLTAGE);
    1110:	64 e0       	ldi	r22, 0x04	; 4
    1112:	8b e0       	ldi	r24, 0x0B	; 11
    1114:	c1 d9       	rcall	.-3198   	; 0x498 <updateRegister(unsigned char, unsigned char)>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:926
      emulateButtonClick();
    1116:	cf d8       	rcall	.-3682   	; 0x2b6 <emulateButtonClick()>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:927
      turningOff = true;
    1118:	81 e0       	ldi	r24, 0x01	; 1
    111a:	80 93 37 01 	sts	0x0137, r24	; 0x800137 <turningOff>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:928
      systemIsUp = false;
    111e:	10 92 3a 01 	sts	0x013A, r1	; 0x80013a <systemIsUp>
handleTemperatureActtonsIfNeeded():
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:888


// handle temperature related actions (if configured)
void handleTemperatureActtonsIfNeeded() {
  // this counter makes sure not turning off your Pi too quickly
  if (skipTempShutdownCount < 120) {
    1122:	80 91 39 01 	lds	r24, 0x0139	; 0x800139 <skipTempShutdownCount>
    1126:	88 37       	cpi	r24, 0x78	; 120
    1128:	28 f4       	brcc	.+10     	; 0x1134 <__vector_4+0xf2>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:889
    skipTempShutdownCount ++;
    112a:	80 91 39 01 	lds	r24, 0x0139	; 0x800139 <skipTempShutdownCount>
    112e:	8f 5f       	subi	r24, 0xFF	; 255
    1130:	80 93 39 01 	sts	0x0139, r24	; 0x800139 <skipTempShutdownCount>
getTemperature():
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:499
}


// get temperature
char getTemperature() {
  return readFromDevice(ADDRESS_LM75B, I2C_LM75B_TEMPERATURE - I2C_LM75B_TEMPERATURE);
    1134:	60 e0       	ldi	r22, 0x00	; 0
    1136:	88 e4       	ldi	r24, 0x48	; 72
    1138:	69 df       	rcall	.-302    	; 0x100c <readFromDevice(unsigned char, unsigned char)>
handleTemperatureActtonsIfNeeded():
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:892
  // this counter makes sure not turning off your Pi too quickly
  if (skipTempShutdownCount < 120) {
    skipTempShutdownCount ++;
  }
  char t = getTemperature();
  char ot = i2cReg[I2C_CONF_OVER_TEMP_POINT];
    113a:	20 91 6a 01 	lds	r18, 0x016A	; 0x80016a <i2cReg+0x2e>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:893
  char ht = i2cReg[I2C_CONF_BELOW_TEMP_POINT];
    113e:	90 91 68 01 	lds	r25, 0x0168	; 0x800168 <i2cReg+0x2c>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:894
  if (t > ot) {
    1142:	28 17       	cp	r18, r24
    1144:	0c f0       	brlt	.+2      	; 0x1148 <__vector_4+0x106>
    1146:	92 c1       	rjmp	.+804    	; 0x146c <__vector_4+0x42a>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:895
    if (i2cReg[I2C_CONF_OVER_TEMP_ACTION] == 1) {
    1148:	80 91 69 01 	lds	r24, 0x0169	; 0x800169 <i2cReg+0x2d>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:896
      updateRegister(I2C_ACTION_REASON, REASON_OVER_TEMPERATURE);
    114c:	66 e0       	ldi	r22, 0x06	; 6
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:895
  }
  char t = getTemperature();
  char ot = i2cReg[I2C_CONF_OVER_TEMP_POINT];
  char ht = i2cReg[I2C_CONF_BELOW_TEMP_POINT];
  if (t > ot) {
    if (i2cReg[I2C_CONF_OVER_TEMP_ACTION] == 1) {
    114e:	81 30       	cpi	r24, 0x01	; 1
    1150:	09 f4       	brne	.+2      	; 0x1154 <__vector_4+0x112>
    1152:	94 c1       	rjmp	.+808    	; 0x147c <__vector_4+0x43a>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:898
      updateRegister(I2C_ACTION_REASON, REASON_OVER_TEMPERATURE);
      turnOffIfPowerOn();
    } else if (i2cReg[I2C_CONF_OVER_TEMP_ACTION] == 2) {
    1154:	80 91 69 01 	lds	r24, 0x0169	; 0x800169 <i2cReg+0x2d>
    1158:	82 30       	cpi	r24, 0x02	; 2
    115a:	41 f4       	brne	.+16     	; 0x116c <__vector_4+0x12a>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:899
      updateRegister(I2C_ACTION_REASON, REASON_OVER_TEMPERATURE);
    115c:	66 e0       	ldi	r22, 0x06	; 6
    115e:	8b e0       	ldi	r24, 0x0B	; 11
    1160:	9b d9       	rcall	.-3274   	; 0x498 <updateRegister(unsigned char, unsigned char)>
turnOnIfPowerOff():
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:946
}


// turn on Raspberry Pi only if it is off
void turnOnIfPowerOff() {
   if (!powerIsOn) {
    1162:	80 91 38 01 	lds	r24, 0x0138	; 0x800138 <powerIsOn>
    1166:	81 11       	cpse	r24, r1
    1168:	01 c0       	rjmp	.+2      	; 0x116c <__vector_4+0x12a>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:947
    emulateButtonClick();
    116a:	a5 d8       	rcall	.-3766   	; 0x2b6 <emulateButtonClick()>
processAlarmIfNeeded():
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:812


// process the alarm from RTC, if exists
void processAlarmIfNeeded() {
  // get current time from RTC
  byte seconds = bcd2dec(readFromDevice(ADDRESS_RTC, I2C_RTC_SECONDS - I2C_RTC_CTRL1) & 0x7F);
    116c:	64 e0       	ldi	r22, 0x04	; 4
    116e:	81 e5       	ldi	r24, 0x51	; 81
    1170:	4d df       	rcall	.-358    	; 0x100c <readFromDevice(unsigned char, unsigned char)>
    1172:	8f 77       	andi	r24, 0x7F	; 127
    1174:	98 d8       	rcall	.-3792   	; 0x2a6 <bcd2dec(unsigned char)>
    1176:	18 2f       	mov	r17, r24
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:813
  byte minutes = bcd2dec(readFromDevice(ADDRESS_RTC, I2C_RTC_MINUTES - I2C_RTC_CTRL1));
    1178:	65 e0       	ldi	r22, 0x05	; 5
    117a:	81 e5       	ldi	r24, 0x51	; 81
    117c:	47 df       	rcall	.-370    	; 0x100c <readFromDevice(unsigned char, unsigned char)>
    117e:	93 d8       	rcall	.-3802   	; 0x2a6 <bcd2dec(unsigned char)>
    1180:	08 2f       	mov	r16, r24
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:814
  byte hours = bcd2dec(readFromDevice(ADDRESS_RTC, I2C_RTC_HOURS - I2C_RTC_CTRL1));
    1182:	66 e0       	ldi	r22, 0x06	; 6
    1184:	81 e5       	ldi	r24, 0x51	; 81
    1186:	42 df       	rcall	.-380    	; 0x100c <readFromDevice(unsigned char, unsigned char)>
    1188:	8e d8       	rcall	.-3812   	; 0x2a6 <bcd2dec(unsigned char)>
    118a:	b8 2e       	mov	r11, r24
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:815
  byte date = bcd2dec(readFromDevice(ADDRESS_RTC, I2C_RTC_DAYS - I2C_RTC_CTRL1));
    118c:	67 e0       	ldi	r22, 0x07	; 7
    118e:	81 e5       	ldi	r24, 0x51	; 81
    1190:	3d df       	rcall	.-390    	; 0x100c <readFromDevice(unsigned char, unsigned char)>
    1192:	89 d8       	rcall	.-3822   	; 0x2a6 <bcd2dec(unsigned char)>
getTimestamp():
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:982
}


// get timestamp for given date and time
long getTimestamp(byte date, byte hours, byte minutes, byte seconds) {
  return (long)date * 86400 + (long)hours * 3600 + (long)minutes * 60 + seconds;
    1194:	68 2f       	mov	r22, r24
    1196:	70 e0       	ldi	r23, 0x00	; 0
    1198:	90 e0       	ldi	r25, 0x00	; 0
    119a:	80 e0       	ldi	r24, 0x00	; 0
    119c:	20 e8       	ldi	r18, 0x80	; 128
    119e:	31 e5       	ldi	r19, 0x51	; 81
    11a0:	41 e0       	ldi	r20, 0x01	; 1
    11a2:	50 e0       	ldi	r21, 0x00	; 0
    11a4:	56 d6       	rcall	.+3244   	; 0x1e52 <__mulsi3>
    11a6:	6b 01       	movw	r12, r22
    11a8:	7c 01       	movw	r14, r24
    11aa:	6b 2d       	mov	r22, r11
    11ac:	70 e0       	ldi	r23, 0x00	; 0
    11ae:	90 e0       	ldi	r25, 0x00	; 0
    11b0:	80 e0       	ldi	r24, 0x00	; 0
    11b2:	20 e1       	ldi	r18, 0x10	; 16
    11b4:	3e e0       	ldi	r19, 0x0E	; 14
    11b6:	40 e0       	ldi	r20, 0x00	; 0
    11b8:	50 e0       	ldi	r21, 0x00	; 0
    11ba:	4b d6       	rcall	.+3222   	; 0x1e52 <__mulsi3>
    11bc:	c6 0e       	add	r12, r22
    11be:	d7 1e       	adc	r13, r23
    11c0:	e8 1e       	adc	r14, r24
    11c2:	f9 1e       	adc	r15, r25
    11c4:	60 2f       	mov	r22, r16
    11c6:	70 e0       	ldi	r23, 0x00	; 0
    11c8:	90 e0       	ldi	r25, 0x00	; 0
    11ca:	80 e0       	ldi	r24, 0x00	; 0
    11cc:	2c e3       	ldi	r18, 0x3C	; 60
    11ce:	30 e0       	ldi	r19, 0x00	; 0
    11d0:	40 e0       	ldi	r20, 0x00	; 0
    11d2:	50 e0       	ldi	r21, 0x00	; 0
    11d4:	3e d6       	rcall	.+3196   	; 0x1e52 <__mulsi3>
    11d6:	c6 0e       	add	r12, r22
    11d8:	d7 1e       	adc	r13, r23
    11da:	e8 1e       	adc	r14, r24
    11dc:	f9 1e       	adc	r15, r25
    11de:	c1 0e       	add	r12, r17
    11e0:	d1 1c       	adc	r13, r1
    11e2:	e1 1c       	adc	r14, r1
    11e4:	f1 1c       	adc	r15, r1
processAlarmIfNeeded():
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:819
  byte hours = bcd2dec(readFromDevice(ADDRESS_RTC, I2C_RTC_HOURS - I2C_RTC_CTRL1));
  byte date = bcd2dec(readFromDevice(ADDRESS_RTC, I2C_RTC_DAYS - I2C_RTC_CTRL1));
  long cur_ts = getTimestamp(date, hours, minutes, seconds);
  
  // get startup (alarm1) time
  seconds = bcd2dec(i2cReg[I2C_CONF_SECOND_ALARM1]);
    11e6:	80 91 57 01 	lds	r24, 0x0157	; 0x800157 <i2cReg+0x1b>
    11ea:	5d d8       	rcall	.-3910   	; 0x2a6 <bcd2dec(unsigned char)>
    11ec:	18 2f       	mov	r17, r24
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:820
  minutes = bcd2dec(i2cReg[I2C_CONF_MINUTE_ALARM1]);
    11ee:	80 91 58 01 	lds	r24, 0x0158	; 0x800158 <i2cReg+0x1c>
    11f2:	59 d8       	rcall	.-3918   	; 0x2a6 <bcd2dec(unsigned char)>
    11f4:	08 2f       	mov	r16, r24
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:821
  hours = bcd2dec(i2cReg[I2C_CONF_HOUR_ALARM1]);
    11f6:	80 91 59 01 	lds	r24, 0x0159	; 0x800159 <i2cReg+0x1d>
    11fa:	55 d8       	rcall	.-3926   	; 0x2a6 <bcd2dec(unsigned char)>
    11fc:	b8 2e       	mov	r11, r24
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:822
  date = bcd2dec(i2cReg[I2C_CONF_DAY_ALARM1]);
    11fe:	80 91 5a 01 	lds	r24, 0x015A	; 0x80015a <i2cReg+0x1e>
    1202:	51 d8       	rcall	.-3934   	; 0x2a6 <bcd2dec(unsigned char)>
getTimestamp():
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:982
}


// get timestamp for given date and time
long getTimestamp(byte date, byte hours, byte minutes, byte seconds) {
  return (long)date * 86400 + (long)hours * 3600 + (long)minutes * 60 + seconds;
    1204:	68 2f       	mov	r22, r24
    1206:	70 e0       	ldi	r23, 0x00	; 0
    1208:	90 e0       	ldi	r25, 0x00	; 0
    120a:	80 e0       	ldi	r24, 0x00	; 0
    120c:	20 e8       	ldi	r18, 0x80	; 128
    120e:	31 e5       	ldi	r19, 0x51	; 81
    1210:	41 e0       	ldi	r20, 0x01	; 1
    1212:	50 e0       	ldi	r21, 0x00	; 0
    1214:	1e d6       	rcall	.+3132   	; 0x1e52 <__mulsi3>
    1216:	2b 01       	movw	r4, r22
    1218:	3c 01       	movw	r6, r24
    121a:	6b 2d       	mov	r22, r11
    121c:	70 e0       	ldi	r23, 0x00	; 0
    121e:	90 e0       	ldi	r25, 0x00	; 0
    1220:	80 e0       	ldi	r24, 0x00	; 0
    1222:	20 e1       	ldi	r18, 0x10	; 16
    1224:	3e e0       	ldi	r19, 0x0E	; 14
    1226:	40 e0       	ldi	r20, 0x00	; 0
    1228:	50 e0       	ldi	r21, 0x00	; 0
    122a:	13 d6       	rcall	.+3110   	; 0x1e52 <__mulsi3>
    122c:	53 01       	movw	r10, r6
    122e:	42 01       	movw	r8, r4
    1230:	86 0e       	add	r8, r22
    1232:	97 1e       	adc	r9, r23
    1234:	a8 1e       	adc	r10, r24
    1236:	b9 1e       	adc	r11, r25
    1238:	60 2f       	mov	r22, r16
    123a:	70 e0       	ldi	r23, 0x00	; 0
    123c:	90 e0       	ldi	r25, 0x00	; 0
    123e:	80 e0       	ldi	r24, 0x00	; 0
    1240:	2c e3       	ldi	r18, 0x3C	; 60
    1242:	30 e0       	ldi	r19, 0x00	; 0
    1244:	40 e0       	ldi	r20, 0x00	; 0
    1246:	50 e0       	ldi	r21, 0x00	; 0
    1248:	04 d6       	rcall	.+3080   	; 0x1e52 <__mulsi3>
    124a:	86 0e       	add	r8, r22
    124c:	97 1e       	adc	r9, r23
    124e:	a8 1e       	adc	r10, r24
    1250:	b9 1e       	adc	r11, r25
    1252:	81 0e       	add	r8, r17
    1254:	91 1c       	adc	r9, r1
    1256:	a1 1c       	adc	r10, r1
    1258:	b1 1c       	adc	r11, r1
processAlarmIfNeeded():
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:826
  hours = bcd2dec(i2cReg[I2C_CONF_HOUR_ALARM1]);
  date = bcd2dec(i2cReg[I2C_CONF_DAY_ALARM1]);
  long alarm1_ts = getTimestamp(date, hours, minutes, seconds);

  // get shutdown (alarm2) time
  seconds = bcd2dec(i2cReg[I2C_CONF_SECOND_ALARM2]);
    125a:	80 91 5c 01 	lds	r24, 0x015C	; 0x80015c <i2cReg+0x20>
    125e:	23 d8       	rcall	.-4026   	; 0x2a6 <bcd2dec(unsigned char)>
    1260:	18 2f       	mov	r17, r24
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:827
  minutes = bcd2dec(i2cReg[I2C_CONF_MINUTE_ALARM2]);
    1262:	80 91 5d 01 	lds	r24, 0x015D	; 0x80015d <i2cReg+0x21>
    1266:	1f d8       	rcall	.-4034   	; 0x2a6 <bcd2dec(unsigned char)>
    1268:	08 2f       	mov	r16, r24
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:828
  hours = bcd2dec(i2cReg[I2C_CONF_HOUR_ALARM2]);
    126a:	80 91 5e 01 	lds	r24, 0x015E	; 0x80015e <i2cReg+0x22>
    126e:	1b d8       	rcall	.-4042   	; 0x2a6 <bcd2dec(unsigned char)>
    1270:	38 2e       	mov	r3, r24
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:829
  date = bcd2dec(i2cReg[I2C_CONF_DAY_ALARM2]);
    1272:	80 91 5f 01 	lds	r24, 0x015F	; 0x80015f <i2cReg+0x23>
    1276:	17 d8       	rcall	.-4050   	; 0x2a6 <bcd2dec(unsigned char)>
getTimestamp():
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:982
}


// get timestamp for given date and time
long getTimestamp(byte date, byte hours, byte minutes, byte seconds) {
  return (long)date * 86400 + (long)hours * 3600 + (long)minutes * 60 + seconds;
    1278:	68 2f       	mov	r22, r24
    127a:	70 e0       	ldi	r23, 0x00	; 0
    127c:	90 e0       	ldi	r25, 0x00	; 0
    127e:	80 e0       	ldi	r24, 0x00	; 0
    1280:	20 e8       	ldi	r18, 0x80	; 128
    1282:	31 e5       	ldi	r19, 0x51	; 81
    1284:	41 e0       	ldi	r20, 0x01	; 1
    1286:	50 e0       	ldi	r21, 0x00	; 0
    1288:	e4 d5       	rcall	.+3016   	; 0x1e52 <__mulsi3>
    128a:	2b 01       	movw	r4, r22
    128c:	3c 01       	movw	r6, r24
    128e:	63 2d       	mov	r22, r3
    1290:	70 e0       	ldi	r23, 0x00	; 0
    1292:	90 e0       	ldi	r25, 0x00	; 0
    1294:	80 e0       	ldi	r24, 0x00	; 0
    1296:	20 e1       	ldi	r18, 0x10	; 16
    1298:	3e e0       	ldi	r19, 0x0E	; 14
    129a:	40 e0       	ldi	r20, 0x00	; 0
    129c:	50 e0       	ldi	r21, 0x00	; 0
    129e:	d9 d5       	rcall	.+2994   	; 0x1e52 <__mulsi3>
    12a0:	46 0e       	add	r4, r22
    12a2:	57 1e       	adc	r5, r23
    12a4:	68 1e       	adc	r6, r24
    12a6:	79 1e       	adc	r7, r25
    12a8:	60 2f       	mov	r22, r16
    12aa:	70 e0       	ldi	r23, 0x00	; 0
    12ac:	90 e0       	ldi	r25, 0x00	; 0
    12ae:	80 e0       	ldi	r24, 0x00	; 0
    12b0:	2c e3       	ldi	r18, 0x3C	; 60
    12b2:	30 e0       	ldi	r19, 0x00	; 0
    12b4:	40 e0       	ldi	r20, 0x00	; 0
    12b6:	50 e0       	ldi	r21, 0x00	; 0
    12b8:	cc d5       	rcall	.+2968   	; 0x1e52 <__mulsi3>
    12ba:	46 0e       	add	r4, r22
    12bc:	57 1e       	adc	r5, r23
    12be:	68 1e       	adc	r6, r24
    12c0:	79 1e       	adc	r7, r25
    12c2:	a3 01       	movw	r20, r6
    12c4:	92 01       	movw	r18, r4
    12c6:	21 0f       	add	r18, r17
    12c8:	31 1d       	adc	r19, r1
    12ca:	41 1d       	adc	r20, r1
    12cc:	51 1d       	adc	r21, r1
    12ce:	2a 83       	std	Y+2, r18	; 0x02
    12d0:	3b 83       	std	Y+3, r19	; 0x03
    12d2:	4c 83       	std	Y+4, r20	; 0x04
    12d4:	5d 83       	std	Y+5, r21	; 0x05
canTriggerAlarm():
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:785
}


// check wether alarm can be triggered
boolean canTriggerAlarm() {
  if (powerIsOn || i2cReg[I2C_POWER_MODE] == 0) {
    12d6:	80 91 38 01 	lds	r24, 0x0138	; 0x800138 <powerIsOn>
    12da:	88 23       	and	r24, r24
    12dc:	09 f4       	brne	.+2      	; 0x12e0 <__vector_4+0x29e>
    12de:	d9 c0       	rjmp	.+434    	; 0x1492 <__vector_4+0x450>
__vector_4():
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:786
    return true;
    12e0:	81 e0       	ldi	r24, 0x01	; 1
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:833
  hours = bcd2dec(i2cReg[I2C_CONF_HOUR_ALARM2]);
  date = bcd2dec(i2cReg[I2C_CONF_DAY_ALARM2]);
  long alarm2_ts = getTimestamp(date, hours, minutes, seconds);

  boolean canTrigger = canTriggerAlarm();
  boolean alarm1HasTriggered = (alarm1_ts == 0 || i2cReg[I2C_ALARM1_TRIGGERED] == 1);
    12e2:	91 e0       	ldi	r25, 0x01	; 1
processAlarmIfNeeded():
    12e4:	81 14       	cp	r8, r1
    12e6:	91 04       	cpc	r9, r1
    12e8:	a1 04       	cpc	r10, r1
    12ea:	b1 04       	cpc	r11, r1
    12ec:	31 f0       	breq	.+12     	; 0x12fa <__vector_4+0x2b8>
    12ee:	20 91 45 01 	lds	r18, 0x0145	; 0x800145 <i2cReg+0x9>
    12f2:	91 e0       	ldi	r25, 0x01	; 1
    12f4:	21 30       	cpi	r18, 0x01	; 1
    12f6:	09 f0       	breq	.+2      	; 0x12fa <__vector_4+0x2b8>
    12f8:	90 e0       	ldi	r25, 0x00	; 0
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:834
  boolean alarm2HasTriggered = (alarm2_ts == 0 || i2cReg[I2C_ALARM2_TRIGGERED] == 1);
    12fa:	2a 81       	ldd	r18, Y+2	; 0x02
    12fc:	3b 81       	ldd	r19, Y+3	; 0x03
    12fe:	4c 81       	ldd	r20, Y+4	; 0x04
    1300:	5d 81       	ldd	r21, Y+5	; 0x05
    1302:	23 2b       	or	r18, r19
    1304:	24 2b       	or	r18, r20
    1306:	25 2b       	or	r18, r21
    1308:	09 f4       	brne	.+2      	; 0x130c <__vector_4+0x2ca>
    130a:	07 c1       	rjmp	.+526    	; 0x151a <__vector_4+0x4d8>
    130c:	30 91 46 01 	lds	r19, 0x0146	; 0x800146 <i2cReg+0xa>
    1310:	21 e0       	ldi	r18, 0x01	; 1
    1312:	31 30       	cpi	r19, 0x01	; 1
    1314:	09 f0       	breq	.+2      	; 0x1318 <__vector_4+0x2d6>
    1316:	20 e0       	ldi	r18, 0x00	; 0
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:836

  long overdue_alarm1 = cur_ts - alarm1_ts;
    1318:	b7 01       	movw	r22, r14
    131a:	a6 01       	movw	r20, r12
    131c:	48 19       	sub	r20, r8
    131e:	59 09       	sbc	r21, r9
    1320:	6a 09       	sbc	r22, r10
    1322:	7b 09       	sbc	r23, r11
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:837
  long overdue_alarm2 = cur_ts - alarm2_ts;
    1324:	8a 80       	ldd	r8, Y+2	; 0x02
    1326:	9b 80       	ldd	r9, Y+3	; 0x03
    1328:	ac 80       	ldd	r10, Y+4	; 0x04
    132a:	bd 80       	ldd	r11, Y+5	; 0x05
    132c:	c8 18       	sub	r12, r8
    132e:	d9 08       	sbc	r13, r9
    1330:	ea 08       	sbc	r14, r10
    1332:	fb 08       	sbc	r15, r11
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:839
  
  if (canTrigger && !alarm1HasTriggered && overdue_alarm1 >= 0 && overdue_alarm1 < 2) {  // Alarm 1: startup
    1334:	88 23       	and	r24, r24
    1336:	09 f4       	brne	.+2      	; 0x133a <__vector_4+0x2f8>
    1338:	06 c1       	rjmp	.+524    	; 0x1546 <__vector_4+0x504>
    133a:	91 11       	cpse	r25, r1
    133c:	4c c1       	rjmp	.+664    	; 0x15d6 <__vector_4+0x594>
    133e:	42 30       	cpi	r20, 0x02	; 2
    1340:	51 05       	cpc	r21, r1
    1342:	61 05       	cpc	r22, r1
    1344:	71 05       	cpc	r23, r1
    1346:	08 f0       	brcs	.+2      	; 0x134a <__vector_4+0x308>
    1348:	f2 c0       	rjmp	.+484    	; 0x152e <__vector_4+0x4ec>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:840
    updateRegister(I2C_ALARM1_TRIGGERED, 1);
    134a:	61 e0       	ldi	r22, 0x01	; 1
    134c:	89 e0       	ldi	r24, 0x09	; 9
    134e:	a4 d8       	rcall	.-3768   	; 0x498 <updateRegister(unsigned char, unsigned char)>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:841
    updateRegister(I2C_CONF_FLAG_ALARM1, 1);
    1350:	61 e0       	ldi	r22, 0x01	; 1
    1352:	87 e2       	ldi	r24, 0x27	; 39
    1354:	a1 d8       	rcall	.-3774   	; 0x498 <updateRegister(unsigned char, unsigned char)>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:842
    if (!powerIsOn) {
    1356:	80 91 38 01 	lds	r24, 0x0138	; 0x800138 <powerIsOn>
    135a:	81 11       	cpse	r24, r1
    135c:	e0 c0       	rjmp	.+448    	; 0x151e <__vector_4+0x4dc>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:843
      updateRegister(I2C_ACTION_REASON, REASON_ALARM1);
    135e:	61 e0       	ldi	r22, 0x01	; 1
    1360:	8b e0       	ldi	r24, 0x0B	; 11
    1362:	9a d8       	rcall	.-3788   	; 0x498 <updateRegister(unsigned char, unsigned char)>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:844
      emulateButtonClick();
    1364:	a8 d7       	rcall	.+3920   	; 0x22b6 <__TEXT_REGION_LENGTH__+0x2b6>
adjustRTCIfNeeded():
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:998
}


// adjust the RTC with offset value and the temperature compensation data (when TC is enabled)
void adjustRTCIfNeeded() {
  skipAdjustRtcCount ++;
    1366:	80 91 2c 01 	lds	r24, 0x012C	; 0x80012c <skipAdjustRtcCount>
    136a:	8f 5f       	subi	r24, 0xFF	; 255
    136c:	80 93 2c 01 	sts	0x012C, r24	; 0x80012c <skipAdjustRtcCount>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:999
  if (skipAdjustRtcCount == 255) {  // no need to adjust too frequently
    1370:	80 91 2c 01 	lds	r24, 0x012C	; 0x80012c <skipAdjustRtcCount>
    1374:	8f 3f       	cpi	r24, 0xFF	; 255
    1376:	79 f5       	brne	.+94     	; 0x13d6 <__vector_4+0x394>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:1000
    skipAdjustRtcCount = 0;
    1378:	10 92 2c 01 	sts	0x012C, r1	; 0x80012c <skipAdjustRtcCount>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:1002
  
    if (i2cReg[I2C_CONF_RTC_ENABLE_TC] == 1) {
    137c:	80 91 62 01 	lds	r24, 0x0162	; 0x800162 <i2cReg+0x26>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:1015
        adj = -0.921658986f + (t - 42) * -0.276497696f;
      }
      byte data = value2Offset(offset2Value(i2cReg[I2C_CONF_RTC_OFFSET]) + adj);
      writeToDevice(ADDRESS_RTC, I2C_RTC_OFFSET - I2C_RTC_CTRL1, &data, 1);
    } else {
      writeToDevice(ADDRESS_RTC, I2C_RTC_OFFSET - I2C_RTC_CTRL1, &i2cReg[I2C_CONF_RTC_OFFSET], 1);
    1380:	41 e6       	ldi	r20, 0x61	; 97
    1382:	51 e0       	ldi	r21, 0x01	; 1
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:1002
void adjustRTCIfNeeded() {
  skipAdjustRtcCount ++;
  if (skipAdjustRtcCount == 255) {  // no need to adjust too frequently
    skipAdjustRtcCount = 0;
  
    if (i2cReg[I2C_CONF_RTC_ENABLE_TC] == 1) {
    1384:	81 30       	cpi	r24, 0x01	; 1
    1386:	21 f5       	brne	.+72     	; 0x13d0 <__vector_4+0x38e>
getTemperature():
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:499
}


// get temperature
char getTemperature() {
  return readFromDevice(ADDRESS_LM75B, I2C_LM75B_TEMPERATURE - I2C_LM75B_TEMPERATURE);
    1388:	60 e0       	ldi	r22, 0x00	; 0
    138a:	88 e4       	ldi	r24, 0x48	; 72
    138c:	3f de       	rcall	.-898    	; 0x100c <readFromDevice(unsigned char, unsigned char)>
    138e:	68 2f       	mov	r22, r24
adjustRTCIfNeeded():
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:1005
    skipAdjustRtcCount = 0;
  
    if (i2cReg[I2C_CONF_RTC_ENABLE_TC] == 1) {
      char t = getTemperature();
      char adj = 0;
      if (t < 26) {
    1390:	8a 31       	cpi	r24, 0x1A	; 26
    1392:	0c f0       	brlt	.+2      	; 0x1396 <__vector_4+0x354>
    1394:	f4 c0       	rjmp	.+488    	; 0x157e <__vector_4+0x53c>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:1006
        adj = (t - 26) * 0.126728111f;
    1396:	06 2e       	mov	r0, r22
    1398:	00 0c       	add	r0, r0
    139a:	77 0b       	sbc	r23, r23
    139c:	6a 51       	subi	r22, 0x1A	; 26
    139e:	71 09       	sbc	r23, r1
    13a0:	07 2e       	mov	r0, r23
    13a2:	00 0c       	add	r0, r0
    13a4:	88 0b       	sbc	r24, r24
    13a6:	99 0b       	sbc	r25, r25
    13a8:	1b d4       	rcall	.+2102   	; 0x1be0 <__floatsisf>
    13aa:	24 e0       	ldi	r18, 0x04	; 4
    13ac:	35 ec       	ldi	r19, 0xC5	; 197
    13ae:	41 e0       	ldi	r20, 0x01	; 1
    13b0:	5e e3       	ldi	r21, 0x3E	; 62
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:1008
      } else if (t > 32 && t <= 42) {
        adj = (t - 32) * -0.092165899f;
    13b2:	ca d4       	rcall	.+2452   	; 0x1d48 <__mulsf3>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:1010
      } else if (t > 42) {
        adj = -0.921658986f + (t - 42) * -0.276497696f;
    13b4:	e2 d3       	rcall	.+1988   	; 0x1b7a <__fixsfsi>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:1012
      }
      byte data = value2Offset(offset2Value(i2cReg[I2C_CONF_RTC_OFFSET]) + adj);
    13b6:	90 91 61 01 	lds	r25, 0x0161	; 0x800161 <i2cReg+0x25>
    13ba:	89 2f       	mov	r24, r25
    13bc:	8f 73       	andi	r24, 0x3F	; 63
offset2Value():
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:1023
}


// convert stored offset value to actual signed value
char offset2Value(byte offset) {
  if ( (offset & 0x40) == 0) {
    13be:	96 fd       	sbrc	r25, 6
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:1026
    return (offset & 0x3F);
  } else {
    return (offset & 0x3F) - 0x40;
    13c0:	80 54       	subi	r24, 0x40	; 64
adjustRTCIfNeeded():
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:1012
      } else if (t > 32 && t <= 42) {
        adj = (t - 32) * -0.092165899f;
      } else if (t > 42) {
        adj = -0.921658986f + (t - 42) * -0.276497696f;
      }
      byte data = value2Offset(offset2Value(i2cReg[I2C_CONF_RTC_OFFSET]) + adj);
    13c2:	68 0f       	add	r22, r24
value2Offset():
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:1033
}


// convert actual signed value to offset value
byte value2Offset(char value) {
  if (value >= 0) {
    13c4:	67 fd       	sbrc	r22, 7
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:1036
    return (byte)value;
  } else {
    return (0x80 + value);
    13c6:	60 58       	subi	r22, 0x80	; 128
adjustRTCIfNeeded():
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:1012
      } else if (t > 32 && t <= 42) {
        adj = (t - 32) * -0.092165899f;
      } else if (t > 42) {
        adj = -0.921658986f + (t - 42) * -0.276497696f;
      }
      byte data = value2Offset(offset2Value(i2cReg[I2C_CONF_RTC_OFFSET]) + adj);
    13c8:	69 83       	std	Y+1, r22	; 0x01
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:1013
      writeToDevice(ADDRESS_RTC, I2C_RTC_OFFSET - I2C_RTC_CTRL1, &data, 1);
    13ca:	ae 01       	movw	r20, r28
    13cc:	4f 5f       	subi	r20, 0xFF	; 255
    13ce:	5f 4f       	sbci	r21, 0xFF	; 255
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:1015
    } else {
      writeToDevice(ADDRESS_RTC, I2C_RTC_OFFSET - I2C_RTC_CTRL1, &i2cReg[I2C_CONF_RTC_OFFSET], 1);
    13d0:	62 e0       	ldi	r22, 0x02	; 2
    13d2:	81 e5       	ldi	r24, 0x51	; 81
    13d4:	d2 dc       	rcall	.-1628   	; 0xd7a <writeToDevice(unsigned char, unsigned char, unsigned char*, unsigned char) [clone .constprop.3]>
__vector_4():
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:647

  // adjust RTC
  adjustRTCIfNeeded();

  // process delayed Alarm1 (startup)
  if (!powerIsOn && alarm1Delayed > 0) {
    13d6:	80 91 38 01 	lds	r24, 0x0138	; 0x800138 <powerIsOn>
    13da:	81 11       	cpse	r24, r1
    13dc:	13 c0       	rjmp	.+38     	; 0x1404 <__vector_4+0x3c2>
    13de:	80 91 2d 01 	lds	r24, 0x012D	; 0x80012d <alarm1Delayed>
    13e2:	88 23       	and	r24, r24
    13e4:	79 f0       	breq	.+30     	; 0x1404 <__vector_4+0x3c2>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:648
    alarm1Delayed ++;
    13e6:	80 91 2d 01 	lds	r24, 0x012D	; 0x80012d <alarm1Delayed>
    13ea:	8f 5f       	subi	r24, 0xFF	; 255
    13ec:	80 93 2d 01 	sts	0x012D, r24	; 0x80012d <alarm1Delayed>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:649
    if (alarm1Delayed == 4) {
    13f0:	80 91 2d 01 	lds	r24, 0x012D	; 0x80012d <alarm1Delayed>
    13f4:	84 30       	cpi	r24, 0x04	; 4
    13f6:	31 f4       	brne	.+12     	; 0x1404 <__vector_4+0x3c2>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:650
      alarm1Delayed = 0;
    13f8:	10 92 2d 01 	sts	0x012D, r1	; 0x80012d <alarm1Delayed>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:651
      updateRegister(I2C_ACTION_REASON, REASON_ALARM1_DELAYED);
    13fc:	68 e0       	ldi	r22, 0x08	; 8
    13fe:	8b e0       	ldi	r24, 0x0B	; 11
    1400:	4b d8       	rcall	.-3946   	; 0x498 <updateRegister(unsigned char, unsigned char)>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:652
      emulateButtonClick();
    1402:	59 d7       	rcall	.+3762   	; 0x22b6 <__TEXT_REGION_LENGTH__+0x2b6>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:656
    }
  }

  float vin = getInputVoltage(); // Use existing function to get VIN
    1404:	63 d8       	rcall	.-3898   	; 0x4cc <getInputVoltage()>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:657
  if (vin > VIN_THRESHOLD && !powerIsOn) {
    1406:	2d ec       	ldi	r18, 0xCD	; 205
    1408:	3c ec       	ldi	r19, 0xCC	; 204
    140a:	4c e4       	ldi	r20, 0x4C	; 76
    140c:	5d e3       	ldi	r21, 0x3D	; 61
    140e:	98 d4       	rcall	.+2352   	; 0x1d40 <__gesf2>
    1410:	18 16       	cp	r1, r24
    1412:	2c f4       	brge	.+10     	; 0x141e <__vector_4+0x3dc>
    1414:	80 91 38 01 	lds	r24, 0x0138	; 0x800138 <powerIsOn>
    1418:	81 11       	cpse	r24, r1
    141a:	01 c0       	rjmp	.+2      	; 0x141e <__vector_4+0x3dc>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:658
    emulateButtonClick(); // Use existing function to power on the Raspberry Pi
    141c:	4c d7       	rcall	.+3736   	; 0x22b6 <__TEXT_REGION_LENGTH__+0x2b6>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:660
  }
}
    141e:	0f 90       	pop	r0
    1420:	0f 90       	pop	r0
    1422:	0f 90       	pop	r0
    1424:	0f 90       	pop	r0
    1426:	0f 90       	pop	r0
    1428:	df 91       	pop	r29
    142a:	cf 91       	pop	r28
    142c:	ff 91       	pop	r31
    142e:	ef 91       	pop	r30
    1430:	bf 91       	pop	r27
    1432:	af 91       	pop	r26
    1434:	9f 91       	pop	r25
    1436:	8f 91       	pop	r24
    1438:	7f 91       	pop	r23
    143a:	6f 91       	pop	r22
    143c:	5f 91       	pop	r21
    143e:	4f 91       	pop	r20
    1440:	3f 91       	pop	r19
    1442:	2f 91       	pop	r18
    1444:	1f 91       	pop	r17
    1446:	0f 91       	pop	r16
    1448:	ff 90       	pop	r15
    144a:	ef 90       	pop	r14
    144c:	df 90       	pop	r13
    144e:	cf 90       	pop	r12
    1450:	bf 90       	pop	r11
    1452:	af 90       	pop	r10
    1454:	9f 90       	pop	r9
    1456:	8f 90       	pop	r8
    1458:	7f 90       	pop	r7
    145a:	6f 90       	pop	r6
    145c:	5f 90       	pop	r5
    145e:	4f 90       	pop	r4
    1460:	3f 90       	pop	r3
    1462:	0f 90       	pop	r0
    1464:	0f be       	out	0x3f, r0	; 63
    1466:	0f 90       	pop	r0
    1468:	1f 90       	pop	r1
    146a:	18 95       	reti
handleTemperatureActtonsIfNeeded():
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:902
      turnOffIfPowerOn();
    } else if (i2cReg[I2C_CONF_OVER_TEMP_ACTION] == 2) {
      updateRegister(I2C_ACTION_REASON, REASON_OVER_TEMPERATURE);
      turnOnIfPowerOff();
    }
  } else if (t < ht) {
    146c:	89 17       	cp	r24, r25
    146e:	0c f0       	brlt	.+2      	; 0x1472 <__vector_4+0x430>
    1470:	7d ce       	rjmp	.-774    	; 0x116c <__vector_4+0x12a>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:903
    if (i2cReg[I2C_CONF_BELOW_TEMP_ACTION] == 1) {
    1472:	80 91 67 01 	lds	r24, 0x0167	; 0x800167 <i2cReg+0x2b>
    1476:	81 30       	cpi	r24, 0x01	; 1
    1478:	29 f4       	brne	.+10     	; 0x1484 <__vector_4+0x442>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:904
      updateRegister(I2C_ACTION_REASON, REASON_BELOW_TEMPERATURE);
    147a:	67 e0       	ldi	r22, 0x07	; 7
    147c:	8b e0       	ldi	r24, 0x0B	; 11
    147e:	0c d8       	rcall	.-4072   	; 0x498 <updateRegister(unsigned char, unsigned char)>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:905
      turnOffIfPowerOn();
    1480:	22 d7       	rcall	.+3652   	; 0x22c6 <__TEXT_REGION_LENGTH__+0x2c6>
    1482:	74 ce       	rjmp	.-792    	; 0x116c <__vector_4+0x12a>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:906
    } else if (i2cReg[I2C_CONF_BELOW_TEMP_ACTION] == 2) {
    1484:	80 91 67 01 	lds	r24, 0x0167	; 0x800167 <i2cReg+0x2b>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:907
      updateRegister(I2C_ACTION_REASON, REASON_BELOW_TEMPERATURE);
    1488:	67 e0       	ldi	r22, 0x07	; 7
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:906
    }
  } else if (t < ht) {
    if (i2cReg[I2C_CONF_BELOW_TEMP_ACTION] == 1) {
      updateRegister(I2C_ACTION_REASON, REASON_BELOW_TEMPERATURE);
      turnOffIfPowerOn();
    } else if (i2cReg[I2C_CONF_BELOW_TEMP_ACTION] == 2) {
    148a:	82 30       	cpi	r24, 0x02	; 2
    148c:	09 f0       	breq	.+2      	; 0x1490 <__vector_4+0x44e>
    148e:	6e ce       	rjmp	.-804    	; 0x116c <__vector_4+0x12a>
    1490:	66 ce       	rjmp	.-820    	; 0x115e <__vector_4+0x11c>
canTriggerAlarm():
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:785
}


// check wether alarm can be triggered
boolean canTriggerAlarm() {
  if (powerIsOn || i2cReg[I2C_POWER_MODE] == 0) {
    1492:	80 91 43 01 	lds	r24, 0x0143	; 0x800143 <i2cReg+0x7>
    1496:	88 23       	and	r24, r24
    1498:	09 f4       	brne	.+2      	; 0x149c <__vector_4+0x45a>
    149a:	22 cf       	rjmp	.-444    	; 0x12e0 <__vector_4+0x29e>
turnOnAdcAndGetInputVoltage():
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:775
}


// temporarily turn on ADC to get input voltage 
float turnOnAdcAndGetInputVoltage() {
  byte bk = ADCSRA;
    149c:	15 b1       	in	r17, 0x05	; 5
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:776
  ADCSRA |= _BV(ADEN);
    149e:	2f 9a       	sbi	0x05, 7	; 5
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:777
  float vin = getInputVoltage();
    14a0:	15 d8       	rcall	.-4054   	; 0x4cc <getInputVoltage()>
    14a2:	2b 01       	movw	r4, r22
    14a4:	3c 01       	movw	r6, r24
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:778
  ADCSRA = bk;
    14a6:	15 b9       	out	0x05, r17	; 5
canTriggerAlarm():
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:789
boolean canTriggerAlarm() {
  if (powerIsOn || i2cReg[I2C_POWER_MODE] == 0) {
    return true;
  }
  float vin = turnOnAdcAndGetInputVoltage();
  float vlow = ((float)i2cReg[I2C_CONF_LOW_VOLTAGE]) / 10;
    14a8:	60 91 4f 01 	lds	r22, 0x014F	; 0x80014f <i2cReg+0x13>
    14ac:	70 e0       	ldi	r23, 0x00	; 0
    14ae:	90 e0       	ldi	r25, 0x00	; 0
    14b0:	80 e0       	ldi	r24, 0x00	; 0
    14b2:	94 d3       	rcall	.+1832   	; 0x1bdc <__floatunsisf>
    14b4:	20 e0       	ldi	r18, 0x00	; 0
    14b6:	30 e0       	ldi	r19, 0x00	; 0
    14b8:	40 e2       	ldi	r20, 0x20	; 32
    14ba:	51 e4       	ldi	r21, 0x41	; 65
    14bc:	f6 d2       	rcall	.+1516   	; 0x1aaa <__divsf3>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:790
  if (i2cReg[I2C_LV_SHUTDOWN] == 1) {
    14be:	20 91 44 01 	lds	r18, 0x0144	; 0x800144 <i2cReg+0x8>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:791
    if (vin > vlow) {
    14c2:	a3 01       	movw	r20, r6
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:790
  if (powerIsOn || i2cReg[I2C_POWER_MODE] == 0) {
    return true;
  }
  float vin = turnOnAdcAndGetInputVoltage();
  float vlow = ((float)i2cReg[I2C_CONF_LOW_VOLTAGE]) / 10;
  if (i2cReg[I2C_LV_SHUTDOWN] == 1) {
    14c4:	21 30       	cpi	r18, 0x01	; 1
    14c6:	d9 f4       	brne	.+54     	; 0x14fe <__vector_4+0x4bc>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:791
    if (vin > vlow) {
    14c8:	92 01       	movw	r18, r4
    14ca:	eb d2       	rcall	.+1494   	; 0x1aa2 <__cmpsf2>
    14cc:	87 ff       	sbrs	r24, 7
    14ce:	23 c0       	rjmp	.+70     	; 0x1516 <__vector_4+0x4d4>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:792
      float vrec = ((float)i2cReg[I2C_CONF_RECOVERY_VOLTAGE]) / 10;
    14d0:	60 91 52 01 	lds	r22, 0x0152	; 0x800152 <i2cReg+0x16>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:793
      if (i2cReg[I2C_CONF_RECOVERY_VOLTAGE] == 255 || vin > vrec) {
    14d4:	80 91 52 01 	lds	r24, 0x0152	; 0x800152 <i2cReg+0x16>
    14d8:	8f 3f       	cpi	r24, 0xFF	; 255
    14da:	09 f4       	brne	.+2      	; 0x14de <__vector_4+0x49c>
    14dc:	01 cf       	rjmp	.-510    	; 0x12e0 <__vector_4+0x29e>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:792
  }
  float vin = turnOnAdcAndGetInputVoltage();
  float vlow = ((float)i2cReg[I2C_CONF_LOW_VOLTAGE]) / 10;
  if (i2cReg[I2C_LV_SHUTDOWN] == 1) {
    if (vin > vlow) {
      float vrec = ((float)i2cReg[I2C_CONF_RECOVERY_VOLTAGE]) / 10;
    14de:	70 e0       	ldi	r23, 0x00	; 0
    14e0:	90 e0       	ldi	r25, 0x00	; 0
    14e2:	80 e0       	ldi	r24, 0x00	; 0
    14e4:	7b d3       	rcall	.+1782   	; 0x1bdc <__floatunsisf>
    14e6:	20 e0       	ldi	r18, 0x00	; 0
    14e8:	30 e0       	ldi	r19, 0x00	; 0
    14ea:	40 e2       	ldi	r20, 0x20	; 32
    14ec:	51 e4       	ldi	r21, 0x41	; 65
    14ee:	dd d2       	rcall	.+1466   	; 0x1aaa <__divsf3>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:793
      if (i2cReg[I2C_CONF_RECOVERY_VOLTAGE] == 255 || vin > vrec) {
    14f0:	a3 01       	movw	r20, r6
    14f2:	92 01       	movw	r18, r4
    14f4:	d6 d2       	rcall	.+1452   	; 0x1aa2 <__cmpsf2>
    14f6:	88 1f       	adc	r24, r24
    14f8:	88 27       	eor	r24, r24
    14fa:	88 1f       	adc	r24, r24
    14fc:	f2 ce       	rjmp	.-540    	; 0x12e2 <__vector_4+0x2a0>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:798
        return true;
      }
    }
  } else {
    if (vin > vlow || i2cReg[I2C_CONF_LOW_VOLTAGE] == 255) {
    14fe:	92 01       	movw	r18, r4
    1500:	d0 d2       	rcall	.+1440   	; 0x1aa2 <__cmpsf2>
    1502:	87 fd       	sbrc	r24, 7
    1504:	ed ce       	rjmp	.-550    	; 0x12e0 <__vector_4+0x29e>
    1506:	80 91 4f 01 	lds	r24, 0x014F	; 0x80014f <i2cReg+0x13>
    150a:	8f 3f       	cpi	r24, 0xFF	; 255
    150c:	09 f4       	brne	.+2      	; 0x1510 <__vector_4+0x4ce>
    150e:	e8 ce       	rjmp	.-560    	; 0x12e0 <__vector_4+0x29e>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:802
      return true;
    } else {
      // this will update the I2C_LV_SHUTDOWN flag when Vin drop under Vlow after shutdown
      updateRegister(I2C_LV_SHUTDOWN, 1);
    1510:	61 e0       	ldi	r22, 0x01	; 1
    1512:	88 e0       	ldi	r24, 0x08	; 8
    1514:	c1 d7       	rcall	.+3970   	; 0x2498 <__TEXT_REGION_LENGTH__+0x498>
__vector_4():
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:805
    }
  }
  return false;
    1516:	80 e0       	ldi	r24, 0x00	; 0
    1518:	e4 ce       	rjmp	.-568    	; 0x12e2 <__vector_4+0x2a0>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:834
  date = bcd2dec(i2cReg[I2C_CONF_DAY_ALARM2]);
  long alarm2_ts = getTimestamp(date, hours, minutes, seconds);

  boolean canTrigger = canTriggerAlarm();
  boolean alarm1HasTriggered = (alarm1_ts == 0 || i2cReg[I2C_ALARM1_TRIGGERED] == 1);
  boolean alarm2HasTriggered = (alarm2_ts == 0 || i2cReg[I2C_ALARM2_TRIGGERED] == 1);
    151a:	21 e0       	ldi	r18, 0x01	; 1
    151c:	fd ce       	rjmp	.-518    	; 0x1318 <__vector_4+0x2d6>
processAlarmIfNeeded():
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:847
    if (!powerIsOn) {
      updateRegister(I2C_ACTION_REASON, REASON_ALARM1);
      emulateButtonClick();
    } else {
      // power is not cut yet, will power on later if alarm1 delay is allowed
      if ((i2cReg[I2C_CONF_MISC] & 0x01) == 0) {
    151e:	80 91 6c 01 	lds	r24, 0x016C	; 0x80016c <i2cReg+0x30>
    1522:	80 fd       	sbrc	r24, 0
    1524:	20 cf       	rjmp	.-448    	; 0x1366 <__vector_4+0x324>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:848
        alarm1Delayed = 1;
    1526:	81 e0       	ldi	r24, 0x01	; 1
    1528:	80 93 2d 01 	sts	0x012D, r24	; 0x80012d <alarm1Delayed>
    152c:	1c cf       	rjmp	.-456    	; 0x1366 <__vector_4+0x324>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:851
      }
    }
  } else if (canTrigger && !alarm2HasTriggered && overdue_alarm2 >= 0 && overdue_alarm2 < 2) {  // Alarm 2: shutdown
    152e:	21 11       	cpse	r18, r1
    1530:	78 c0       	rjmp	.+240    	; 0x1622 <__vector_4+0x5e0>
    1532:	f7 fe       	sbrs	r15, 7
    1534:	54 c0       	rjmp	.+168    	; 0x15de <__vector_4+0x59c>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:860
      updateRegister(I2C_ACTION_REASON, REASON_ALARM2);
      emulateButtonClick();
      turningOff = true;
      systemIsUp = false;
    }
  } else if (!alarm1HasTriggered && overdue_alarm1 < 0 && overdue_alarm1 >= -2) {
    1536:	77 ff       	sbrs	r23, 7
    1538:	17 c0       	rjmp	.+46     	; 0x1568 <__vector_4+0x526>
    153a:	4e 3f       	cpi	r20, 0xFE	; 254
    153c:	5f 4f       	sbci	r21, 0xFF	; 255
    153e:	6f 4f       	sbci	r22, 0xFF	; 255
    1540:	7f 4f       	sbci	r23, 0xFF	; 255
    1542:	94 f0       	brlt	.+36     	; 0x1568 <__vector_4+0x526>
    1544:	09 c0       	rjmp	.+18     	; 0x1558 <__vector_4+0x516>
    1546:	91 11       	cpse	r25, r1
    1548:	0b c0       	rjmp	.+22     	; 0x1560 <__vector_4+0x51e>
    154a:	77 ff       	sbrs	r23, 7
    154c:	09 c0       	rjmp	.+18     	; 0x1560 <__vector_4+0x51e>
    154e:	4e 3f       	cpi	r20, 0xFE	; 254
    1550:	5f 4f       	sbci	r21, 0xFF	; 255
    1552:	6f 4f       	sbci	r22, 0xFF	; 255
    1554:	7f 4f       	sbci	r23, 0xFF	; 255
    1556:	24 f0       	brlt	.+8      	; 0x1560 <__vector_4+0x51e>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:861
    reset_rtc_alarm();
    1558:	3b dc       	rcall	.-1930   	; 0xdd0 <reset_rtc_alarm()>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:862
    copyAlarm(I2C_CONF_SECOND_ALARM1);
    155a:	8b e1       	ldi	r24, 0x1B	; 27
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:865
  } else if (!alarm2HasTriggered && overdue_alarm2 < 0 && overdue_alarm2 >= -2) {
    reset_rtc_alarm();
    copyAlarm(I2C_CONF_SECOND_ALARM2);
    155c:	25 dc       	rcall	.-1974   	; 0xda8 <copyAlarm(unsigned char)>
    155e:	03 cf       	rjmp	.-506    	; 0x1366 <__vector_4+0x324>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:863
      systemIsUp = false;
    }
  } else if (!alarm1HasTriggered && overdue_alarm1 < 0 && overdue_alarm1 >= -2) {
    reset_rtc_alarm();
    copyAlarm(I2C_CONF_SECOND_ALARM1);
  } else if (!alarm2HasTriggered && overdue_alarm2 < 0 && overdue_alarm2 >= -2) {
    1560:	21 11       	cpse	r18, r1
    1562:	01 cf       	rjmp	.-510    	; 0x1366 <__vector_4+0x324>
    1564:	f7 fe       	sbrs	r15, 7
    1566:	ff ce       	rjmp	.-514    	; 0x1366 <__vector_4+0x324>
    1568:	9e ef       	ldi	r25, 0xFE	; 254
    156a:	c9 16       	cp	r12, r25
    156c:	9f ef       	ldi	r25, 0xFF	; 255
    156e:	d9 06       	cpc	r13, r25
    1570:	e9 06       	cpc	r14, r25
    1572:	f9 06       	cpc	r15, r25
    1574:	0c f4       	brge	.+2      	; 0x1578 <__vector_4+0x536>
    1576:	f7 ce       	rjmp	.-530    	; 0x1366 <__vector_4+0x324>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:864
    reset_rtc_alarm();
    1578:	2b dc       	rcall	.-1962   	; 0xdd0 <reset_rtc_alarm()>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:865
    copyAlarm(I2C_CONF_SECOND_ALARM2);
    157a:	80 e2       	ldi	r24, 0x20	; 32
    157c:	ef cf       	rjmp	.-34     	; 0x155c <__vector_4+0x51a>
adjustRTCIfNeeded():
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:1007
    if (i2cReg[I2C_CONF_RTC_ENABLE_TC] == 1) {
      char t = getTemperature();
      char adj = 0;
      if (t < 26) {
        adj = (t - 26) * 0.126728111f;
      } else if (t > 32 && t <= 42) {
    157e:	8f ed       	ldi	r24, 0xDF	; 223
    1580:	86 0f       	add	r24, r22
    1582:	8a 30       	cpi	r24, 0x0A	; 10
    1584:	78 f4       	brcc	.+30     	; 0x15a4 <__vector_4+0x562>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:1008
        adj = (t - 32) * -0.092165899f;
    1586:	06 2e       	mov	r0, r22
    1588:	00 0c       	add	r0, r0
    158a:	77 0b       	sbc	r23, r23
    158c:	60 52       	subi	r22, 0x20	; 32
    158e:	71 09       	sbc	r23, r1
    1590:	07 2e       	mov	r0, r23
    1592:	00 0c       	add	r0, r0
    1594:	88 0b       	sbc	r24, r24
    1596:	99 0b       	sbc	r25, r25
    1598:	23 d3       	rcall	.+1606   	; 0x1be0 <__floatsisf>
    159a:	2a e7       	ldi	r18, 0x7A	; 122
    159c:	31 ec       	ldi	r19, 0xC1	; 193
    159e:	4c eb       	ldi	r20, 0xBC	; 188
    15a0:	5d eb       	ldi	r21, 0xBD	; 189
    15a2:	07 cf       	rjmp	.-498    	; 0x13b2 <__vector_4+0x370>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:1009
      } else if (t > 42) {
    15a4:	6b 32       	cpi	r22, 0x2B	; 43
    15a6:	ac f0       	brlt	.+42     	; 0x15d2 <__vector_4+0x590>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:1010
        adj = -0.921658986f + (t - 42) * -0.276497696f;
    15a8:	06 2e       	mov	r0, r22
    15aa:	00 0c       	add	r0, r0
    15ac:	77 0b       	sbc	r23, r23
    15ae:	6a 52       	subi	r22, 0x2A	; 42
    15b0:	71 09       	sbc	r23, r1
    15b2:	07 2e       	mov	r0, r23
    15b4:	00 0c       	add	r0, r0
    15b6:	88 0b       	sbc	r24, r24
    15b8:	99 0b       	sbc	r25, r25
    15ba:	12 d3       	rcall	.+1572   	; 0x1be0 <__floatsisf>
    15bc:	2b e1       	ldi	r18, 0x1B	; 27
    15be:	31 e9       	ldi	r19, 0x91	; 145
    15c0:	4d e8       	ldi	r20, 0x8D	; 141
    15c2:	5e eb       	ldi	r21, 0xBE	; 190
    15c4:	c1 d3       	rcall	.+1922   	; 0x1d48 <__mulsf3>
    15c6:	28 ed       	ldi	r18, 0xD8	; 216
    15c8:	31 ef       	ldi	r19, 0xF1	; 241
    15ca:	4b e6       	ldi	r20, 0x6B	; 107
    15cc:	5f e3       	ldi	r21, 0x3F	; 63
    15ce:	04 d2       	rcall	.+1032   	; 0x19d8 <__subsf3>
    15d0:	f1 ce       	rjmp	.-542    	; 0x13b4 <__vector_4+0x372>
__vector_4():
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:1004
  if (skipAdjustRtcCount == 255) {  // no need to adjust too frequently
    skipAdjustRtcCount = 0;
  
    if (i2cReg[I2C_CONF_RTC_ENABLE_TC] == 1) {
      char t = getTemperature();
      char adj = 0;
    15d2:	60 e0       	ldi	r22, 0x00	; 0
    15d4:	f0 ce       	rjmp	.-544    	; 0x13b6 <__vector_4+0x374>
processAlarmIfNeeded():
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:851
      // power is not cut yet, will power on later if alarm1 delay is allowed
      if ((i2cReg[I2C_CONF_MISC] & 0x01) == 0) {
        alarm1Delayed = 1;
      }
    }
  } else if (canTrigger && !alarm2HasTriggered && overdue_alarm2 >= 0 && overdue_alarm2 < 2) {  // Alarm 2: shutdown
    15d6:	21 11       	cpse	r18, r1
    15d8:	c6 ce       	rjmp	.-628    	; 0x1366 <__vector_4+0x324>
    15da:	f7 fc       	sbrc	r15, 7
    15dc:	c5 cf       	rjmp	.-118    	; 0x1568 <__vector_4+0x526>
    15de:	32 e0       	ldi	r19, 0x02	; 2
    15e0:	c3 16       	cp	r12, r19
    15e2:	d1 04       	cpc	r13, r1
    15e4:	e1 04       	cpc	r14, r1
    15e6:	f1 04       	cpc	r15, r1
    15e8:	cc f4       	brge	.+50     	; 0x161c <__vector_4+0x5da>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:852
    updateRegister(I2C_ALARM2_TRIGGERED, 1);
    15ea:	61 e0       	ldi	r22, 0x01	; 1
    15ec:	8a e0       	ldi	r24, 0x0A	; 10
    15ee:	54 d7       	rcall	.+3752   	; 0x2498 <__TEXT_REGION_LENGTH__+0x498>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:853
    updateRegister(I2C_CONF_FLAG_ALARM2, 1);
    15f0:	61 e0       	ldi	r22, 0x01	; 1
    15f2:	88 e2       	ldi	r24, 0x28	; 40
    15f4:	51 d7       	rcall	.+3746   	; 0x2498 <__TEXT_REGION_LENGTH__+0x498>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:854
    if (powerIsOn && !turningOff) {
    15f6:	80 91 38 01 	lds	r24, 0x0138	; 0x800138 <powerIsOn>
    15fa:	88 23       	and	r24, r24
    15fc:	09 f4       	brne	.+2      	; 0x1600 <__vector_4+0x5be>
    15fe:	b3 ce       	rjmp	.-666    	; 0x1366 <__vector_4+0x324>
    1600:	80 91 37 01 	lds	r24, 0x0137	; 0x800137 <turningOff>
    1604:	81 11       	cpse	r24, r1
    1606:	af ce       	rjmp	.-674    	; 0x1366 <__vector_4+0x324>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:855
      updateRegister(I2C_ACTION_REASON, REASON_ALARM2);
    1608:	62 e0       	ldi	r22, 0x02	; 2
    160a:	8b e0       	ldi	r24, 0x0B	; 11
    160c:	45 d7       	rcall	.+3722   	; 0x2498 <__TEXT_REGION_LENGTH__+0x498>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:856
      emulateButtonClick();
    160e:	53 d6       	rcall	.+3238   	; 0x22b6 <__TEXT_REGION_LENGTH__+0x2b6>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:857
      turningOff = true;
    1610:	81 e0       	ldi	r24, 0x01	; 1
    1612:	80 93 37 01 	sts	0x0137, r24	; 0x800137 <turningOff>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:858
      systemIsUp = false;
    1616:	10 92 3a 01 	sts	0x013A, r1	; 0x80013a <systemIsUp>
    161a:	a5 ce       	rjmp	.-694    	; 0x1366 <__vector_4+0x324>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:860
    }
  } else if (!alarm1HasTriggered && overdue_alarm1 < 0 && overdue_alarm1 >= -2) {
    161c:	91 11       	cpse	r25, r1
    161e:	a3 ce       	rjmp	.-698    	; 0x1366 <__vector_4+0x324>
    1620:	94 cf       	rjmp	.-216    	; 0x154a <__vector_4+0x508>
    1622:	77 ff       	sbrs	r23, 7
    1624:	a0 ce       	rjmp	.-704    	; 0x1366 <__vector_4+0x324>
    1626:	4e 3f       	cpi	r20, 0xFE	; 254
    1628:	5f 4f       	sbci	r21, 0xFF	; 255
    162a:	6f 4f       	sbci	r22, 0xFF	; 255
    162c:	7f 4f       	sbci	r23, 0xFF	; 255
    162e:	0c f4       	brge	.+2      	; 0x1632 <__vector_4+0x5f0>
    1630:	9a ce       	rjmp	.-716    	; 0x1366 <__vector_4+0x324>
    1632:	92 cf       	rjmp	.-220    	; 0x1558 <__vector_4+0x516>

00001634 <receiveEvent(int)>:
receiveEvent():
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:542
}


// receives a sequence of data from i2c master (master writes to this device)
void receiveEvent(int count) {
  if (TinyWireS.available()) {
    1634:	82 ea       	ldi	r24, 0xA2	; 162
    1636:	91 e0       	ldi	r25, 0x01	; 1
    1638:	c6 d6       	rcall	.+3468   	; 0x23c6 <__TEXT_REGION_LENGTH__+0x3c6>
    163a:	89 2b       	or	r24, r25
    163c:	09 f4       	brne	.+2      	; 0x1640 <receiveEvent(int)+0xc>
    163e:	76 c0       	rjmp	.+236    	; 0x172c <receiveEvent(int)+0xf8>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:543
    i2cIndex = TinyWireS.read();
    1640:	82 ea       	ldi	r24, 0xA2	; 162
    1642:	91 e0       	ldi	r25, 0x01	; 1
    1644:	a6 d6       	rcall	.+3404   	; 0x2392 <__TEXT_REGION_LENGTH__+0x392>
    1646:	80 93 2b 01 	sts	0x012B, r24	; 0x80012b <i2cIndex>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:544
    if (i2cIndex >= I2C_LM75B_TEMPERATURE && i2cIndex <= I2C_LM75B_TOS) {  // mapped to LM75B's register
    164a:	80 91 2b 01 	lds	r24, 0x012B	; 0x80012b <i2cIndex>
    164e:	82 33       	cpi	r24, 0x32	; 50
    1650:	dc f0       	brlt	.+54     	; 0x1688 <receiveEvent(int)+0x54>
    1652:	80 91 2b 01 	lds	r24, 0x012B	; 0x80012b <i2cIndex>
    1656:	86 33       	cpi	r24, 0x36	; 54
    1658:	bc f4       	brge	.+46     	; 0x1688 <receiveEvent(int)+0x54>
_ZN14SoftWireMaster17beginTransmissionEi():
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/SoftWireMaster.h:73
    // indicate that we are transmitting
    transmitting = 1;
  }

  void beginTransmission(int address) {
    beginTransmission((uint8_t)address);
    165a:	88 e4       	ldi	r24, 0x48	; 72
    165c:	74 db       	rcall	.-2328   	; 0xd46 <SoftWireMaster::beginTransmission(unsigned char) [clone .constprop.12]>
receiveEvent():
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:546
      softWireMaster.beginTransmission(ADDRESS_LM75B);
      softWireMaster.write(i2cIndex - I2C_LM75B_TEMPERATURE);
    165e:	80 91 2b 01 	lds	r24, 0x012B	; 0x80012b <i2cIndex>
    1662:	08 2e       	mov	r0, r24
    1664:	00 0c       	add	r0, r0
    1666:	99 0b       	sbc	r25, r25
    1668:	c2 97       	sbiw	r24, 0x32	; 50
    166a:	f9 da       	rcall	.-2574   	; 0xc5e <SoftWireMaster::write(int) [clone .constprop.7]>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:547
      if (i2cIndex == I2C_LM75B_CONF) {
    166c:	80 91 2b 01 	lds	r24, 0x012B	; 0x80012b <i2cIndex>
    1670:	83 33       	cpi	r24, 0x33	; 51
    1672:	99 f4       	brne	.+38     	; 0x169a <receiveEvent(int)+0x66>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:551
        softWireMaster.write(TinyWireS.read());
      } else if (i2cIndex != I2C_LM75B_TEMPERATURE) {
        softWireMaster.write(TinyWireS.read());
        softWireMaster.write(TinyWireS.read());
    1674:	82 ea       	ldi	r24, 0xA2	; 162
    1676:	91 e0       	ldi	r25, 0x01	; 1
    1678:	8c d6       	rcall	.+3352   	; 0x2392 <__TEXT_REGION_LENGTH__+0x392>
    167a:	f1 da       	rcall	.-2590   	; 0xc5e <SoftWireMaster::write(int) [clone .constprop.7]>
_ZN14SoftWireMaster15endTransmissionEh():
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/SoftWireMaster.h:80

  uint8_t endTransmission(uint8_t sendStop)
  {
    uint8_t transError = error;
    if (sendStop) {
      i2c_stop_();
    167c:	f4 da       	rcall	.-2584   	; 0xc66 <ass_i2c_stop_>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/SoftWireMaster.h:81
      transmitting = 0;
    167e:	10 92 de 01 	sts	0x01DE, r1	; 0x8001de <softWireMaster+0x2e>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/SoftWireMaster.h:83
    }
    error = 0;
    1682:	10 92 df 01 	sts	0x01DF, r1	; 0x8001df <softWireMaster+0x2f>
    1686:	08 95       	ret
receiveEvent():
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:554
      }
      softWireMaster.endTransmission();    
    } else if (i2cIndex >= I2C_RTC_CTRL1 && i2cIndex <= I2C_RTC_TIMER_MODE) {  // mapped to RTC's register
    1688:	80 91 2b 01 	lds	r24, 0x012B	; 0x80012b <i2cIndex>
    168c:	86 33       	cpi	r24, 0x36	; 54
    168e:	74 f4       	brge	.+28     	; 0x16ac <receiveEvent(int)+0x78>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:559
      softWireMaster.beginTransmission(ADDRESS_RTC);
      softWireMaster.write(i2cIndex - I2C_RTC_CTRL1);
      softWireMaster.write(TinyWireS.read());
      softWireMaster.endTransmission();
    } else if (i2cIndex >= I2C_CONF_ADDRESS && i2cIndex < I2C_REG_COUNT) {  // non-virtual, writable i2c register
    1690:	80 91 2b 01 	lds	r24, 0x012B	; 0x80012b <i2cIndex>
    1694:	80 31       	cpi	r24, 0x10	; 16
    1696:	bc f4       	brge	.+46     	; 0x16c6 <receiveEvent(int)+0x92>
    1698:	08 95       	ret
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:549
    if (i2cIndex >= I2C_LM75B_TEMPERATURE && i2cIndex <= I2C_LM75B_TOS) {  // mapped to LM75B's register
      softWireMaster.beginTransmission(ADDRESS_LM75B);
      softWireMaster.write(i2cIndex - I2C_LM75B_TEMPERATURE);
      if (i2cIndex == I2C_LM75B_CONF) {
        softWireMaster.write(TinyWireS.read());
      } else if (i2cIndex != I2C_LM75B_TEMPERATURE) {
    169a:	80 91 2b 01 	lds	r24, 0x012B	; 0x80012b <i2cIndex>
    169e:	82 33       	cpi	r24, 0x32	; 50
    16a0:	69 f3       	breq	.-38     	; 0x167c <receiveEvent(int)+0x48>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:550
        softWireMaster.write(TinyWireS.read());
    16a2:	82 ea       	ldi	r24, 0xA2	; 162
    16a4:	91 e0       	ldi	r25, 0x01	; 1
    16a6:	75 d6       	rcall	.+3306   	; 0x2392 <__TEXT_REGION_LENGTH__+0x392>
    16a8:	da da       	rcall	.-2636   	; 0xc5e <SoftWireMaster::write(int) [clone .constprop.7]>
    16aa:	e4 cf       	rjmp	.-56     	; 0x1674 <receiveEvent(int)+0x40>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:554
        softWireMaster.write(TinyWireS.read());
      }
      softWireMaster.endTransmission();    
    } else if (i2cIndex >= I2C_RTC_CTRL1 && i2cIndex <= I2C_RTC_TIMER_MODE) {  // mapped to RTC's register
    16ac:	80 91 2b 01 	lds	r24, 0x012B	; 0x80012b <i2cIndex>
    16b0:	88 34       	cpi	r24, 0x48	; 72
    16b2:	74 f7       	brge	.-36     	; 0x1690 <receiveEvent(int)+0x5c>
_ZN14SoftWireMaster17beginTransmissionEi():
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/SoftWireMaster.h:73
    // indicate that we are transmitting
    transmitting = 1;
  }

  void beginTransmission(int address) {
    beginTransmission((uint8_t)address);
    16b4:	81 e5       	ldi	r24, 0x51	; 81
    16b6:	47 db       	rcall	.-2418   	; 0xd46 <SoftWireMaster::beginTransmission(unsigned char) [clone .constprop.12]>
receiveEvent():
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:556
      softWireMaster.beginTransmission(ADDRESS_RTC);
      softWireMaster.write(i2cIndex - I2C_RTC_CTRL1);
    16b8:	80 91 2b 01 	lds	r24, 0x012B	; 0x80012b <i2cIndex>
    16bc:	08 2e       	mov	r0, r24
    16be:	00 0c       	add	r0, r0
    16c0:	99 0b       	sbc	r25, r25
    16c2:	c6 97       	sbiw	r24, 0x36	; 54
    16c4:	f1 cf       	rjmp	.-30     	; 0x16a8 <receiveEvent(int)+0x74>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:559
      softWireMaster.write(TinyWireS.read());
      softWireMaster.endTransmission();
    } else if (i2cIndex >= I2C_CONF_ADDRESS && i2cIndex < I2C_REG_COUNT) {  // non-virtual, writable i2c register
    16c6:	80 91 2b 01 	lds	r24, 0x012B	; 0x80012b <i2cIndex>
    16ca:	82 33       	cpi	r24, 0x32	; 50
    16cc:	7c f5       	brge	.+94     	; 0x172c <receiveEvent(int)+0xf8>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:560
      if (TinyWireS.available()) {
    16ce:	82 ea       	ldi	r24, 0xA2	; 162
    16d0:	91 e0       	ldi	r25, 0x01	; 1
    16d2:	79 d6       	rcall	.+3314   	; 0x23c6 <__TEXT_REGION_LENGTH__+0x3c6>
    16d4:	89 2b       	or	r24, r25
    16d6:	51 f1       	breq	.+84     	; 0x172c <receiveEvent(int)+0xf8>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:562
        // clear alarm triggered flag if alam is changed
        if (i2cIndex >= I2C_CONF_SECOND_ALARM1 && i2cIndex <= I2C_CONF_WEEKDAY_ALARM1) {
    16d8:	80 91 2b 01 	lds	r24, 0x012B	; 0x80012b <i2cIndex>
    16dc:	8b 31       	cpi	r24, 0x1B	; 27
    16de:	3c f0       	brlt	.+14     	; 0x16ee <receiveEvent(int)+0xba>
    16e0:	80 91 2b 01 	lds	r24, 0x012B	; 0x80012b <i2cIndex>
    16e4:	80 32       	cpi	r24, 0x20	; 32
    16e6:	1c f4       	brge	.+6      	; 0x16ee <receiveEvent(int)+0xba>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:563
          updateRegister(I2C_ALARM1_TRIGGERED, 0);
    16e8:	60 e0       	ldi	r22, 0x00	; 0
    16ea:	89 e0       	ldi	r24, 0x09	; 9
    16ec:	d5 d6       	rcall	.+3498   	; 0x2498 <__TEXT_REGION_LENGTH__+0x498>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:565
        }
        if (i2cIndex >= I2C_CONF_SECOND_ALARM2 && i2cIndex <= I2C_CONF_WEEKDAY_ALARM2) {
    16ee:	80 91 2b 01 	lds	r24, 0x012B	; 0x80012b <i2cIndex>
    16f2:	80 32       	cpi	r24, 0x20	; 32
    16f4:	3c f0       	brlt	.+14     	; 0x1704 <receiveEvent(int)+0xd0>
    16f6:	80 91 2b 01 	lds	r24, 0x012B	; 0x80012b <i2cIndex>
    16fa:	85 32       	cpi	r24, 0x25	; 37
    16fc:	1c f4       	brge	.+6      	; 0x1704 <receiveEvent(int)+0xd0>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:566
          updateRegister(I2C_ALARM2_TRIGGERED, 0);
    16fe:	60 e0       	ldi	r22, 0x00	; 0
    1700:	8a e0       	ldi	r24, 0x0A	; 10
    1702:	ca d6       	rcall	.+3476   	; 0x2498 <__TEXT_REGION_LENGTH__+0x498>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:570
        }

        // update the register value
        updateRegister(i2cIndex, TinyWireS.read());
    1704:	82 ea       	ldi	r24, 0xA2	; 162
    1706:	91 e0       	ldi	r25, 0x01	; 1
    1708:	44 d6       	rcall	.+3208   	; 0x2392 <__TEXT_REGION_LENGTH__+0x392>
    170a:	68 2f       	mov	r22, r24
    170c:	80 91 2b 01 	lds	r24, 0x012B	; 0x80012b <i2cIndex>
    1710:	c3 d6       	rcall	.+3462   	; 0x2498 <__TEXT_REGION_LENGTH__+0x498>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:573

        // if RTC offset value is changed, immediately update to RTC
        if (i2cIndex == I2C_CONF_RTC_OFFSET) {
    1712:	80 91 2b 01 	lds	r24, 0x012B	; 0x80012b <i2cIndex>
    1716:	85 32       	cpi	r24, 0x25	; 37
    1718:	49 f4       	brne	.+18     	; 0x172c <receiveEvent(int)+0xf8>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:574
          updateRegister(I2C_RTC_OFFSET, i2cReg[I2C_CONF_RTC_OFFSET]);
    171a:	80 91 61 01 	lds	r24, 0x0161	; 0x800161 <i2cReg+0x25>
updateRegister():
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:758
}


// update I2C register and save to EEPROM
void updateRegister(byte index, byte value) {
  i2cReg[index] = value;
    171e:	80 93 74 01 	sts	0x0174, r24	; 0x800174 <i2c_tinyS::i2cData+0x5>
receiveEvent():
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:575
        updateRegister(i2cIndex, TinyWireS.read());

        // if RTC offset value is changed, immediately update to RTC
        if (i2cIndex == I2C_CONF_RTC_OFFSET) {
          updateRegister(I2C_RTC_OFFSET, i2cReg[I2C_CONF_RTC_OFFSET]);
          writeToDevice(ADDRESS_RTC, I2C_RTC_OFFSET - I2C_RTC_CTRL1, &i2cReg[I2C_CONF_RTC_OFFSET], 1);
    1722:	41 e6       	ldi	r20, 0x61	; 97
    1724:	51 e0       	ldi	r21, 0x01	; 1
    1726:	62 e0       	ldi	r22, 0x02	; 2
    1728:	81 e5       	ldi	r24, 0x51	; 81
    172a:	27 cb       	rjmp	.-2482   	; 0xd7a <writeToDevice(unsigned char, unsigned char, unsigned char*, unsigned char) [clone .constprop.3]>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:580
        }
      }
    }
  }
}
    172c:	08 95       	ret

0000172e <i2c_init_()>:
_Z9i2c_init_v():
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/SoftIICMaster.h:283
     " ret "
     : :
       [SCLDDR] "I"  (SCL_DDR), [SCLPIN] "I" (SCL_PIN),
       [SCLIN] "I" (SCL_IN), [SCLOUT] "I" (SCL_OUT),
       [SDADDR] "I"  (SDA_DDR), [SDAPIN] "I" (SDA_PIN),
       [SDAIN] "I" (SDA_IN), [SDAOUT] "I" (SDA_OUT));
    172e:	ba 98       	cbi	0x17, 2	; 23
    1730:	d0 98       	cbi	0x1a, 0	; 26
    1732:	c2 98       	cbi	0x18, 2	; 24
    1734:	d8 98       	cbi	0x1b, 0	; 27
    1736:	88 27       	eor	r24, r24
    1738:	99 27       	eor	r25, r25
    173a:	b2 9b       	sbis	0x16, 2	; 22
    173c:	08 95       	ret
    173e:	c8 9b       	sbis	0x19, 0	; 25
    1740:	08 95       	ret
    1742:	81 e0       	ldi	r24, 0x01	; 1
    1744:	08 95       	ret
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/SoftIICMaster.h:285
  return true;
}
    1746:	81 e0       	ldi	r24, 0x01	; 1
    1748:	08 95       	ret

0000174a <ass_i2c_wait_scl_high_>:
ass_i2c_wait_scl_high_():
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/SoftIICMaster.h:226
    ("_Li2c_wait_stretch: \n\t"
     " sbis %[SCLIN],%[SCLPIN]  ;wait for SCL high \n\t"
     " rjmp _Li2c_wait_stretch \n\t"
     " cln                              ;signal: no timeout \n\t"
     " ret "
     : : [SCLIN] "I" (SCL_IN), [SCLPIN] "I" (SCL_PIN));
    174a:	c8 9b       	sbis	0x19, 0	; 25
    174c:	fe cf       	rjmp	.-4      	; 0x174a <ass_i2c_wait_scl_high_>
    174e:	a8 94       	cln
    1750:	08 95       	ret
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/SoftIICMaster.h:261
      : : [SCLIN] "I" (SCL_IN), [SCLPIN] "I" (SCL_PIN),
  [HISTRETCH] "M" (I2C_MAX_STRETCH>>8),
  [LOSTRETCH] "M" (I2C_MAX_STRETCH&0xFF)
      : "r26", "r27");
#endif
}
    1752:	08 95       	ret

00001754 <ass_i2c_delay_half_>:
ass_i2c_delay_half_():
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/SoftIICMaster.h:212
     " ldi      r25, %[DELAY]           ;load delay constant   ;; 4C \n\t"
     "_Lidelay_: \n\t"
     " dec r25                          ;decrement counter     ;; 4C+xC \n\t"
     " brne _Lidelay_                                           ;;5C+(x-1)2C+xC\n\t"
     " ret                                                     ;; 9C+(x-1)2C+xC = 7C+xC"
     : : [DELAY] "M" I2C_DELAY_COUNTER : "r25");
    1754:	98 e0       	ldi	r25, 0x08	; 8

00001756 <_Lidelay_>:
    1756:	9a 95       	dec	r25
    1758:	f1 f7       	brne	.-4      	; 0x1756 <_Lidelay_>
    175a:	08 95       	ret
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/SoftIICMaster.h:215
  // 7 cycles + 3 times x cycles
#endif
}
    175c:	08 95       	ret

0000175e <global constructors keyed to 65535_0_WittyPi4.ino.cpp.o.1915>:
_GLOBAL__I_65535_0_WittyPi4.ino.cpp.o.1915():
    175e:	e2 ea       	ldi	r30, 0xA2	; 162
    1760:	f1 e0       	ldi	r31, 0x01	; 1
    1762:	13 82       	std	Z+3, r1	; 0x03
    1764:	12 82       	std	Z+2, r1	; 0x02
    1766:	88 ee       	ldi	r24, 0xE8	; 232
    1768:	93 e0       	ldi	r25, 0x03	; 3
    176a:	a0 e0       	ldi	r26, 0x00	; 0
    176c:	b0 e0       	ldi	r27, 0x00	; 0
    176e:	84 83       	std	Z+4, r24	; 0x04
    1770:	95 83       	std	Z+5, r25	; 0x05
    1772:	a6 83       	std	Z+6, r26	; 0x06
    1774:	b7 83       	std	Z+7, r27	; 0x07
    1776:	25 e0       	ldi	r18, 0x05	; 5
    1778:	31 e0       	ldi	r19, 0x01	; 1
    177a:	31 83       	std	Z+1, r19	; 0x01
    177c:	20 83       	st	Z, r18
    177e:	2f e6       	ldi	r18, 0x6F	; 111
    1780:	31 e0       	ldi	r19, 0x01	; 1
    1782:	35 87       	std	Z+13, r19	; 0x0d
    1784:	24 87       	std	Z+12, r18	; 0x0c
    1786:	e0 eb       	ldi	r30, 0xB0	; 176
    1788:	f1 e0       	ldi	r31, 0x01	; 1
    178a:	13 82       	std	Z+3, r1	; 0x03
    178c:	12 82       	std	Z+2, r1	; 0x02
    178e:	84 83       	std	Z+4, r24	; 0x04
    1790:	95 83       	std	Z+5, r25	; 0x05
    1792:	a6 83       	std	Z+6, r26	; 0x06
    1794:	b7 83       	std	Z+7, r27	; 0x07
    1796:	85 e1       	ldi	r24, 0x15	; 21
    1798:	91 e0       	ldi	r25, 0x01	; 1
    179a:	91 83       	std	Z+1, r25	; 0x01
    179c:	80 83       	st	Z, r24
    179e:	08 95       	ret

000017a0 <main>:
init():
/Users/ziyue/Library/Arduino15/packages/ATTinyCore/hardware/avr/1.5.2/cores/tinymodern/wiring.c:572
  #else
  CLKPR=1<<CLKPCE; //enable change of protected register
  #endif
  CLKPR=1; //prescale by 2 for 4MHz
  #endif
  sei();
    17a0:	78 94       	sei
Timer0_SetWaveformGenerationMode():
/Users/ziyue/Library/Arduino15/packages/ATTinyCore/hardware/avr/1.5.2/cores/tinymodern/core_timers.h:140
}
timer0_wgm_t;

__attribute__((always_inline)) static inline void Timer0_SetWaveformGenerationMode( timer0_wgm_t wgm )
{
  TCCR0A = (TCCR0A & ~MASK2(WGM01,WGM00)) | (((wgm & B011) >> 0) << WGM00);
    17a2:	80 b7       	in	r24, 0x30	; 48
    17a4:	83 60       	ori	r24, 0x03	; 3
    17a6:	80 bf       	out	0x30, r24	; 48
/Users/ziyue/Library/Arduino15/packages/ATTinyCore/hardware/avr/1.5.2/cores/tinymodern/core_timers.h:141
  TCCR0B = (TCCR0B & ~MASK1(WGM02))       | (((wgm & B100) >> 2) << WGM02);
    17a8:	83 b7       	in	r24, 0x33	; 51
    17aa:	87 7f       	andi	r24, 0xF7	; 247
    17ac:	83 bf       	out	0x33, r24	; 51
Timer0_ClockSelect():
/Users/ziyue/Library/Arduino15/packages/ATTinyCore/hardware/avr/1.5.2/cores/tinymodern/core_timers.h:122
}
timer0_cs_t;

__attribute__((always_inline)) static inline void Timer0_ClockSelect( timer0_cs_t cs )
{
  TCCR0B = (TCCR0B & ~MASK3(CS02,CS01,CS00)) | (cs << CS00);
    17ae:	83 b7       	in	r24, 0x33	; 51
    17b0:	88 7f       	andi	r24, 0xF8	; 248
    17b2:	83 60       	ori	r24, 0x03	; 3
    17b4:	83 bf       	out	0x33, r24	; 51
Timer2_ClockSelect():
/Users/ziyue/Library/Arduino15/packages/ATTinyCore/hardware/avr/1.5.2/cores/tinymodern/core_timers.h:470
}
timer2_cs_t;

__attribute__((always_inline)) static inline void Timer2_ClockSelect( timer2_cs_t cs )
{
  TCCR2B = (TCCR2B & ~MASK3(CS22,CS21,CS20)) | (cs << CS20);
    17b6:	80 91 c9 00 	lds	r24, 0x00C9	; 0x8000c9 <__DATA_REGION_ORIGIN__+0x69>
    17ba:	88 7f       	andi	r24, 0xF8	; 248
    17bc:	80 93 c9 00 	sts	0x00C9, r24	; 0x8000c9 <__DATA_REGION_ORIGIN__+0x69>
Timer2_SetWaveformGenerationMode():
/Users/ziyue/Library/Arduino15/packages/ATTinyCore/hardware/avr/1.5.2/cores/tinymodern/core_timers.h:496
}
timer2_wgm_t;

__attribute__((always_inline)) static inline void Timer2_SetWaveformGenerationMode( timer2_wgm_t wgm )
{
  TCCR2A = (TCCR2A & ~MASK2(WGM21,WGM20)) | (((wgm & B0011) >> 0) << WGM20);
    17c0:	80 91 ca 00 	lds	r24, 0x00CA	; 0x8000ca <__DATA_REGION_ORIGIN__+0x6a>
    17c4:	8c 7f       	andi	r24, 0xFC	; 252
    17c6:	81 60       	ori	r24, 0x01	; 1
    17c8:	80 93 ca 00 	sts	0x00CA, r24	; 0x8000ca <__DATA_REGION_ORIGIN__+0x6a>
/Users/ziyue/Library/Arduino15/packages/ATTinyCore/hardware/avr/1.5.2/cores/tinymodern/core_timers.h:497
  TCCR2B = (TCCR2B & ~MASK2(WGM23,WGM22)) | (((wgm & B1100) >> 2) << WGM22);
    17cc:	80 91 c9 00 	lds	r24, 0x00C9	; 0x8000c9 <__DATA_REGION_ORIGIN__+0x69>
    17d0:	87 7e       	andi	r24, 0xE7	; 231
    17d2:	80 93 c9 00 	sts	0x00C9, r24	; 0x8000c9 <__DATA_REGION_ORIGIN__+0x69>
Timer2_ClockSelect():
/Users/ziyue/Library/Arduino15/packages/ATTinyCore/hardware/avr/1.5.2/cores/tinymodern/core_timers.h:470
}
timer2_cs_t;

__attribute__((always_inline)) static inline void Timer2_ClockSelect( timer2_cs_t cs )
{
  TCCR2B = (TCCR2B & ~MASK3(CS22,CS21,CS20)) | (cs << CS20);
    17d6:	80 91 c9 00 	lds	r24, 0x00C9	; 0x8000c9 <__DATA_REGION_ORIGIN__+0x69>
    17da:	88 7f       	andi	r24, 0xF8	; 248
    17dc:	83 60       	ori	r24, 0x03	; 3
    17de:	80 93 c9 00 	sts	0x00C9, r24	; 0x8000c9 <__DATA_REGION_ORIGIN__+0x69>
Timer1_ClockSelect():
/Users/ziyue/Library/Arduino15/packages/ATTinyCore/hardware/avr/1.5.2/cores/tinymodern/core_timers.h:282
}
timer1_cs_t;

__attribute__((always_inline)) static inline void Timer1_ClockSelect( timer1_cs_t cs )
{
  TCCR1B = (TCCR1B & ~MASK3(CS12,CS11,CS10)) | (cs << CS10);
    17e2:	8e b5       	in	r24, 0x2e	; 46
    17e4:	88 7f       	andi	r24, 0xF8	; 248
    17e6:	8e bd       	out	0x2e, r24	; 46
Timer1_SetWaveformGenerationMode():
/Users/ziyue/Library/Arduino15/packages/ATTinyCore/hardware/avr/1.5.2/cores/tinymodern/core_timers.h:308
}
timer1_wgm_t;

__attribute__((always_inline)) static inline void Timer1_SetWaveformGenerationMode( timer1_wgm_t wgm )
{
  TCCR1A = (TCCR1A & ~MASK2(WGM11,WGM10)) | (((wgm & B0011) >> 0) << WGM10);
    17e8:	8f b5       	in	r24, 0x2f	; 47
    17ea:	8c 7f       	andi	r24, 0xFC	; 252
    17ec:	81 60       	ori	r24, 0x01	; 1
    17ee:	8f bd       	out	0x2f, r24	; 47
/Users/ziyue/Library/Arduino15/packages/ATTinyCore/hardware/avr/1.5.2/cores/tinymodern/core_timers.h:309
  TCCR1B = (TCCR1B & ~MASK2(WGM13,WGM12)) | (((wgm & B1100) >> 2) << WGM12);
    17f0:	8e b5       	in	r24, 0x2e	; 46
    17f2:	87 7e       	andi	r24, 0xE7	; 231
    17f4:	8e bd       	out	0x2e, r24	; 46
Timer1_ClockSelect():
/Users/ziyue/Library/Arduino15/packages/ATTinyCore/hardware/avr/1.5.2/cores/tinymodern/core_timers.h:282
}
timer1_cs_t;

__attribute__((always_inline)) static inline void Timer1_ClockSelect( timer1_cs_t cs )
{
  TCCR1B = (TCCR1B & ~MASK3(CS12,CS11,CS10)) | (cs << CS10);
    17f6:	8e b5       	in	r24, 0x2e	; 46
    17f8:	88 7f       	andi	r24, 0xF8	; 248
    17fa:	83 60       	ori	r24, 0x03	; 3
    17fc:	8e bd       	out	0x2e, r24	; 46
initTimer841():
/Users/ziyue/Library/Arduino15/packages/ATTinyCore/hardware/avr/1.5.2/cores/tinymodern/wiring.c:468
  Timer1_SetWaveformGenerationMode(1);
  Timer1_ClockSelect(3);

  #endif

  TOCPMSA0=0b00010000;
    17fe:	80 e1       	ldi	r24, 0x10	; 16
    1800:	80 93 67 00 	sts	0x0067, r24	; 0x800067 <__DATA_REGION_ORIGIN__+0x7>
/Users/ziyue/Library/Arduino15/packages/ATTinyCore/hardware/avr/1.5.2/cores/tinymodern/wiring.c:469
  TOCPMSA1=0b10100100;
    1804:	84 ea       	ldi	r24, 0xA4	; 164
    1806:	80 93 68 00 	sts	0x0068, r24	; 0x800068 <__DATA_REGION_ORIGIN__+0x8>
/Users/ziyue/Library/Arduino15/packages/ATTinyCore/hardware/avr/1.5.2/cores/tinymodern/wiring.c:470
  TOCPMCOE=0b11111100;
    180a:	8c ef       	ldi	r24, 0xFC	; 252
    180c:	80 93 66 00 	sts	0x0066, r24	; 0x800066 <__DATA_REGION_ORIGIN__+0x6>
ADC_PrescalerSelect():
/Users/ziyue/Library/Arduino15/packages/ATTinyCore/hardware/avr/1.5.2/cores/tinymodern/core_adc.h:89
}
adc_ps_t;

__attribute__((always_inline)) static inline void ADC_PrescalerSelect( adc_ps_t ps )
{
  ADCSRA = (ADCSRA & ~MASK3(ADPS2,ADPS1,ADPS0)) | (ps << ADPS0);
    1810:	85 b1       	in	r24, 0x05	; 5
    1812:	88 7f       	andi	r24, 0xF8	; 248
    1814:	86 60       	ori	r24, 0x06	; 6
    1816:	85 b9       	out	0x05, r24	; 5
ADC_Enable():
/Users/ziyue/Library/Arduino15/packages/ATTinyCore/hardware/avr/1.5.2/cores/tinymodern/core_adc.h:94
}

__attribute__((always_inline)) static inline void ADC_Enable( void )
{
  ADCSRA |= MASK1( ADEN );
    1818:	2f 9a       	sbi	0x05, 7	; 5
begin():
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/SoftWireMaster.h:48
public:
  SoftWireMaster(void) {
  }

  void begin(void) {
    rxBufferIndex = 0;
    181a:	10 92 dc 01 	sts	0x01DC, r1	; 0x8001dc <softWireMaster+0x2c>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/SoftWireMaster.h:49
    rxBufferLength = 0;
    181e:	10 92 dd 01 	sts	0x01DD, r1	; 0x8001dd <softWireMaster+0x2d>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/SoftWireMaster.h:50
    error = 0;
    1822:	10 92 df 01 	sts	0x01DF, r1	; 0x8001df <softWireMaster+0x2f>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/SoftWireMaster.h:51
    transmitting = false;
    1826:	10 92 de 01 	sts	0x01DE, r1	; 0x8001de <softWireMaster+0x2e>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/SoftWireMaster.h:53

    i2c_init_();
    182a:	81 df       	rcall	.-254    	; 0x172e <i2c_init_()>
setup():
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:201
void setup() {
  // initialize software I2C master
  softWireMaster.begin();

  // initialize pin states and make sure power is cut
  pinMode(PIN_SYS_UP, INPUT);
    182c:	60 e0       	ldi	r22, 0x00	; 0
    182e:	80 e0       	ldi	r24, 0x00	; 0
    1830:	78 d4       	rcall	.+2288   	; 0x2122 <__TEXT_REGION_LENGTH__+0x122>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:202
  pinMode(PIN_BUTTON, INPUT_PULLUP);
    1832:	62 e0       	ldi	r22, 0x02	; 2
    1834:	81 e0       	ldi	r24, 0x01	; 1
    1836:	75 d4       	rcall	.+2282   	; 0x2122 <__TEXT_REGION_LENGTH__+0x122>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:203
  pinMode(PIN_CTRL, OUTPUT);
    1838:	61 e0       	ldi	r22, 0x01	; 1
    183a:	83 e0       	ldi	r24, 0x03	; 3
    183c:	72 d4       	rcall	.+2276   	; 0x2122 <__TEXT_REGION_LENGTH__+0x122>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:204
  pinMode(PIN_TX_UP, INPUT);
    183e:	60 e0       	ldi	r22, 0x00	; 0
    1840:	85 e0       	ldi	r24, 0x05	; 5
    1842:	6f d4       	rcall	.+2270   	; 0x2122 <__TEXT_REGION_LENGTH__+0x122>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:205
  pinMode(PIN_VIN, INPUT);
    1844:	60 e0       	ldi	r22, 0x00	; 0
    1846:	81 e4       	ldi	r24, 0x41	; 65
    1848:	6c d4       	rcall	.+2264   	; 0x2122 <__TEXT_REGION_LENGTH__+0x122>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:206
  pinMode(PIN_VOUT, INPUT);
    184a:	60 e0       	ldi	r22, 0x00	; 0
    184c:	82 e4       	ldi	r24, 0x42	; 66
    184e:	69 d4       	rcall	.+2258   	; 0x2122 <__TEXT_REGION_LENGTH__+0x122>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:207
  pinMode(PIN_VK, INPUT);
    1850:	60 e0       	ldi	r22, 0x00	; 0
    1852:	83 e4       	ldi	r24, 0x43	; 67
    1854:	66 d4       	rcall	.+2252   	; 0x2122 <__TEXT_REGION_LENGTH__+0x122>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:208
  pinMode(PIN_SDA, INPUT_PULLUP);
    1856:	62 e0       	ldi	r22, 0x02	; 2
    1858:	84 e0       	ldi	r24, 0x04	; 4
    185a:	63 d4       	rcall	.+2246   	; 0x2122 <__TEXT_REGION_LENGTH__+0x122>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:209
  pinMode(PIN_SCL, INPUT_PULLUP);
    185c:	62 e0       	ldi	r22, 0x02	; 2
    185e:	86 e0       	ldi	r24, 0x06	; 6
    1860:	60 d4       	rcall	.+2240   	; 0x2122 <__TEXT_REGION_LENGTH__+0x122>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:210
  cutPower();
    1862:	80 d5       	rcall	.+2816   	; 0x2364 <__TEXT_REGION_LENGTH__+0x364>
analogReference():
/Users/ziyue/Library/Arduino15/packages/ATTinyCore/hardware/avr/1.5.2/cores/tinymodern/wiring_analog.c:44
{
  // can't actually set the register here because the default setting
  // will connect AVCC and the AREF pin, which would cause a short if
  // there's something connected to AREF.
  // fix? Validate the mode?
  analog_reference = mode;
    1864:	81 e0       	ldi	r24, 0x01	; 1
    1866:	80 93 6e 01 	sts	0x016E, r24	; 0x80016e <analog_reference>
initializeRegisters():
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:259
}


// initialize the registers and synchronize with EEPROM
void initializeRegisters() {
  i2cReg[I2C_ID] = 0x26;
    186a:	96 e2       	ldi	r25, 0x26	; 38
    186c:	90 93 3c 01 	sts	0x013C, r25	; 0x80013c <i2cReg>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:260
  i2cReg[I2C_FW_REVISION] = 0x05;
    1870:	95 e0       	ldi	r25, 0x05	; 5
    1872:	90 93 48 01 	sts	0x0148, r25	; 0x800148 <i2cReg+0xc>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:262
  
  i2cReg[I2C_CONF_ADDRESS] = 0x08;
    1876:	98 e0       	ldi	r25, 0x08	; 8
    1878:	90 93 4c 01 	sts	0x014C, r25	; 0x80014c <i2cReg+0x10>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:264

  i2cReg[I2C_CONF_PULSE_INTERVAL] = 4;
    187c:	94 e0       	ldi	r25, 0x04	; 4
    187e:	90 93 4e 01 	sts	0x014E, r25	; 0x80014e <i2cReg+0x12>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:265
  i2cReg[I2C_CONF_LOW_VOLTAGE] = 255;
    1882:	9f ef       	ldi	r25, 0xFF	; 255
    1884:	90 93 4f 01 	sts	0x014F, r25	; 0x80014f <i2cReg+0x13>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:266
  i2cReg[I2C_CONF_BLINK_LED] = 100;
    1888:	24 e6       	ldi	r18, 0x64	; 100
    188a:	20 93 50 01 	sts	0x0150, r18	; 0x800150 <i2cReg+0x14>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:267
  i2cReg[I2C_CONF_POWER_CUT_DELAY] = 70;
    188e:	26 e4       	ldi	r18, 0x46	; 70
    1890:	20 93 51 01 	sts	0x0151, r18	; 0x800151 <i2cReg+0x15>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:268
  i2cReg[I2C_CONF_RECOVERY_VOLTAGE] = 255;
    1894:	90 93 52 01 	sts	0x0152, r25	; 0x800152 <i2cReg+0x16>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:270

  i2cReg[I2C_CONF_ADJ_VIN] = 20;
    1898:	94 e1       	ldi	r25, 0x14	; 20
    189a:	90 93 54 01 	sts	0x0154, r25	; 0x800154 <i2cReg+0x18>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:271
  i2cReg[I2C_CONF_ADJ_VOUT] = 20;
    189e:	90 93 55 01 	sts	0x0155, r25	; 0x800155 <i2cReg+0x19>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:273

  i2cReg[I2C_CONF_RTC_ENABLE_TC] = 0x01;
    18a2:	80 93 62 01 	sts	0x0162, r24	; 0x800162 <i2cReg+0x26>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:275

  i2cReg[I2C_CONF_BELOW_TEMP_POINT] = 0x4b;
    18a6:	8b e4       	ldi	r24, 0x4B	; 75
    18a8:	80 93 68 01 	sts	0x0168, r24	; 0x800168 <i2cReg+0x2c>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:276
  i2cReg[I2C_CONF_OVER_TEMP_POINT] = 0x50;
    18ac:	80 e5       	ldi	r24, 0x50	; 80
    18ae:	80 93 6a 01 	sts	0x016A, r24	; 0x80016a <i2cReg+0x2e>
    18b2:	d0 e0       	ldi	r29, 0x00	; 0
    18b4:	c0 e0       	ldi	r28, 0x00	; 0
operator*():
/Users/ziyue/Library/Arduino15/packages/ATTinyCore/hardware/avr/1.5.2/libraries/EEPROM/EEPROM.h:53

    EERef( const int index )
        : index( index )                 {}

    //Access/read members.
    uint8_t operator*() const            { return eeprom_read_byte( (uint8_t*) index ); }
    18b6:	ce 01       	movw	r24, r28
    18b8:	79 d0       	rcall	.+242    	; 0x19ac <eeprom_read_byte>
    18ba:	fe 01       	movw	r30, r28
    18bc:	e4 5c       	subi	r30, 0xC4	; 196
    18be:	fe 4f       	sbci	r31, 0xFE	; 254
initializeRegisters():
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:281

  // synchronize configuration with EEPROM
  for (byte i = 0; i < I2C_REG_COUNT; i ++) {
    byte val = EEPROM.read(i);
    if (val == 255) {
    18c0:	8f 3f       	cpi	r24, 0xFF	; 255
    18c2:	09 f0       	breq	.+2      	; 0x18c6 <main+0x126>
    18c4:	68 c0       	rjmp	.+208    	; 0x1996 <main+0x1f6>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:282
      EEPROM.update(i, i2cReg[i]);
    18c6:	10 81       	ld	r17, Z
operator*():
/Users/ziyue/Library/Arduino15/packages/ATTinyCore/hardware/avr/1.5.2/libraries/EEPROM/EEPROM.h:53
    18c8:	ce 01       	movw	r24, r28
    18ca:	70 d0       	rcall	.+224    	; 0x19ac <eeprom_read_byte>
update():
/Users/ziyue/Library/Arduino15/packages/ATTinyCore/hardware/avr/1.5.2/libraries/EEPROM/EEPROM.h:74
    EERef &operator &=( uint8_t in )     { return *this = **this & in; }
    EERef &operator |=( uint8_t in )     { return *this = **this | in; }
    EERef &operator <<=( uint8_t in )    { return *this = **this << in; }
    EERef &operator >>=( uint8_t in )    { return *this = **this >> in; }

    EERef &update( uint8_t in )          { return  in != *this ? *this = in : *this; }
    18cc:	18 17       	cp	r17, r24
    18ce:	19 f0       	breq	.+6      	; 0x18d6 <main+0x136>
_ZN5EERefaSEh():
/Users/ziyue/Library/Arduino15/packages/ATTinyCore/hardware/avr/1.5.2/libraries/EEPROM/EEPROM.h:61
    //Assignment/write members.
    EERef &operator=( const EERef &ref ) { return *this = *ref; }
    #if  (defined(__AVR_ATtinyX41__) && F_CPU==16000000 && CLOCK_SOURCE==0)
      EERef &operator=( uint8_t in )       { return safe_eeprom_write_byte( (uint8_t*) index, in ), *this;  }
    #else
      EERef &operator=( uint8_t in )       { return eeprom_write_byte( (uint8_t*) index, in ), *this;  }
    18d0:	61 2f       	mov	r22, r17
    18d2:	ce 01       	movw	r24, r28
    18d4:	73 d0       	rcall	.+230    	; 0x19bc <eeprom_write_byte>
    18d6:	21 96       	adiw	r28, 0x01	; 1
initializeRegisters():
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:279

  i2cReg[I2C_CONF_BELOW_TEMP_POINT] = 0x4b;
  i2cReg[I2C_CONF_OVER_TEMP_POINT] = 0x50;

  // synchronize configuration with EEPROM
  for (byte i = 0; i < I2C_REG_COUNT; i ++) {
    18d8:	c2 33       	cpi	r28, 0x32	; 50
    18da:	d1 05       	cpc	r29, r1
    18dc:	61 f7       	brne	.-40     	; 0x18b6 <main+0x116>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:289
      i2cReg[i] = val;
    } 
  }

  // copy some EEPROM backed data to PCF85063 and LM75B
  writeToDevice(ADDRESS_LM75B, I2C_LM75B_TOS - I2C_LM75B_TEMPERATURE, &i2cReg[I2C_CONF_OVER_TEMP_POINT], 1);
    18de:	4a e6       	ldi	r20, 0x6A	; 106
    18e0:	51 e0       	ldi	r21, 0x01	; 1
    18e2:	63 e0       	ldi	r22, 0x03	; 3
    18e4:	88 e4       	ldi	r24, 0x48	; 72
    18e6:	49 da       	rcall	.-2926   	; 0xd7a <writeToDevice(unsigned char, unsigned char, unsigned char*, unsigned char) [clone .constprop.3]>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:290
  writeToDevice(ADDRESS_LM75B, I2C_LM75B_THYST - I2C_LM75B_TEMPERATURE, &i2cReg[I2C_CONF_BELOW_TEMP_POINT], 1);
    18e8:	48 e6       	ldi	r20, 0x68	; 104
    18ea:	51 e0       	ldi	r21, 0x01	; 1
    18ec:	62 e0       	ldi	r22, 0x02	; 2
    18ee:	88 e4       	ldi	r24, 0x48	; 72
    18f0:	44 da       	rcall	.-2936   	; 0xd7a <writeToDevice(unsigned char, unsigned char, unsigned char*, unsigned char) [clone .constprop.3]>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:291
  writeToDevice(ADDRESS_RTC, I2C_RTC_OFFSET - I2C_RTC_CTRL1, &i2cReg[I2C_CONF_RTC_OFFSET], 1);
    18f2:	41 e6       	ldi	r20, 0x61	; 97
    18f4:	51 e0       	ldi	r21, 0x01	; 1
    18f6:	62 e0       	ldi	r22, 0x02	; 2
    18f8:	81 e5       	ldi	r24, 0x51	; 81
    18fa:	3f da       	rcall	.-2946   	; 0xd7a <writeToDevice(unsigned char, unsigned char, unsigned char*, unsigned char) [clone .constprop.3]>
setup():
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:219

  // initlize registers
  initializeRegisters();

  // i2c initialization
  TinyWireS.begin((i2cReg[I2C_CONF_ADDRESS] <= 0x07 || i2cReg[I2C_CONF_ADDRESS] >= 0x78) ? 0x08 : i2cReg[I2C_CONF_ADDRESS]);
    18fc:	80 91 4c 01 	lds	r24, 0x014C	; 0x80014c <i2cReg+0x10>
    1900:	88 30       	cpi	r24, 0x08	; 8
    1902:	08 f4       	brcc	.+2      	; 0x1906 <main+0x166>
    1904:	4a c0       	rjmp	.+148    	; 0x199a <main+0x1fa>
    1906:	80 91 4c 01 	lds	r24, 0x014C	; 0x80014c <i2cReg+0x10>
    190a:	88 37       	cpi	r24, 0x78	; 120
    190c:	08 f0       	brcs	.+2      	; 0x1910 <main+0x170>
    190e:	45 c0       	rjmp	.+138    	; 0x199a <main+0x1fa>
    1910:	80 91 4c 01 	lds	r24, 0x014C	; 0x80014c <i2cReg+0x10>
    1914:	e0 91 ae 01 	lds	r30, 0x01AE	; 0x8001ae <TinyWireS+0xc>
    1918:	f0 91 af 01 	lds	r31, 0x01AF	; 0x8001af <TinyWireS+0xd>
begin_():
/Users/ziyue/Library/Arduino15/packages/ATTinyCore/hardware/avr/1.5.2/libraries/Wire/src/WireS.cpp:59

i2c_tinyS::~i2c_tinyS() {}

void i2c_tinyS::begin_(struct i2cStruct* i2c, uint8_t address, uint8_t mask) {
    I2C_INTR_FLAG_INIT;
    TWSA = (address << 1);
    191c:	88 0f       	add	r24, r24
    191e:	80 93 a2 00 	sts	0x00A2, r24	; 0x8000a2 <__DATA_REGION_ORIGIN__+0x42>
/Users/ziyue/Library/Arduino15/packages/ATTinyCore/hardware/avr/1.5.2/libraries/Wire/src/WireS.cpp:60
    TWSAM = mask;
    1922:	10 92 a1 00 	sts	0x00A1, r1	; 0x8000a1 <__DATA_REGION_ORIGIN__+0x41>
/Users/ziyue/Library/Arduino15/packages/ATTinyCore/hardware/avr/1.5.2/libraries/Wire/src/WireS.cpp:61
    i2c->startCount = -1;
    1926:	8f ef       	ldi	r24, 0xFF	; 255
    1928:	80 a7       	std	Z+40, r24	; 0x28
/Users/ziyue/Library/Arduino15/packages/ATTinyCore/hardware/avr/1.5.2/libraries/Wire/src/WireS.cpp:62
    TWSCRA = (_BV(TWSHE) | _BV(TWDIE) | _BV(TWASIE) | _BV(TWEN) | _BV(TWSIE));
    192a:	8c eb       	ldi	r24, 0xBC	; 188
    192c:	80 93 a5 00 	sts	0x00A5, r24	; 0x8000a5 <__DATA_REGION_ORIGIN__+0x45>
_ZN9i2c_tinyS13onAddrReceiveEPFhjhE():
/Users/ziyue/Library/Arduino15/packages/ATTinyCore/hardware/avr/1.5.2/libraries/Wire/src/WireS.h:113
        static uint8_t peekByte_(struct i2cStruct* i2c);
        inline uint8_t peekByte(void) { return peekByte_(i2c); }
        inline void flush(void) {}
        inline uint16_t getRxAddr(void) { return i2c->Addr; }
        inline size_t getTransmitBytes(void) { return i2c->txBufferIndex; }
        inline void onAddrReceive(boolean (*function)(uint16_t, uint8_t)) { i2c->user_onAddrReceive = function; }
    1930:	8e ee       	ldi	r24, 0xEE	; 238
    1932:	91 e0       	ldi	r25, 0x01	; 1
    1934:	94 a7       	std	Z+44, r25	; 0x2c
    1936:	83 a7       	std	Z+43, r24	; 0x2b
_ZN9i2c_tinyS9onReceiveEPFvjE():
/Users/ziyue/Library/Arduino15/packages/ATTinyCore/hardware/avr/1.5.2/libraries/Wire/src/WireS.h:114
        inline void onReceive(void (*function)(size_t)) { i2c->user_onReceive = function; }
    1938:	8a e1       	ldi	r24, 0x1A	; 26
    193a:	9b e0       	ldi	r25, 0x0B	; 11
    193c:	96 a7       	std	Z+46, r25	; 0x2e
    193e:	85 a7       	std	Z+45, r24	; 0x2d
_ZN9i2c_tinyS9onRequestEPFvvE():
/Users/ziyue/Library/Arduino15/packages/ATTinyCore/hardware/avr/1.5.2/libraries/Wire/src/WireS.h:115
        inline void onRequest(void (*function)(void)) { i2c->user_onRequest = function; }
    1940:	89 ef       	ldi	r24, 0xF9	; 249
    1942:	96 e0       	ldi	r25, 0x06	; 6
    1944:	90 ab       	std	Z+48, r25	; 0x30
    1946:	87 a7       	std	Z+47, r24	; 0x2f
setup():
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:225
  TinyWireS.onAddrReceive(addressEvent);
  TinyWireS.onReceive(receiveEvent);
  TinyWireS.onRequest(requestEvent);

  // disable global interrupts
  cli();
    1948:	f8 94       	cli
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:228

  // enable pin change interrupts
  GIMSK = _BV (PCIE0) | _BV (PCIE1);
    194a:	80 e3       	ldi	r24, 0x30	; 48
    194c:	8b bf       	out	0x3b, r24	; 59
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:229
  PCMSK1 = _BV (PCINT8) | _BV (PCINT9);
    194e:	83 e0       	ldi	r24, 0x03	; 3
    1950:	80 bd       	out	0x20, r24	; 32
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:230
  PCMSK0 = _BV (PCINT5);
    1952:	80 e2       	ldi	r24, 0x20	; 32
    1954:	82 bb       	out	0x12, r24	; 18
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:233

  // enable Timer1
  timer1_enable();
    1956:	0e d5       	rcall	.+2588   	; 0x2374 <__TEXT_REGION_LENGTH__+0x374>
watchdog_enable():
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:297
}


// enable watchdog timer with specified wdp (or get it from I2C_CONF_PULSE_INTERVAL)
void watchdog_enable(byte wdp) {
  cli();
    1958:	f8 94       	cli
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:298
  WDTCSR |= _BV(WDIE);
    195a:	81 b5       	in	r24, 0x21	; 33
    195c:	80 64       	ori	r24, 0x40	; 64
    195e:	81 bd       	out	0x21, r24	; 33
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:299
  WDTCSR |= 6;  // trigger every second
    1960:	81 b5       	in	r24, 0x21	; 33
    1962:	86 60       	ori	r24, 0x06	; 6
    1964:	81 bd       	out	0x21, r24	; 33
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:300
  sei();
    1966:	78 94       	sei
setup():
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:239

  // enable watchdog
  watchdog_enable(0);
  
  // enable all interrupts
  sei();
    1968:	78 94       	sei
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:242

  // power on or sleep
  bool defaultOn = (i2cReg[I2C_CONF_DEFAULT_ON] == 1);
    196a:	80 91 4d 01 	lds	r24, 0x014D	; 0x80014d <i2cReg+0x11>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:243
  if (defaultOn) {
    196e:	81 30       	cpi	r24, 0x01	; 1
    1970:	d9 f4       	brne	.+54     	; 0x19a8 <main+0x208>
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:244
    delay(i2cReg[I2C_CONF_DEFAULT_ON_DELAY] * 1000);  // delay if the value is configured
    1972:	80 91 6b 01 	lds	r24, 0x016B	; 0x80016b <i2cReg+0x2f>
    1976:	90 e0       	ldi	r25, 0x00	; 0
    1978:	68 ee       	ldi	r22, 0xE8	; 232
    197a:	73 e0       	ldi	r23, 0x03	; 3
    197c:	59 d2       	rcall	.+1202   	; 0x1e30 <__mulhi3>
    197e:	09 2e       	mov	r0, r25
    1980:	00 0c       	add	r0, r0
    1982:	aa 0b       	sbc	r26, r26
    1984:	bb 0b       	sbc	r27, r27
delayMicroseconds():
/Users/ziyue/Library/Arduino15/packages/ATTinyCore/hardware/avr/1.5.2/cores/tinymodern/wiring.c:430


#endif

  // busy wait
  __asm__ __volatile__ (
    1986:	2c ec       	ldi	r18, 0xCC	; 204
    1988:	37 e0       	ldi	r19, 0x07	; 7
delay():
/Users/ziyue/Library/Arduino15/packages/ATTinyCore/hardware/avr/1.5.2/cores/tinymodern/wiring.c:252
}
void yield(void) __attribute__ ((weak, alias("__empty")));

void delay(unsigned long ms) //non-millis-timer-dependent delay()
{
  while(ms--){
    198a:	01 97       	sbiw	r24, 0x01	; 1
    198c:	a1 09       	sbc	r26, r1
    198e:	b1 09       	sbc	r27, r1
    1990:	38 f4       	brcc	.+14     	; 0x19a0 <main+0x200>
setup():
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:245
    powerOn();  // power on directly
    1992:	14 d6       	rcall	.+3112   	; 0x25bc <__TEXT_REGION_LENGTH__+0x5bc>
    1994:	ff cf       	rjmp	.-2      	; 0x1994 <main+0x1f4>
initializeRegisters():
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:284
  for (byte i = 0; i < I2C_REG_COUNT; i ++) {
    byte val = EEPROM.read(i);
    if (val == 255) {
      EEPROM.update(i, i2cReg[i]);
    } else {
      i2cReg[i] = val;
    1996:	80 83       	st	Z, r24
    1998:	9e cf       	rjmp	.-196    	; 0x18d6 <main+0x136>
main():
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:219

  // initlize registers
  initializeRegisters();

  // i2c initialization
  TinyWireS.begin((i2cReg[I2C_CONF_ADDRESS] <= 0x07 || i2cReg[I2C_CONF_ADDRESS] >= 0x78) ? 0x08 : i2cReg[I2C_CONF_ADDRESS]);
    199a:	88 e0       	ldi	r24, 0x08	; 8
    199c:	90 e0       	ldi	r25, 0x00	; 0
    199e:	ba cf       	rjmp	.-140    	; 0x1914 <main+0x174>
delayMicroseconds():
/Users/ziyue/Library/Arduino15/packages/ATTinyCore/hardware/avr/1.5.2/cores/tinymodern/wiring.c:430


#endif

  // busy wait
  __asm__ __volatile__ (
    19a0:	f9 01       	movw	r30, r18
    19a2:	31 97       	sbiw	r30, 0x01	; 1
    19a4:	f1 f7       	brne	.-4      	; 0x19a2 <main+0x202>
    19a6:	f1 cf       	rjmp	.-30     	; 0x198a <main+0x1ea>
setup():
/Users/ziyue/Documents/CS 211/Witty-Pi-4/Firmware/WittyPi4/WittyPi4.ino:247
  bool defaultOn = (i2cReg[I2C_CONF_DEFAULT_ON] == 1);
  if (defaultOn) {
    delay(i2cReg[I2C_CONF_DEFAULT_ON_DELAY] * 1000);  // delay if the value is configured
    powerOn();  // power on directly
  } else {
    sleep();    // sleep and wait for button action
    19a8:	12 d6       	rcall	.+3108   	; 0x25ce <__TEXT_REGION_LENGTH__+0x5ce>
    19aa:	f4 cf       	rjmp	.-24     	; 0x1994 <main+0x1f4>

000019ac <eeprom_read_byte>:
eeprom_read_byte():
    19ac:	e1 99       	sbic	0x1c, 1	; 28
    19ae:	fe cf       	rjmp	.-4      	; 0x19ac <eeprom_read_byte>
    19b0:	9f bb       	out	0x1f, r25	; 31
    19b2:	8e bb       	out	0x1e, r24	; 30
    19b4:	e0 9a       	sbi	0x1c, 0	; 28
    19b6:	99 27       	eor	r25, r25
    19b8:	8d b3       	in	r24, 0x1d	; 29
    19ba:	08 95       	ret

000019bc <eeprom_write_byte>:
eeprom_write_byte():
    19bc:	26 2f       	mov	r18, r22

000019be <eeprom_write_r18>:
    19be:	e1 99       	sbic	0x1c, 1	; 28
    19c0:	fe cf       	rjmp	.-4      	; 0x19be <eeprom_write_r18>
    19c2:	1c ba       	out	0x1c, r1	; 28
    19c4:	9f bb       	out	0x1f, r25	; 31
    19c6:	8e bb       	out	0x1e, r24	; 30
    19c8:	2d bb       	out	0x1d, r18	; 29
    19ca:	0f b6       	in	r0, 0x3f	; 63
    19cc:	f8 94       	cli
    19ce:	e2 9a       	sbi	0x1c, 2	; 28
    19d0:	e1 9a       	sbi	0x1c, 1	; 28
    19d2:	0f be       	out	0x3f, r0	; 63
    19d4:	01 96       	adiw	r24, 0x01	; 1
    19d6:	08 95       	ret

000019d8 <__subsf3>:
__subsf3():
    19d8:	50 58       	subi	r21, 0x80	; 128

000019da <__addsf3>:
    19da:	bb 27       	eor	r27, r27
    19dc:	aa 27       	eor	r26, r26
    19de:	0e d0       	rcall	.+28     	; 0x19fc <__addsf3x>
    19e0:	75 c1       	rjmp	.+746    	; 0x1ccc <__fp_round>
__addsf3():
    19e2:	66 d1       	rcall	.+716    	; 0x1cb0 <__fp_pscA>
    19e4:	30 f0       	brcs	.+12     	; 0x19f2 <__addsf3+0x18>
    19e6:	6b d1       	rcall	.+726    	; 0x1cbe <__fp_pscB>
    19e8:	20 f0       	brcs	.+8      	; 0x19f2 <__addsf3+0x18>
    19ea:	31 f4       	brne	.+12     	; 0x19f8 <__addsf3+0x1e>
    19ec:	9f 3f       	cpi	r25, 0xFF	; 255
    19ee:	11 f4       	brne	.+4      	; 0x19f4 <__addsf3+0x1a>
    19f0:	1e f4       	brtc	.+6      	; 0x19f8 <__addsf3+0x1e>
    19f2:	5b c1       	rjmp	.+694    	; 0x1caa <__fp_nan>
    19f4:	0e f4       	brtc	.+2      	; 0x19f8 <__addsf3+0x1e>
    19f6:	e0 95       	com	r30
    19f8:	e7 fb       	bst	r30, 7
    19fa:	51 c1       	rjmp	.+674    	; 0x1c9e <__fp_inf>

000019fc <__addsf3x>:
__addsf3x():
    19fc:	e9 2f       	mov	r30, r25
    19fe:	77 d1       	rcall	.+750    	; 0x1cee <__fp_split3>
    1a00:	80 f3       	brcs	.-32     	; 0x19e2 <__addsf3+0x8>
    1a02:	ba 17       	cp	r27, r26
    1a04:	62 07       	cpc	r22, r18
    1a06:	73 07       	cpc	r23, r19
    1a08:	84 07       	cpc	r24, r20
    1a0a:	95 07       	cpc	r25, r21
    1a0c:	18 f0       	brcs	.+6      	; 0x1a14 <__addsf3x+0x18>
    1a0e:	71 f4       	brne	.+28     	; 0x1a2c <__addsf3x+0x30>
    1a10:	9e f5       	brtc	.+102    	; 0x1a78 <__addsf3x+0x7c>
    1a12:	8f c1       	rjmp	.+798    	; 0x1d32 <__fp_zero>
    1a14:	0e f4       	brtc	.+2      	; 0x1a18 <__addsf3x+0x1c>
    1a16:	e0 95       	com	r30
    1a18:	0b 2e       	mov	r0, r27
    1a1a:	ba 2f       	mov	r27, r26
    1a1c:	a0 2d       	mov	r26, r0
    1a1e:	0b 01       	movw	r0, r22
    1a20:	b9 01       	movw	r22, r18
    1a22:	90 01       	movw	r18, r0
    1a24:	0c 01       	movw	r0, r24
    1a26:	ca 01       	movw	r24, r20
    1a28:	a0 01       	movw	r20, r0
    1a2a:	11 24       	eor	r1, r1
    1a2c:	ff 27       	eor	r31, r31
    1a2e:	59 1b       	sub	r21, r25
    1a30:	99 f0       	breq	.+38     	; 0x1a58 <__addsf3x+0x5c>
    1a32:	59 3f       	cpi	r21, 0xF9	; 249
    1a34:	50 f4       	brcc	.+20     	; 0x1a4a <__addsf3x+0x4e>
    1a36:	50 3e       	cpi	r21, 0xE0	; 224
    1a38:	68 f1       	brcs	.+90     	; 0x1a94 <__addsf3x+0x98>
    1a3a:	1a 16       	cp	r1, r26
    1a3c:	f0 40       	sbci	r31, 0x00	; 0
    1a3e:	a2 2f       	mov	r26, r18
    1a40:	23 2f       	mov	r18, r19
    1a42:	34 2f       	mov	r19, r20
    1a44:	44 27       	eor	r20, r20
    1a46:	58 5f       	subi	r21, 0xF8	; 248
    1a48:	f3 cf       	rjmp	.-26     	; 0x1a30 <__addsf3x+0x34>
    1a4a:	46 95       	lsr	r20
    1a4c:	37 95       	ror	r19
    1a4e:	27 95       	ror	r18
    1a50:	a7 95       	ror	r26
    1a52:	f0 40       	sbci	r31, 0x00	; 0
    1a54:	53 95       	inc	r21
    1a56:	c9 f7       	brne	.-14     	; 0x1a4a <__addsf3x+0x4e>
    1a58:	7e f4       	brtc	.+30     	; 0x1a78 <__addsf3x+0x7c>
    1a5a:	1f 16       	cp	r1, r31
    1a5c:	ba 0b       	sbc	r27, r26
    1a5e:	62 0b       	sbc	r22, r18
    1a60:	73 0b       	sbc	r23, r19
    1a62:	84 0b       	sbc	r24, r20
    1a64:	ba f0       	brmi	.+46     	; 0x1a94 <__addsf3x+0x98>
    1a66:	91 50       	subi	r25, 0x01	; 1
    1a68:	a1 f0       	breq	.+40     	; 0x1a92 <__addsf3x+0x96>
    1a6a:	ff 0f       	add	r31, r31
    1a6c:	bb 1f       	adc	r27, r27
    1a6e:	66 1f       	adc	r22, r22
    1a70:	77 1f       	adc	r23, r23
    1a72:	88 1f       	adc	r24, r24
    1a74:	c2 f7       	brpl	.-16     	; 0x1a66 <__addsf3x+0x6a>
    1a76:	0e c0       	rjmp	.+28     	; 0x1a94 <__addsf3x+0x98>
    1a78:	ba 0f       	add	r27, r26
    1a7a:	62 1f       	adc	r22, r18
    1a7c:	73 1f       	adc	r23, r19
    1a7e:	84 1f       	adc	r24, r20
    1a80:	48 f4       	brcc	.+18     	; 0x1a94 <__addsf3x+0x98>
    1a82:	87 95       	ror	r24
    1a84:	77 95       	ror	r23
    1a86:	67 95       	ror	r22
    1a88:	b7 95       	ror	r27
    1a8a:	f7 95       	ror	r31
    1a8c:	9e 3f       	cpi	r25, 0xFE	; 254
    1a8e:	08 f0       	brcs	.+2      	; 0x1a92 <__addsf3x+0x96>
    1a90:	b3 cf       	rjmp	.-154    	; 0x19f8 <__addsf3+0x1e>
    1a92:	93 95       	inc	r25
    1a94:	88 0f       	add	r24, r24
    1a96:	08 f0       	brcs	.+2      	; 0x1a9a <__addsf3x+0x9e>
    1a98:	99 27       	eor	r25, r25
    1a9a:	ee 0f       	add	r30, r30
    1a9c:	97 95       	ror	r25
    1a9e:	87 95       	ror	r24
    1aa0:	08 95       	ret

00001aa2 <__cmpsf2>:
    1aa2:	d9 d0       	rcall	.+434    	; 0x1c56 <__fp_cmp>
    1aa4:	08 f4       	brcc	.+2      	; 0x1aa8 <__cmpsf2+0x6>
    1aa6:	81 e0       	ldi	r24, 0x01	; 1
    1aa8:	08 95       	ret

00001aaa <__divsf3>:
    1aaa:	0c d0       	rcall	.+24     	; 0x1ac4 <__divsf3x>
    1aac:	0f c1       	rjmp	.+542    	; 0x1ccc <__fp_round>
    1aae:	07 d1       	rcall	.+526    	; 0x1cbe <__fp_pscB>
    1ab0:	40 f0       	brcs	.+16     	; 0x1ac2 <__divsf3+0x18>
    1ab2:	fe d0       	rcall	.+508    	; 0x1cb0 <__fp_pscA>
    1ab4:	30 f0       	brcs	.+12     	; 0x1ac2 <__divsf3+0x18>
    1ab6:	21 f4       	brne	.+8      	; 0x1ac0 <__divsf3+0x16>
    1ab8:	5f 3f       	cpi	r21, 0xFF	; 255
    1aba:	19 f0       	breq	.+6      	; 0x1ac2 <__divsf3+0x18>
__divsf3():
    1abc:	f0 c0       	rjmp	.+480    	; 0x1c9e <__fp_inf>
    1abe:	51 11       	cpse	r21, r1
    1ac0:	39 c1       	rjmp	.+626    	; 0x1d34 <__fp_szero>
    1ac2:	f3 c0       	rjmp	.+486    	; 0x1caa <__fp_nan>

00001ac4 <__divsf3x>:
__divsf3x():
    1ac4:	14 d1       	rcall	.+552    	; 0x1cee <__fp_split3>
    1ac6:	98 f3       	brcs	.-26     	; 0x1aae <__divsf3+0x4>

00001ac8 <__divsf3_pse>:
    1ac8:	99 23       	and	r25, r25
    1aca:	c9 f3       	breq	.-14     	; 0x1abe <__divsf3+0x14>
    1acc:	55 23       	and	r21, r21
    1ace:	b1 f3       	breq	.-20     	; 0x1abc <__divsf3+0x12>
    1ad0:	95 1b       	sub	r25, r21
    1ad2:	55 0b       	sbc	r21, r21
    1ad4:	bb 27       	eor	r27, r27
    1ad6:	aa 27       	eor	r26, r26
    1ad8:	62 17       	cp	r22, r18
    1ada:	73 07       	cpc	r23, r19
    1adc:	84 07       	cpc	r24, r20
    1ade:	38 f0       	brcs	.+14     	; 0x1aee <__divsf3_pse+0x26>
    1ae0:	9f 5f       	subi	r25, 0xFF	; 255
    1ae2:	5f 4f       	sbci	r21, 0xFF	; 255
    1ae4:	22 0f       	add	r18, r18
    1ae6:	33 1f       	adc	r19, r19
    1ae8:	44 1f       	adc	r20, r20
    1aea:	aa 1f       	adc	r26, r26
    1aec:	a9 f3       	breq	.-22     	; 0x1ad8 <__divsf3_pse+0x10>
    1aee:	33 d0       	rcall	.+102    	; 0x1b56 <__divsf3_pse+0x8e>
    1af0:	0e 2e       	mov	r0, r30
    1af2:	3a f0       	brmi	.+14     	; 0x1b02 <__divsf3_pse+0x3a>
    1af4:	e0 e8       	ldi	r30, 0x80	; 128
    1af6:	30 d0       	rcall	.+96     	; 0x1b58 <__divsf3_pse+0x90>
    1af8:	91 50       	subi	r25, 0x01	; 1
    1afa:	50 40       	sbci	r21, 0x00	; 0
    1afc:	e6 95       	lsr	r30
    1afe:	00 1c       	adc	r0, r0
    1b00:	ca f7       	brpl	.-14     	; 0x1af4 <__divsf3_pse+0x2c>
    1b02:	29 d0       	rcall	.+82     	; 0x1b56 <__divsf3_pse+0x8e>
    1b04:	fe 2f       	mov	r31, r30
    1b06:	27 d0       	rcall	.+78     	; 0x1b56 <__divsf3_pse+0x8e>
    1b08:	66 0f       	add	r22, r22
    1b0a:	77 1f       	adc	r23, r23
    1b0c:	88 1f       	adc	r24, r24
    1b0e:	bb 1f       	adc	r27, r27
    1b10:	26 17       	cp	r18, r22
    1b12:	37 07       	cpc	r19, r23
    1b14:	48 07       	cpc	r20, r24
    1b16:	ab 07       	cpc	r26, r27
    1b18:	b0 e8       	ldi	r27, 0x80	; 128
    1b1a:	09 f0       	breq	.+2      	; 0x1b1e <__divsf3_pse+0x56>
    1b1c:	bb 0b       	sbc	r27, r27
    1b1e:	80 2d       	mov	r24, r0
    1b20:	bf 01       	movw	r22, r30
    1b22:	ff 27       	eor	r31, r31
    1b24:	93 58       	subi	r25, 0x83	; 131
    1b26:	5f 4f       	sbci	r21, 0xFF	; 255
    1b28:	2a f0       	brmi	.+10     	; 0x1b34 <__divsf3_pse+0x6c>
    1b2a:	9e 3f       	cpi	r25, 0xFE	; 254
    1b2c:	51 05       	cpc	r21, r1
    1b2e:	68 f0       	brcs	.+26     	; 0x1b4a <__divsf3_pse+0x82>
    1b30:	b6 c0       	rjmp	.+364    	; 0x1c9e <__fp_inf>
    1b32:	00 c1       	rjmp	.+512    	; 0x1d34 <__fp_szero>
    1b34:	5f 3f       	cpi	r21, 0xFF	; 255
    1b36:	ec f3       	brlt	.-6      	; 0x1b32 <__divsf3_pse+0x6a>
    1b38:	98 3e       	cpi	r25, 0xE8	; 232
    1b3a:	dc f3       	brlt	.-10     	; 0x1b32 <__divsf3_pse+0x6a>
    1b3c:	86 95       	lsr	r24
    1b3e:	77 95       	ror	r23
    1b40:	67 95       	ror	r22
    1b42:	b7 95       	ror	r27
    1b44:	f7 95       	ror	r31
    1b46:	9f 5f       	subi	r25, 0xFF	; 255
    1b48:	c9 f7       	brne	.-14     	; 0x1b3c <__divsf3_pse+0x74>
    1b4a:	88 0f       	add	r24, r24
    1b4c:	91 1d       	adc	r25, r1
    1b4e:	96 95       	lsr	r25
    1b50:	87 95       	ror	r24
    1b52:	97 f9       	bld	r25, 7
    1b54:	08 95       	ret
    1b56:	e1 e0       	ldi	r30, 0x01	; 1
    1b58:	66 0f       	add	r22, r22
    1b5a:	77 1f       	adc	r23, r23
    1b5c:	88 1f       	adc	r24, r24
    1b5e:	bb 1f       	adc	r27, r27
    1b60:	62 17       	cp	r22, r18
    1b62:	73 07       	cpc	r23, r19
    1b64:	84 07       	cpc	r24, r20
    1b66:	ba 07       	cpc	r27, r26
    1b68:	20 f0       	brcs	.+8      	; 0x1b72 <__divsf3_pse+0xaa>
    1b6a:	62 1b       	sub	r22, r18
    1b6c:	73 0b       	sbc	r23, r19
    1b6e:	84 0b       	sbc	r24, r20
    1b70:	ba 0b       	sbc	r27, r26
    1b72:	ee 1f       	adc	r30, r30
    1b74:	88 f7       	brcc	.-30     	; 0x1b58 <__divsf3_pse+0x90>
    1b76:	e0 95       	com	r30
    1b78:	08 95       	ret

00001b7a <__fixsfsi>:
    1b7a:	04 d0       	rcall	.+8      	; 0x1b84 <__fixunssfsi>
    1b7c:	68 94       	set
    1b7e:	b1 11       	cpse	r27, r1
    1b80:	d9 c0       	rjmp	.+434    	; 0x1d34 <__fp_szero>
    1b82:	08 95       	ret

00001b84 <__fixunssfsi>:
    1b84:	bc d0       	rcall	.+376    	; 0x1cfe <__fp_splitA>
    1b86:	88 f0       	brcs	.+34     	; 0x1baa <__fixunssfsi+0x26>
    1b88:	9f 57       	subi	r25, 0x7F	; 127
    1b8a:	90 f0       	brcs	.+36     	; 0x1bb0 <__fixunssfsi+0x2c>
    1b8c:	b9 2f       	mov	r27, r25
    1b8e:	99 27       	eor	r25, r25
__fixunssfsi():
    1b90:	b7 51       	subi	r27, 0x17	; 23
    1b92:	a0 f0       	brcs	.+40     	; 0x1bbc <__fixunssfsi+0x38>
    1b94:	d1 f0       	breq	.+52     	; 0x1bca <__fixunssfsi+0x46>
    1b96:	66 0f       	add	r22, r22
    1b98:	77 1f       	adc	r23, r23
    1b9a:	88 1f       	adc	r24, r24
    1b9c:	99 1f       	adc	r25, r25
    1b9e:	1a f0       	brmi	.+6      	; 0x1ba6 <__fixunssfsi+0x22>
    1ba0:	ba 95       	dec	r27
    1ba2:	c9 f7       	brne	.-14     	; 0x1b96 <__fixunssfsi+0x12>
    1ba4:	12 c0       	rjmp	.+36     	; 0x1bca <__fixunssfsi+0x46>
    1ba6:	b1 30       	cpi	r27, 0x01	; 1
    1ba8:	81 f0       	breq	.+32     	; 0x1bca <__fixunssfsi+0x46>
    1baa:	c3 d0       	rcall	.+390    	; 0x1d32 <__fp_zero>
    1bac:	b1 e0       	ldi	r27, 0x01	; 1
    1bae:	08 95       	ret
    1bb0:	c0 c0       	rjmp	.+384    	; 0x1d32 <__fp_zero>
    1bb2:	67 2f       	mov	r22, r23
    1bb4:	78 2f       	mov	r23, r24
    1bb6:	88 27       	eor	r24, r24
    1bb8:	b8 5f       	subi	r27, 0xF8	; 248
    1bba:	39 f0       	breq	.+14     	; 0x1bca <__fixunssfsi+0x46>
    1bbc:	b9 3f       	cpi	r27, 0xF9	; 249
    1bbe:	cc f3       	brlt	.-14     	; 0x1bb2 <__fixunssfsi+0x2e>
    1bc0:	86 95       	lsr	r24
    1bc2:	77 95       	ror	r23
    1bc4:	67 95       	ror	r22
    1bc6:	b3 95       	inc	r27
    1bc8:	d9 f7       	brne	.-10     	; 0x1bc0 <__fixunssfsi+0x3c>
    1bca:	3e f4       	brtc	.+14     	; 0x1bda <__fixunssfsi+0x56>
    1bcc:	90 95       	com	r25
    1bce:	80 95       	com	r24
    1bd0:	70 95       	com	r23
    1bd2:	61 95       	neg	r22
    1bd4:	7f 4f       	sbci	r23, 0xFF	; 255
    1bd6:	8f 4f       	sbci	r24, 0xFF	; 255
    1bd8:	9f 4f       	sbci	r25, 0xFF	; 255
    1bda:	08 95       	ret

00001bdc <__floatunsisf>:
__floatunsisf():
    1bdc:	e8 94       	clt
    1bde:	09 c0       	rjmp	.+18     	; 0x1bf2 <__floatsisf+0x12>

00001be0 <__floatsisf>:
    1be0:	97 fb       	bst	r25, 7
    1be2:	3e f4       	brtc	.+14     	; 0x1bf2 <__floatsisf+0x12>
    1be4:	90 95       	com	r25
    1be6:	80 95       	com	r24
    1be8:	70 95       	com	r23
    1bea:	61 95       	neg	r22
    1bec:	7f 4f       	sbci	r23, 0xFF	; 255
    1bee:	8f 4f       	sbci	r24, 0xFF	; 255
    1bf0:	9f 4f       	sbci	r25, 0xFF	; 255
    1bf2:	99 23       	and	r25, r25
    1bf4:	a9 f0       	breq	.+42     	; 0x1c20 <__floatsisf+0x40>
    1bf6:	f9 2f       	mov	r31, r25
    1bf8:	96 e9       	ldi	r25, 0x96	; 150
    1bfa:	bb 27       	eor	r27, r27
    1bfc:	93 95       	inc	r25
    1bfe:	f6 95       	lsr	r31
    1c00:	87 95       	ror	r24
    1c02:	77 95       	ror	r23
    1c04:	67 95       	ror	r22
    1c06:	b7 95       	ror	r27
    1c08:	f1 11       	cpse	r31, r1
    1c0a:	f8 cf       	rjmp	.-16     	; 0x1bfc <__floatsisf+0x1c>
    1c0c:	fa f4       	brpl	.+62     	; 0x1c4c <__floatsisf+0x6c>
    1c0e:	bb 0f       	add	r27, r27
    1c10:	11 f4       	brne	.+4      	; 0x1c16 <__floatsisf+0x36>
    1c12:	60 ff       	sbrs	r22, 0
    1c14:	1b c0       	rjmp	.+54     	; 0x1c4c <__floatsisf+0x6c>
    1c16:	6f 5f       	subi	r22, 0xFF	; 255
    1c18:	7f 4f       	sbci	r23, 0xFF	; 255
    1c1a:	8f 4f       	sbci	r24, 0xFF	; 255
    1c1c:	9f 4f       	sbci	r25, 0xFF	; 255
    1c1e:	16 c0       	rjmp	.+44     	; 0x1c4c <__floatsisf+0x6c>
    1c20:	88 23       	and	r24, r24
    1c22:	11 f0       	breq	.+4      	; 0x1c28 <__floatsisf+0x48>
    1c24:	96 e9       	ldi	r25, 0x96	; 150
    1c26:	11 c0       	rjmp	.+34     	; 0x1c4a <__floatsisf+0x6a>
    1c28:	77 23       	and	r23, r23
    1c2a:	21 f0       	breq	.+8      	; 0x1c34 <__floatsisf+0x54>
    1c2c:	9e e8       	ldi	r25, 0x8E	; 142
    1c2e:	87 2f       	mov	r24, r23
    1c30:	76 2f       	mov	r23, r22
    1c32:	05 c0       	rjmp	.+10     	; 0x1c3e <__floatsisf+0x5e>
    1c34:	66 23       	and	r22, r22
    1c36:	71 f0       	breq	.+28     	; 0x1c54 <__floatsisf+0x74>
    1c38:	96 e8       	ldi	r25, 0x86	; 134
    1c3a:	86 2f       	mov	r24, r22
    1c3c:	70 e0       	ldi	r23, 0x00	; 0
    1c3e:	60 e0       	ldi	r22, 0x00	; 0
    1c40:	2a f0       	brmi	.+10     	; 0x1c4c <__floatsisf+0x6c>
    1c42:	9a 95       	dec	r25
    1c44:	66 0f       	add	r22, r22
    1c46:	77 1f       	adc	r23, r23
    1c48:	88 1f       	adc	r24, r24
    1c4a:	da f7       	brpl	.-10     	; 0x1c42 <__floatsisf+0x62>
    1c4c:	88 0f       	add	r24, r24
    1c4e:	96 95       	lsr	r25
    1c50:	87 95       	ror	r24
    1c52:	97 f9       	bld	r25, 7
    1c54:	08 95       	ret

00001c56 <__fp_cmp>:
__fp_cmp():
    1c56:	99 0f       	add	r25, r25
    1c58:	00 08       	sbc	r0, r0
    1c5a:	55 0f       	add	r21, r21
    1c5c:	aa 0b       	sbc	r26, r26
    1c5e:	e0 e8       	ldi	r30, 0x80	; 128
    1c60:	fe ef       	ldi	r31, 0xFE	; 254
    1c62:	16 16       	cp	r1, r22
    1c64:	17 06       	cpc	r1, r23
    1c66:	e8 07       	cpc	r30, r24
    1c68:	f9 07       	cpc	r31, r25
    1c6a:	c0 f0       	brcs	.+48     	; 0x1c9c <__fp_cmp+0x46>
    1c6c:	12 16       	cp	r1, r18
    1c6e:	13 06       	cpc	r1, r19
    1c70:	e4 07       	cpc	r30, r20
    1c72:	f5 07       	cpc	r31, r21
    1c74:	98 f0       	brcs	.+38     	; 0x1c9c <__fp_cmp+0x46>
    1c76:	62 1b       	sub	r22, r18
    1c78:	73 0b       	sbc	r23, r19
    1c7a:	84 0b       	sbc	r24, r20
    1c7c:	95 0b       	sbc	r25, r21
    1c7e:	39 f4       	brne	.+14     	; 0x1c8e <__fp_cmp+0x38>
    1c80:	0a 26       	eor	r0, r26
    1c82:	61 f0       	breq	.+24     	; 0x1c9c <__fp_cmp+0x46>
    1c84:	23 2b       	or	r18, r19
    1c86:	24 2b       	or	r18, r20
    1c88:	25 2b       	or	r18, r21
    1c8a:	21 f4       	brne	.+8      	; 0x1c94 <__fp_cmp+0x3e>
    1c8c:	08 95       	ret
    1c8e:	0a 26       	eor	r0, r26
    1c90:	09 f4       	brne	.+2      	; 0x1c94 <__fp_cmp+0x3e>
    1c92:	a1 40       	sbci	r26, 0x01	; 1
    1c94:	a6 95       	lsr	r26
    1c96:	8f ef       	ldi	r24, 0xFF	; 255
    1c98:	81 1d       	adc	r24, r1
    1c9a:	81 1d       	adc	r24, r1
    1c9c:	08 95       	ret

00001c9e <__fp_inf>:
__fp_inf():
    1c9e:	97 f9       	bld	r25, 7
    1ca0:	9f 67       	ori	r25, 0x7F	; 127
    1ca2:	80 e8       	ldi	r24, 0x80	; 128
    1ca4:	70 e0       	ldi	r23, 0x00	; 0
    1ca6:	60 e0       	ldi	r22, 0x00	; 0
    1ca8:	08 95       	ret

00001caa <__fp_nan>:
__fp_nan():
    1caa:	9f ef       	ldi	r25, 0xFF	; 255
    1cac:	80 ec       	ldi	r24, 0xC0	; 192
    1cae:	08 95       	ret

00001cb0 <__fp_pscA>:
__fp_pscA():
    1cb0:	00 24       	eor	r0, r0
    1cb2:	0a 94       	dec	r0
    1cb4:	16 16       	cp	r1, r22
    1cb6:	17 06       	cpc	r1, r23
    1cb8:	18 06       	cpc	r1, r24
    1cba:	09 06       	cpc	r0, r25
    1cbc:	08 95       	ret

00001cbe <__fp_pscB>:
__fp_pscB():
    1cbe:	00 24       	eor	r0, r0
    1cc0:	0a 94       	dec	r0
    1cc2:	12 16       	cp	r1, r18
    1cc4:	13 06       	cpc	r1, r19
    1cc6:	14 06       	cpc	r1, r20
    1cc8:	05 06       	cpc	r0, r21
    1cca:	08 95       	ret

00001ccc <__fp_round>:
__fp_round():
    1ccc:	09 2e       	mov	r0, r25
    1cce:	03 94       	inc	r0
    1cd0:	00 0c       	add	r0, r0
    1cd2:	11 f4       	brne	.+4      	; 0x1cd8 <__fp_round+0xc>
    1cd4:	88 23       	and	r24, r24
    1cd6:	52 f0       	brmi	.+20     	; 0x1cec <__fp_round+0x20>
    1cd8:	bb 0f       	add	r27, r27
    1cda:	40 f4       	brcc	.+16     	; 0x1cec <__fp_round+0x20>
    1cdc:	bf 2b       	or	r27, r31
    1cde:	11 f4       	brne	.+4      	; 0x1ce4 <__fp_round+0x18>
    1ce0:	60 ff       	sbrs	r22, 0
    1ce2:	04 c0       	rjmp	.+8      	; 0x1cec <__fp_round+0x20>
    1ce4:	6f 5f       	subi	r22, 0xFF	; 255
    1ce6:	7f 4f       	sbci	r23, 0xFF	; 255
    1ce8:	8f 4f       	sbci	r24, 0xFF	; 255
    1cea:	9f 4f       	sbci	r25, 0xFF	; 255
    1cec:	08 95       	ret

00001cee <__fp_split3>:
__fp_split3():
    1cee:	57 fd       	sbrc	r21, 7
    1cf0:	90 58       	subi	r25, 0x80	; 128
    1cf2:	44 0f       	add	r20, r20
    1cf4:	55 1f       	adc	r21, r21
    1cf6:	59 f0       	breq	.+22     	; 0x1d0e <__fp_splitA+0x10>
    1cf8:	5f 3f       	cpi	r21, 0xFF	; 255
    1cfa:	71 f0       	breq	.+28     	; 0x1d18 <__fp_splitA+0x1a>
    1cfc:	47 95       	ror	r20

00001cfe <__fp_splitA>:
    1cfe:	88 0f       	add	r24, r24
    1d00:	97 fb       	bst	r25, 7
    1d02:	99 1f       	adc	r25, r25
    1d04:	61 f0       	breq	.+24     	; 0x1d1e <__fp_splitA+0x20>
    1d06:	9f 3f       	cpi	r25, 0xFF	; 255
    1d08:	79 f0       	breq	.+30     	; 0x1d28 <__fp_splitA+0x2a>
    1d0a:	87 95       	ror	r24
    1d0c:	08 95       	ret
    1d0e:	12 16       	cp	r1, r18
    1d10:	13 06       	cpc	r1, r19
    1d12:	14 06       	cpc	r1, r20
    1d14:	55 1f       	adc	r21, r21
    1d16:	f2 cf       	rjmp	.-28     	; 0x1cfc <__fp_split3+0xe>
    1d18:	46 95       	lsr	r20
    1d1a:	f1 df       	rcall	.-30     	; 0x1cfe <__fp_splitA>
    1d1c:	08 c0       	rjmp	.+16     	; 0x1d2e <__fp_splitA+0x30>
    1d1e:	16 16       	cp	r1, r22
    1d20:	17 06       	cpc	r1, r23
    1d22:	18 06       	cpc	r1, r24
    1d24:	99 1f       	adc	r25, r25
    1d26:	f1 cf       	rjmp	.-30     	; 0x1d0a <__fp_splitA+0xc>
    1d28:	86 95       	lsr	r24
    1d2a:	71 05       	cpc	r23, r1
    1d2c:	61 05       	cpc	r22, r1
    1d2e:	08 94       	sec
    1d30:	08 95       	ret

00001d32 <__fp_zero>:
__fp_zero():
    1d32:	e8 94       	clt

00001d34 <__fp_szero>:
    1d34:	bb 27       	eor	r27, r27
    1d36:	66 27       	eor	r22, r22
    1d38:	77 27       	eor	r23, r23
    1d3a:	cb 01       	movw	r24, r22
    1d3c:	97 f9       	bld	r25, 7
    1d3e:	08 95       	ret

00001d40 <__gesf2>:
__gesf2():
    1d40:	8a df       	rcall	.-236    	; 0x1c56 <__fp_cmp>
    1d42:	08 f4       	brcc	.+2      	; 0x1d46 <__gesf2+0x6>
    1d44:	8f ef       	ldi	r24, 0xFF	; 255
    1d46:	08 95       	ret

00001d48 <__mulsf3>:
__mulsf3():
    1d48:	0a d0       	rcall	.+20     	; 0x1d5e <__mulsf3x>
    1d4a:	c0 cf       	rjmp	.-128    	; 0x1ccc <__fp_round>
    1d4c:	b1 df       	rcall	.-158    	; 0x1cb0 <__fp_pscA>
    1d4e:	28 f0       	brcs	.+10     	; 0x1d5a <__mulsf3+0x12>
    1d50:	b6 df       	rcall	.-148    	; 0x1cbe <__fp_pscB>
    1d52:	18 f0       	brcs	.+6      	; 0x1d5a <__mulsf3+0x12>
    1d54:	95 23       	and	r25, r21
    1d56:	09 f0       	breq	.+2      	; 0x1d5a <__mulsf3+0x12>
    1d58:	a2 cf       	rjmp	.-188    	; 0x1c9e <__fp_inf>
    1d5a:	a7 cf       	rjmp	.-178    	; 0x1caa <__fp_nan>
    1d5c:	eb cf       	rjmp	.-42     	; 0x1d34 <__fp_szero>

00001d5e <__mulsf3x>:
__mulsf3x():
    1d5e:	c7 df       	rcall	.-114    	; 0x1cee <__fp_split3>
    1d60:	a8 f3       	brcs	.-22     	; 0x1d4c <__mulsf3+0x4>

00001d62 <__mulsf3_pse>:
    1d62:	99 23       	and	r25, r25
    1d64:	d9 f3       	breq	.-10     	; 0x1d5c <__mulsf3+0x14>
    1d66:	55 23       	and	r21, r21
    1d68:	c9 f3       	breq	.-14     	; 0x1d5c <__mulsf3+0x14>
    1d6a:	95 0f       	add	r25, r21
    1d6c:	50 e0       	ldi	r21, 0x00	; 0
    1d6e:	55 1f       	adc	r21, r21
    1d70:	aa 27       	eor	r26, r26
    1d72:	ee 27       	eor	r30, r30
    1d74:	ff 27       	eor	r31, r31
    1d76:	bb 27       	eor	r27, r27
    1d78:	00 24       	eor	r0, r0
    1d7a:	08 94       	sec
    1d7c:	67 95       	ror	r22
    1d7e:	20 f4       	brcc	.+8      	; 0x1d88 <__mulsf3_pse+0x26>
    1d80:	e2 0f       	add	r30, r18
    1d82:	f3 1f       	adc	r31, r19
    1d84:	b4 1f       	adc	r27, r20
    1d86:	0a 1e       	adc	r0, r26
    1d88:	22 0f       	add	r18, r18
    1d8a:	33 1f       	adc	r19, r19
    1d8c:	44 1f       	adc	r20, r20
    1d8e:	aa 1f       	adc	r26, r26
    1d90:	66 95       	lsr	r22
    1d92:	a9 f7       	brne	.-22     	; 0x1d7e <__mulsf3_pse+0x1c>
    1d94:	77 95       	ror	r23
    1d96:	30 f4       	brcc	.+12     	; 0x1da4 <__mulsf3_pse+0x42>
    1d98:	f3 0f       	add	r31, r19
    1d9a:	b4 1f       	adc	r27, r20
    1d9c:	0a 1e       	adc	r0, r26
    1d9e:	12 1e       	adc	r1, r18
    1da0:	08 f4       	brcc	.+2      	; 0x1da4 <__mulsf3_pse+0x42>
    1da2:	63 95       	inc	r22
    1da4:	33 0f       	add	r19, r19
    1da6:	44 1f       	adc	r20, r20
    1da8:	aa 1f       	adc	r26, r26
    1daa:	22 1f       	adc	r18, r18
    1dac:	76 95       	lsr	r23
    1dae:	99 f7       	brne	.-26     	; 0x1d96 <__mulsf3_pse+0x34>
    1db0:	87 95       	ror	r24
    1db2:	20 f4       	brcc	.+8      	; 0x1dbc <__mulsf3_pse+0x5a>
    1db4:	b4 0f       	add	r27, r20
    1db6:	0a 1e       	adc	r0, r26
    1db8:	12 1e       	adc	r1, r18
    1dba:	63 1f       	adc	r22, r19
    1dbc:	44 0f       	add	r20, r20
    1dbe:	aa 1f       	adc	r26, r26
    1dc0:	22 1f       	adc	r18, r18
    1dc2:	33 1f       	adc	r19, r19
    1dc4:	86 95       	lsr	r24
    1dc6:	a9 f7       	brne	.-22     	; 0x1db2 <__mulsf3_pse+0x50>
    1dc8:	86 2f       	mov	r24, r22
    1dca:	71 2d       	mov	r23, r1
    1dcc:	60 2d       	mov	r22, r0
    1dce:	11 24       	eor	r1, r1
    1dd0:	9f 57       	subi	r25, 0x7F	; 127
    1dd2:	50 40       	sbci	r21, 0x00	; 0
    1dd4:	8a f0       	brmi	.+34     	; 0x1df8 <__mulsf3_pse+0x96>
    1dd6:	e1 f0       	breq	.+56     	; 0x1e10 <__mulsf3_pse+0xae>
    1dd8:	88 23       	and	r24, r24
    1dda:	4a f0       	brmi	.+18     	; 0x1dee <__mulsf3_pse+0x8c>
    1ddc:	ee 0f       	add	r30, r30
    1dde:	ff 1f       	adc	r31, r31
    1de0:	bb 1f       	adc	r27, r27
    1de2:	66 1f       	adc	r22, r22
    1de4:	77 1f       	adc	r23, r23
    1de6:	88 1f       	adc	r24, r24
    1de8:	91 50       	subi	r25, 0x01	; 1
    1dea:	50 40       	sbci	r21, 0x00	; 0
    1dec:	a9 f7       	brne	.-22     	; 0x1dd8 <__mulsf3_pse+0x76>
    1dee:	9e 3f       	cpi	r25, 0xFE	; 254
    1df0:	51 05       	cpc	r21, r1
    1df2:	70 f0       	brcs	.+28     	; 0x1e10 <__mulsf3_pse+0xae>
    1df4:	54 cf       	rjmp	.-344    	; 0x1c9e <__fp_inf>
    1df6:	9e cf       	rjmp	.-196    	; 0x1d34 <__fp_szero>
    1df8:	5f 3f       	cpi	r21, 0xFF	; 255
    1dfa:	ec f3       	brlt	.-6      	; 0x1df6 <__mulsf3_pse+0x94>
    1dfc:	98 3e       	cpi	r25, 0xE8	; 232
    1dfe:	dc f3       	brlt	.-10     	; 0x1df6 <__mulsf3_pse+0x94>
    1e00:	86 95       	lsr	r24
    1e02:	77 95       	ror	r23
    1e04:	67 95       	ror	r22
    1e06:	b7 95       	ror	r27
    1e08:	f7 95       	ror	r31
    1e0a:	e7 95       	ror	r30
    1e0c:	9f 5f       	subi	r25, 0xFF	; 255
    1e0e:	c1 f7       	brne	.-16     	; 0x1e00 <__mulsf3_pse+0x9e>
    1e10:	fe 2b       	or	r31, r30
    1e12:	88 0f       	add	r24, r24
    1e14:	91 1d       	adc	r25, r1
    1e16:	96 95       	lsr	r25
    1e18:	87 95       	ror	r24
    1e1a:	97 f9       	bld	r25, 7
    1e1c:	08 95       	ret

00001e1e <__mulqi3>:
/Users/jenkins/jenkins/workspace/avr-gcc-staging/label/mac-mini/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:224
    1e1e:	00 24       	eor	r0, r0

00001e20 <__mulqi3_loop>:
/Users/jenkins/jenkins/workspace/avr-gcc-staging/label/mac-mini/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:226
    1e20:	80 fd       	sbrc	r24, 0
/Users/jenkins/jenkins/workspace/avr-gcc-staging/label/mac-mini/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:227
    1e22:	06 0e       	add	r0, r22
/Users/jenkins/jenkins/workspace/avr-gcc-staging/label/mac-mini/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:228
    1e24:	66 0f       	add	r22, r22
/Users/jenkins/jenkins/workspace/avr-gcc-staging/label/mac-mini/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:229
    1e26:	11 f0       	breq	.+4      	; 0x1e2c <__mulqi3_exit>
/Users/jenkins/jenkins/workspace/avr-gcc-staging/label/mac-mini/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:230
    1e28:	86 95       	lsr	r24
/Users/jenkins/jenkins/workspace/avr-gcc-staging/label/mac-mini/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:231
    1e2a:	d1 f7       	brne	.-12     	; 0x1e20 <__mulqi3_loop>

00001e2c <__mulqi3_exit>:
/Users/jenkins/jenkins/workspace/avr-gcc-staging/label/mac-mini/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:233
    1e2c:	80 2d       	mov	r24, r0
/Users/jenkins/jenkins/workspace/avr-gcc-staging/label/mac-mini/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:234
    1e2e:	08 95       	ret

00001e30 <__mulhi3>:
__mulhi3():
/Users/jenkins/jenkins/workspace/avr-gcc-staging/label/mac-mini/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:312
    1e30:	00 24       	eor	r0, r0
/Users/jenkins/jenkins/workspace/avr-gcc-staging/label/mac-mini/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:313
    1e32:	55 27       	eor	r21, r21
/Users/jenkins/jenkins/workspace/avr-gcc-staging/label/mac-mini/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:314
    1e34:	04 c0       	rjmp	.+8      	; 0x1e3e <__mulhi3+0xe>
/Users/jenkins/jenkins/workspace/avr-gcc-staging/label/mac-mini/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:317
    1e36:	08 0e       	add	r0, r24
/Users/jenkins/jenkins/workspace/avr-gcc-staging/label/mac-mini/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:318
    1e38:	59 1f       	adc	r21, r25
/Users/jenkins/jenkins/workspace/avr-gcc-staging/label/mac-mini/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:320
    1e3a:	88 0f       	add	r24, r24
/Users/jenkins/jenkins/workspace/avr-gcc-staging/label/mac-mini/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:321
    1e3c:	99 1f       	adc	r25, r25
/Users/jenkins/jenkins/workspace/avr-gcc-staging/label/mac-mini/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:324
    1e3e:	00 97       	sbiw	r24, 0x00	; 0
/Users/jenkins/jenkins/workspace/avr-gcc-staging/label/mac-mini/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:325
    1e40:	29 f0       	breq	.+10     	; 0x1e4c <__mulhi3+0x1c>
/Users/jenkins/jenkins/workspace/avr-gcc-staging/label/mac-mini/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:328
    1e42:	76 95       	lsr	r23
/Users/jenkins/jenkins/workspace/avr-gcc-staging/label/mac-mini/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:329
    1e44:	67 95       	ror	r22
/Users/jenkins/jenkins/workspace/avr-gcc-staging/label/mac-mini/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:331
    1e46:	b8 f3       	brcs	.-18     	; 0x1e36 <__mulhi3+0x6>
/Users/jenkins/jenkins/workspace/avr-gcc-staging/label/mac-mini/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:335
    1e48:	71 05       	cpc	r23, r1
/Users/jenkins/jenkins/workspace/avr-gcc-staging/label/mac-mini/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:337
    1e4a:	b9 f7       	brne	.-18     	; 0x1e3a <__mulhi3+0xa>
/Users/jenkins/jenkins/workspace/avr-gcc-staging/label/mac-mini/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:340
    1e4c:	80 2d       	mov	r24, r0
/Users/jenkins/jenkins/workspace/avr-gcc-staging/label/mac-mini/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:341
    1e4e:	95 2f       	mov	r25, r21
/Users/jenkins/jenkins/workspace/avr-gcc-staging/label/mac-mini/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:342
    1e50:	08 95       	ret

00001e52 <__mulsi3>:
__mulsi3():
/Users/jenkins/jenkins/workspace/avr-gcc-staging/label/mac-mini/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:445
    1e52:	ee 27       	eor	r30, r30
/Users/jenkins/jenkins/workspace/avr-gcc-staging/label/mac-mini/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:446
    1e54:	ff 27       	eor	r31, r31

00001e56 <__mulsi3_helper>:
__mulsi3_helper():
/Users/jenkins/jenkins/workspace/avr-gcc-staging/label/mac-mini/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:451
    1e56:	aa 27       	eor	r26, r26
/Users/jenkins/jenkins/workspace/avr-gcc-staging/label/mac-mini/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:452
    1e58:	bb 27       	eor	r27, r27
/Users/jenkins/jenkins/workspace/avr-gcc-staging/label/mac-mini/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:453
    1e5a:	08 c0       	rjmp	.+16     	; 0x1e6c <__mulsi3_helper+0x16>
/Users/jenkins/jenkins/workspace/avr-gcc-staging/label/mac-mini/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:457
    1e5c:	a2 0f       	add	r26, r18
    1e5e:	b3 1f       	adc	r27, r19
    1e60:	e4 1f       	adc	r30, r20
    1e62:	f5 1f       	adc	r31, r21
/Users/jenkins/jenkins/workspace/avr-gcc-staging/label/mac-mini/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:460
    1e64:	22 0f       	add	r18, r18
    1e66:	33 1f       	adc	r19, r19
    1e68:	44 1f       	adc	r20, r20
    1e6a:	55 1f       	adc	r21, r21
/Users/jenkins/jenkins/workspace/avr-gcc-staging/label/mac-mini/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:463
    1e6c:	96 95       	lsr	r25
    1e6e:	87 95       	ror	r24
    1e70:	77 95       	ror	r23
    1e72:	67 95       	ror	r22
/Users/jenkins/jenkins/workspace/avr-gcc-staging/label/mac-mini/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:465
    1e74:	98 f3       	brcs	.-26     	; 0x1e5c <__mulsi3_helper+0x6>
/Users/jenkins/jenkins/workspace/avr-gcc-staging/label/mac-mini/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:467
    1e76:	70 40       	sbci	r23, 0x00	; 0
/Users/jenkins/jenkins/workspace/avr-gcc-staging/label/mac-mini/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:468
    1e78:	a9 f7       	brne	.-22     	; 0x1e64 <__mulsi3_helper+0xe>
/Users/jenkins/jenkins/workspace/avr-gcc-staging/label/mac-mini/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:469
    1e7a:	00 97       	sbiw	r24, 0x00	; 0
/Users/jenkins/jenkins/workspace/avr-gcc-staging/label/mac-mini/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:470
    1e7c:	99 f7       	brne	.-26     	; 0x1e64 <__mulsi3_helper+0xe>
/Users/jenkins/jenkins/workspace/avr-gcc-staging/label/mac-mini/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:473
    1e7e:	bd 01       	movw	r22, r26
/Users/jenkins/jenkins/workspace/avr-gcc-staging/label/mac-mini/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:474
    1e80:	cf 01       	movw	r24, r30
/Users/jenkins/jenkins/workspace/avr-gcc-staging/label/mac-mini/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:480
    1e82:	08 95       	ret

00001e84 <__tablejump2__>:
__tablejump2__():
/Users/jenkins/jenkins/workspace/avr-gcc-staging/label/mac-mini/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2296
    1e84:	ee 0f       	add	r30, r30
/Users/jenkins/jenkins/workspace/avr-gcc-staging/label/mac-mini/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2297
    1e86:	ff 1f       	adc	r31, r31
/Users/jenkins/jenkins/workspace/avr-gcc-staging/label/mac-mini/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2328
    1e88:	05 90       	lpm	r0, Z+
/Users/jenkins/jenkins/workspace/avr-gcc-staging/label/mac-mini/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2329
    1e8a:	f4 91       	lpm	r31, Z
/Users/jenkins/jenkins/workspace/avr-gcc-staging/label/mac-mini/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2330
    1e8c:	e0 2d       	mov	r30, r0
/Users/jenkins/jenkins/workspace/avr-gcc-staging/label/mac-mini/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2331
    1e8e:	09 94       	ijmp

00001e90 <_exit>:
exit():
/Users/jenkins/jenkins/workspace/avr-gcc-staging/label/mac-mini/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2278
    1e90:	f8 94       	cli

00001e92 <__stop_program>:
__stop_program():
/Users/jenkins/jenkins/workspace/avr-gcc-staging/label/mac-mini/gcc-build/avr/avr25/libgcc/../../../../gcc/libgcc/config/avr/lib1funcs.S:2280
    1e92:	ff cf       	rjmp	.-2      	; 0x1e92 <__stop_program>
